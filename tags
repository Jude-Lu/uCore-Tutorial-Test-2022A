!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := target$/;"	m
ALIGN	lib/string.c	5;"	d	file:
ARCH	Makefile	/^ARCH ?= riscv64$/;"	m
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	447;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	450;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	456;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	460;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	462;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	468;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	471;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	474;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	479;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	482;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	485;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	490;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	493;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	496;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	499;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	502;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	505;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	508;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	511;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	514;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	517;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	522;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	525;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	528;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	531;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	534;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	537;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	540;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	432;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	435;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	441;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	447;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	456;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	459;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	464;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	467;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	470;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	475;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	478;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	481;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	484;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	487;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	490;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	493;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	496;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	499;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	502;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	507;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	510;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	513;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	516;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	519;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	522;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	525;"	d	file:
AT_FDCWD	include/stddef.h	61;"	d
BASE	Makefile	/^BASE ?= 0$/;"	m
BS	src/usershell.c	/^const unsigned char BS = 0x08;$/;"	v
CH2_BASE_TESTS	Makefile	/^CH2_BASE_TESTS := ch2b_$/;"	m
CH2_TESTS	Makefile	/^CH2_TESTS := $(CH2_BASE_TESTS)$/;"	m
CH3_BASE_TESTS	Makefile	/^CH3_BASE_TESTS := ch3b_ $(CH2_BASE_TESTS)$/;"	m
CH3_TESTS	Makefile	/^CH3_TESTS := $(CH3_BASE_TESTS)$/;"	m
CH3_TESTS	Makefile	/^CH3_TESTS := ch3b_ $(CH2_TESTS) ch3_$/;"	m
CH4_BASE_TESTS	Makefile	/^CH4_BASE_TESTS := $(CH2_BASE_TESTS) ch3b_yield # ch4b_$/;"	m
CH4_TESTS	Makefile	/^CH4_TESTS := $(CH4_BASE_TESTS) ch4_ ch3b_sleep ch3_$/;"	m
CH4_TESTS	Makefile	/^CH4_TESTS := $(CH4_BASE_TESTS)$/;"	m
CH5_BASE_TESTS	Makefile	/^CH5_BASE_TESTS := ch5b_ $(CH3_BASE_TESTS) usershell$/;"	m
CH5_SCHED_TEST	Makefile	/^CH5_SCHED_TEST := ch5t_$/;"	m
CH5_TESTS_BASE	Makefile	/^CH5_TESTS_BASE := $(CH5_BASE_TESTS)$/;"	m
CH5_TESTS_BASE	Makefile	/^CH5_TESTS_BASE := ch5b_ $(CH4_TESTS) ch5_ ch5t_ usershell $/;"	m
CH6_BASE_TESTS	Makefile	/^CH6_BASE_TESTS := ch6b_ $(CH5_BASE_TESTS) $/;"	m
CH6_TESTS	Makefile	/^CH6_TESTS := $(CH6_BASE_TESTS)$/;"	m
CH6_TESTS	Makefile	/^CH6_TESTS := ch6b_ $(CH5_TESTS_BASE) ch6_$/;"	m
CH7_BASE_TESTS	Makefile	/^CH7_BASE_TESTS := ch7b_ $(CH5_BASE_TESTS) $/;"	m
CH7_TESTS	Makefile	/^CH7_TESTS := $(CH7_BASE_TESTS)$/;"	m
CH7_TESTS	Makefile	/^CH7_TESTS := ch7b_ $(CH5_TESTS_BASE) ch7_$/;"	m
CH8_BASE_TESTS	Makefile	/^CH8_BASE_TESTS := ch8b_ $(CH6_BASE_TESTS) $/;"	m
CH8_TESTS	Makefile	/^CH8_TESTS := $(CH8_BASE_TESTS) ch8_$/;"	m
CH8_TESTS	Makefile	/^CH8_TESTS := $(CH8_BASE_TESTS)$/;"	m
CHAPTER	Makefile	/^CHAPTER ?= $/;"	m
CHAR_MAX	include/stddef.h	24;"	d
CH_TESTS	Makefile	/^	CH_TESTS := $(CH2_TESTS)$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := $(CH3_TESTS)$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := $(CH4_BASE_TESTS) ch3b_sleep ch3_taskinfo$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := $(CH4_TESTS)$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := $(CH5_SCHED_TEST)$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := $(CH5_TESTS_BASE)$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := $(CH6_TESTS)$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := $(CH7_TESTS)$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := $(CH8_TESTS)$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := __ch2_bad_$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := ch4_ ch4b_$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := ch5_ ch5b_ ch5t_$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := ch6_ ch6b_$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := ch7_ ch7b_$/;"	m
CH_TESTS	Makefile	/^	CH_TESTS := ch8_$/;"	m
CH_TESTS	Makefile	/^CH_TESTS :=  $/;"	m
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/zy\/uCore-Tutorial-Code-2022A\/user\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/zy\/uCore-Tutorial-Code-2022A\/user$/;"	m
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	151;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	189;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	243;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	271;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	280;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	294;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	269;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	296;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	299;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	290;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	102;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	211;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	102;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	189;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	272;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	285;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	72;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	87;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	201;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	297;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	153;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	195;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	286;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	28;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	303;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	207;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	81;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
CP	Makefile	/^CP := cp$/;"	m
CR	src/usershell.c	/^const unsigned char CR = 0x0d;$/;"	v
CXX_STD	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	608;"	d	file:
CXX_STD	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	610;"	d	file:
CXX_STD	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	613;"	d	file:
CXX_STD	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	616;"	d	file:
CXX_STD	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	618;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	623;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	625;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	628;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	630;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	632;"	d	file:
DEC	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	544;"	d	file:
DEC	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	529;"	d	file:
DIR	include/stddef.h	58;"	d
DL	src/usershell.c	/^const unsigned char DL = 0x7f;$/;"	v
Disassembly	asm/__ch2_bad_address.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/__ch2_bad_instruction.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/__ch2_bad_register.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch2b_exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch2b_hello_world.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch2b_power.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch3_taskinfo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch3b_sleep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch3b_sleep1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch3b_yield0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch3b_yield1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch3b_yield2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch4_mmap0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch4_mmap1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch4_mmap2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch4_mmap3.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch4_unmap0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch4_unmap1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5_exit0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5_exit1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5_mergetest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5_ppid.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5_setprio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5_spawn0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5_spawn1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5b_exec_simple.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5b_exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5b_forktest0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5b_forktest1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5b_forktest2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5b_getpid.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5b_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5t_stride0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5t_stride1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5t_stride2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5t_stride3.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5t_stride4.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5t_stride5.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch5t_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6_file0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6_file1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6_file2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6_file3.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6b_args.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6b_assert.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6b_cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6b_exec.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6b_filetest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6b_filetest_simple.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6b_panic.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch6b_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch7b_pipetest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch7b_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8_mut1_deadlock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8_sem1_deadlock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8_sem2_deadlock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_mpsc_sem.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_mut_phi_din.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_mut_race.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_spin_mut_race.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_sync_sem.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_test_condvar.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_threads.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_threads_arg.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/ch8b_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	asm/usershell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/__ch2_bad_address.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/__ch2_bad_instruction.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/__ch2_bad_register.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch2b_exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch2b_hello_world.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch2b_power.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch3_taskinfo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch3b_sleep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch3b_sleep1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch3b_yield0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch3b_yield1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch3b_yield2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch4_mmap0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch4_mmap1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch4_mmap2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch4_mmap3.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch4_unmap0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch4_unmap1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5_exit0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5_exit1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5_mergetest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5_ppid.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5_setprio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5_spawn0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5_spawn1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5b_exec_simple.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5b_exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5b_forktest0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5b_forktest1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5b_forktest2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5b_getpid.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5b_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5t_stride0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5t_stride1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5t_stride2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5t_stride3.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5t_stride4.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5t_stride5.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch5t_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6_file0.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6_file1.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6_file2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6_file3.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6b_args.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6b_assert.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6b_cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6b_exec.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6b_filetest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6b_filetest_simple.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6b_panic.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch6b_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch7b_pipetest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch7b_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8_mut1_deadlock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8_sem1_deadlock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8_sem2_deadlock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_mpsc_sem.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_mut_phi_din.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_mut_race.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_spin_mut_race.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_sync_sem.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_test_condvar.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_threads.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_threads_arg.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/ch8b_usertest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	build/asm/usershell.asm	/^Disassembly of section .text:$/;"	l
EOF	include/stdio.h	25;"	d
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
Exited	include/stddef.h	/^	Exited,$/;"	e	enum:__anon4
FAILS	src/ch5_mergetest.c	/^const char *FAILS[] = {$/;"	v
FAILS	src/ch6_usertest.c	/^const char *FAILS[] = {$/;"	v
FILE	include/stddef.h	59;"	d
HASZERO	asm/__ch2_bad_address.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/__ch2_bad_instruction.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/__ch2_bad_register.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch2b_exit.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch2b_hello_world.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch2b_power.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch3_taskinfo.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch3b_sleep.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch3b_sleep1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch3b_yield0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch3b_yield1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch3b_yield2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch4_mmap0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch4_mmap1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch4_mmap2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch4_mmap3.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch4_unmap0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch4_unmap1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5_exit0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5_exit1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5_mergetest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5_ppid.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5_setprio.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5_spawn0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5_spawn1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5b_exec_simple.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5b_exit.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5b_forktest0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5b_forktest1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5b_forktest2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5b_getpid.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5b_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5t_stride0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5t_stride1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5t_stride2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5t_stride3.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5t_stride4.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5t_stride5.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch5t_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6_file0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6_file1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6_file2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6_file3.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6b_args.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6b_assert.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6b_cat.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6b_exec.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6b_filetest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6b_filetest_simple.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6b_panic.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch6b_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch7b_pipetest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch7b_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8_mut1_deadlock.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8_sem1_deadlock.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8_sem2_deadlock.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_mpsc_sem.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_mut_phi_din.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_mut_race.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_spin_mut_race.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_sync_sem.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_test_condvar.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_threads.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_threads_arg.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/ch8b_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	asm/usershell.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/__ch2_bad_address.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/__ch2_bad_instruction.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/__ch2_bad_register.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch2b_exit.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch2b_hello_world.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch2b_power.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch3_taskinfo.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch3b_sleep.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch3b_sleep1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch3b_yield0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch3b_yield1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch3b_yield2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch4_mmap0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch4_mmap1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch4_mmap2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch4_mmap3.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch4_unmap0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch4_unmap1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5_exit0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5_exit1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5_mergetest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5_ppid.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5_setprio.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5_spawn0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5_spawn1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5b_exec_simple.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5b_exit.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5b_forktest0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5b_forktest1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5b_forktest2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5b_getpid.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5b_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5t_stride0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5t_stride1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5t_stride2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5t_stride3.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5t_stride4.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5t_stride5.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch5t_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6_file0.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6_file1.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6_file2.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6_file3.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6b_args.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6b_assert.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6b_cat.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6b_exec.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6b_filetest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6b_filetest_simple.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6b_panic.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch6b_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch7b_pipetest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch7b_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8_mut1_deadlock.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8_sem1_deadlock.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8_sem2_deadlock.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_mpsc_sem.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_mut_phi_din.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_mut_race.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_spin_mut_race.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_sync_sem.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_test_condvar.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_threads.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_threads_arg.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/ch8b_usertest.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	build/asm/usershell.asm	/^#define HASZERO(x) (((x)-ONES) & ~(x)&HIGHS)$/;"	d
HASZERO	lib/string.c	8;"	d	file:
HEIGHT	src/ch3b_yield0.c	/^const int HEIGHT = 5;$/;"	v
HEIGHT	src/ch3b_yield1.c	/^const int HEIGHT = 5;$/;"	v
HEIGHT	src/ch3b_yield2.c	/^const int HEIGHT = 5;$/;"	v
HEX	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
HEX	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	540;"	d	file:
HIGHS	asm/__ch2_bad_address.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/__ch2_bad_instruction.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/__ch2_bad_register.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch2b_exit.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch2b_hello_world.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch2b_power.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch3_taskinfo.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch3b_sleep.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch3b_sleep1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch3b_yield0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch3b_yield1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch3b_yield2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch4_mmap0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch4_mmap1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch4_mmap2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch4_mmap3.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch4_unmap0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch4_unmap1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5_exit0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5_exit1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5_mergetest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5_ppid.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5_setprio.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5_spawn0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5_spawn1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5b_exec_simple.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5b_exit.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5b_forktest0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5b_forktest1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5b_forktest2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5b_getpid.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5b_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5t_stride0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5t_stride1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5t_stride2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5t_stride3.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5t_stride4.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5t_stride5.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch5t_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6_file0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6_file1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6_file2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6_file3.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6b_args.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6b_assert.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6b_cat.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6b_exec.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6b_filetest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6b_filetest_simple.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6b_panic.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch6b_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch7b_pipetest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch7b_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8_mut1_deadlock.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8_sem1_deadlock.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8_sem2_deadlock.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_mpsc_sem.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_mut_phi_din.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_mut_race.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_spin_mut_race.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_sync_sem.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_test_condvar.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_threads.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_threads_arg.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/ch8b_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	asm/usershell.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/__ch2_bad_address.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/__ch2_bad_instruction.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/__ch2_bad_register.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch2b_exit.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch2b_hello_world.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch2b_power.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch3_taskinfo.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch3b_sleep.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch3b_sleep1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch3b_yield0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch3b_yield1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch3b_yield2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch4_mmap0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch4_mmap1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch4_mmap2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch4_mmap3.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch4_unmap0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch4_unmap1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5_exit0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5_exit1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5_mergetest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5_ppid.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5_setprio.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5_spawn0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5_spawn1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5b_exec_simple.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5b_exit.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5b_forktest0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5b_forktest1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5b_forktest2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5b_getpid.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5b_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5t_stride0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5t_stride1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5t_stride2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5t_stride3.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5t_stride4.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5t_stride5.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch5t_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6_file0.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6_file1.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6_file2.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6_file3.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6b_args.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6b_assert.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6b_cat.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6b_exec.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6b_filetest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6b_filetest_simple.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6b_panic.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch6b_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch7b_pipetest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch7b_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8_mut1_deadlock.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8_sem1_deadlock.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8_sem2_deadlock.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_mpsc_sem.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_mut_phi_din.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_mut_race.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_spin_mut_race.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_sync_sem.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_test_condvar.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_threads.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_threads_arg.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/ch8b_usertest.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	build/asm/usershell.asm	/^#define HIGHS (ONES * (UCHAR_MAX \/ 2 + 1))$/;"	d
HIGHS	lib/string.c	7;"	d	file:
ID_VOID_MAIN	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
INTMAX_MAX	include/stddef.h	20;"	d
INT_MAX	include/stddef.h	22;"	d
IPC_64	lib/arch/riscv/syscall_arch.h	79;"	d
LF	src/usershell.c	/^const unsigned char LF = 0x0a;$/;"	v
LONG_MAX	include/stddef.h	19;"	d
LOOP	asm/ch8b_threads.asm	/^#define LOOP 1000$/;"	d
LOOP	build/asm/ch8b_threads.asm	/^#define LOOP 1000$/;"	d
LOOP	src/ch8b_threads.c	5;"	d	file:
LOOP	src/ch8b_threads_arg.c	5;"	d	file:
MAGIC	src/ch2b_exit.c	/^const int MAGIC = 1234;$/;"	v
MAGIC	src/ch5b_exit.c	/^const int MAGIC = 0x1234;$/;"	v
MAP_ANONYMOUS	include/stddef.h	96;"	d
MAP_SHARED	include/stddef.h	97;"	d
MAX	asm/__ch2_bad_address.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/__ch2_bad_instruction.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/__ch2_bad_register.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch2b_exit.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch2b_hello_world.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch2b_power.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch3_taskinfo.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch3b_sleep.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch3b_sleep1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch3b_yield0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch3b_yield1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch3b_yield2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch4_mmap0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch4_mmap1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch4_mmap2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch4_mmap3.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch4_unmap0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch4_unmap1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5_exit0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5_exit1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5_mergetest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5_ppid.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5_setprio.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5_spawn0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5_spawn1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5b_exec_simple.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5b_exit.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5b_forktest0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5b_forktest1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5b_forktest2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5b_getpid.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5b_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5t_stride0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5t_stride1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5t_stride2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5t_stride3.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5t_stride4.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5t_stride5.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch5t_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6_file0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6_file1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6_file2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6_file3.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6b_args.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6b_assert.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6b_cat.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6b_exec.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6b_filetest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6b_filetest_simple.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6b_panic.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch6b_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch7b_pipetest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch7b_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8_mut1_deadlock.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8_sem1_deadlock.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8_sem2_deadlock.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_mpsc_sem.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_mut_phi_din.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_mut_race.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_spin_mut_race.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_sync_sem.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_test_condvar.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_threads.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_threads_arg.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/ch8b_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	asm/usershell.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/__ch2_bad_address.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/__ch2_bad_instruction.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/__ch2_bad_register.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch2b_exit.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch2b_hello_world.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch2b_power.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch3_taskinfo.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch3b_sleep.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch3b_sleep1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch3b_yield0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch3b_yield1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch3b_yield2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch4_mmap0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch4_mmap1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch4_mmap2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch4_mmap3.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch4_unmap0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch4_unmap1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5_exit0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5_exit1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5_mergetest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5_ppid.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5_setprio.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5_spawn0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5_spawn1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5b_exec_simple.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5b_exit.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5b_forktest0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5b_forktest1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5b_forktest2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5b_getpid.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5b_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5t_stride0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5t_stride1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5t_stride2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5t_stride3.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5t_stride4.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5t_stride5.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch5t_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6_file0.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6_file1.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6_file2.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6_file3.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6b_args.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6b_assert.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6b_cat.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6b_exec.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6b_filetest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6b_filetest_simple.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6b_panic.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch6b_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch7b_pipetest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch7b_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8_mut1_deadlock.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8_sem1_deadlock.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8_sem2_deadlock.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_mpsc_sem.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_mut_phi_din.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_mut_race.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_spin_mut_race.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_sync_sem.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_test_condvar.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_threads.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_threads_arg.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/ch8b_usertest.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	build/asm/usershell.asm	/^#define MAX(a, b) ((a) > (b) ? (a) : (b))$/;"	d
MAX	lib/stdio.c	7;"	d	file:
MAX_ARG_NUM	src/usershell.c	6;"	d	file:
MAX_CHILD	src/ch5_spawn0.c	/^const int MAX_CHILD = 40;$/;"	v
MAX_CHILD	src/ch5b_forktest1.c	/^const int MAX_CHILD = 40;$/;"	v
MAX_STR_LEN	src/usershell.c	7;"	d	file:
MAX_SYSCALL_NUM	include/stddef.h	63;"	d
MAX_TIME	src/ch5t_stride0.c	/^const int MAX_TIME = 1000;$/;"	v
MAX_TIME	src/ch5t_stride1.c	/^const int MAX_TIME = 1000;$/;"	v
MAX_TIME	src/ch5t_stride2.c	/^const int MAX_TIME = 1000;$/;"	v
MAX_TIME	src/ch5t_stride3.c	/^const int MAX_TIME = 1000;$/;"	v
MAX_TIME	src/ch5t_stride4.c	/^const int MAX_TIME = 1000;$/;"	v
MAX_TIME	src/ch5t_stride5.c	/^const int MAX_TIME = 1000;$/;"	v
MIN	asm/__ch2_bad_address.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/__ch2_bad_instruction.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/__ch2_bad_register.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch2b_exit.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch2b_hello_world.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch2b_power.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch3_taskinfo.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch3b_sleep.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch3b_sleep1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch3b_yield0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch3b_yield1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch3b_yield2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch4_mmap0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch4_mmap1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch4_mmap2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch4_mmap3.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch4_unmap0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch4_unmap1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5_exit0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5_exit1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5_mergetest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5_ppid.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5_setprio.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5_spawn0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5_spawn1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5b_exec_simple.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5b_exit.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5b_forktest0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5b_forktest1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5b_forktest2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5b_getpid.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5b_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5t_stride0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5t_stride1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5t_stride2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5t_stride3.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5t_stride4.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5t_stride5.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch5t_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6_file0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6_file1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6_file2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6_file3.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6b_args.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6b_assert.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6b_cat.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6b_exec.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6b_filetest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6b_filetest_simple.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6b_panic.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch6b_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch7b_pipetest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch7b_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8_mut1_deadlock.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8_sem1_deadlock.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8_sem2_deadlock.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_mpsc_sem.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_mut_phi_din.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_mut_race.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_spin_mut_race.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_sync_sem.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_test_condvar.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_threads.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_threads_arg.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/ch8b_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	asm/usershell.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/__ch2_bad_address.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/__ch2_bad_instruction.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/__ch2_bad_register.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch2b_exit.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch2b_hello_world.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch2b_power.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch3_taskinfo.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch3b_sleep.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch3b_sleep1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch3b_yield0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch3b_yield1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch3b_yield2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch4_mmap0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch4_mmap1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch4_mmap2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch4_mmap3.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch4_unmap0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch4_unmap1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5_exit0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5_exit1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5_mergetest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5_ppid.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5_setprio.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5_spawn0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5_spawn1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5b_exec_simple.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5b_exit.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5b_forktest0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5b_forktest1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5b_forktest2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5b_getpid.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5b_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5t_stride0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5t_stride1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5t_stride2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5t_stride3.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5t_stride4.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5t_stride5.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch5t_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6_file0.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6_file1.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6_file2.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6_file3.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6b_args.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6b_assert.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6b_cat.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6b_exec.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6b_filetest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6b_filetest_simple.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6b_panic.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch6b_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch7b_pipetest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch7b_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8_mut1_deadlock.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8_sem1_deadlock.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8_sem2_deadlock.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_mpsc_sem.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_mut_phi_din.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_mut_race.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_spin_mut_race.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_sync_sem.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_test_condvar.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_threads.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_threads_arg.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/ch8b_usertest.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	build/asm/usershell.asm	/^#define MIN(a, b) ((a) < (b) ? (a) : (b))$/;"	d
MIN	lib/stdio.c	8;"	d	file:
MOD	src/ch2b_power.c	/^const int MOD = 10007;$/;"	v
MODE	Makefile	/^MODE ?= release$/;"	m
N	src/ch8b_mut_phi_din.c	5;"	d	file:
NTHREAD	asm/ch8b_threads.asm	/^#define NTHREAD 3$/;"	d
NTHREAD	build/asm/ch8b_threads.asm	/^#define NTHREAD 3$/;"	d
NTHREAD	src/ch8b_threads.c	6;"	d	file:
NTHREAD	src/ch8b_threads_arg.c	6;"	d	file:
NULL	include/stddef.h	45;"	d
NUM	src/ch5b_forktest2.c	/^const int NUM = 5;$/;"	v
OBJCOPY	Makefile	/^OBJCOPY := $(ARCH)-linux-musl-objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(ARCH)-linux-musl-objdump$/;"	m
ONES	lib/string.c	6;"	d	file:
O_CREATE	include/fcntl.h	7;"	d
O_CREATE	include/stddef.h	56;"	d
O_RDONLY	include/fcntl.h	4;"	d
O_RDONLY	include/stddef.h	53;"	d
O_RDWR	include/fcntl.h	6;"	d
O_RDWR	include/stddef.h	55;"	d
O_TRUNC	include/fcntl.h	8;"	d
O_WRONLY	include/fcntl.h	5;"	d
O_WRONLY	include/stddef.h	54;"	d
P	src/ch2b_power.c	/^const int P = 3;$/;"	v
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	339;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	342;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	345;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	348;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	351;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	354;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	357;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	360;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	363;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	366;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	384;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	387;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	390;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	393;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	402;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	405;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	412;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	415;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	418;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	421;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	432;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	436;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	363;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	366;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	369;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	372;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	375;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	378;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	381;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	384;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	387;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	390;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	393;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	397;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	400;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	403;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	406;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	417;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	421;"	d	file:
RES_TYPE	src/ch8_sem1_deadlock.c	12;"	d	file:
RES_TYPE	src/ch8_sem2_deadlock.c	13;"	d	file:
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ROUND	src/ch8b_mut_phi_din.c	6;"	d	file:
Ready	include/stddef.h	/^	Ready,$/;"	e	enum:__anon4
Running	include/stddef.h	/^	Running,$/;"	e	enum:__anon4
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	209;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	203;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	216;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	49;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	41;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
SIZE	src/ch2b_power.c	/^const int SIZE = 10;$/;"	v
SLEEP_SCALE	src/ch8b_mut_phi_din.c	7;"	d	file:
SS	lib/string.c	4;"	d	file:
STEP	src/ch2b_power.c	/^const int STEP = 100000;$/;"	v
STR	src/ch7b_pipetest.c	/^char STR[] = "hello pipe!";$/;"	v
STR	src/ch7b_sigtest.c	/^char STR[] = "hello pipe!";$/;"	v
STRINGIFY	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
STRINGIFY	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	320;"	d	file:
STRINGIFY	include/stdlib.h	11;"	d
STRINGIFY_HELPER	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SYSCALL_EXIT	src/ch3_taskinfo.c	6;"	d	file:
SYSCALL_GETTIMEOFDAY	src/ch3_taskinfo.c	8;"	d	file:
SYSCALL_TASK_INFO	src/ch3_taskinfo.c	9;"	d	file:
SYSCALL_WRITE	src/ch3_taskinfo.c	5;"	d	file:
SYSCALL_YIELD	src/ch3_taskinfo.c	7;"	d	file:
SYS_accept	lib/syscall_ids.h	202;"	d
SYS_accept4	lib/syscall_ids.h	242;"	d
SYS_acct	lib/syscall_ids.h	89;"	d
SYS_add_key	lib/syscall_ids.h	217;"	d
SYS_adjtimex	lib/syscall_ids.h	171;"	d
SYS_arch_specific_syscall	lib/syscall_ids.h	244;"	d
SYS_bind	lib/syscall_ids.h	200;"	d
SYS_bpf	lib/syscall_ids.h	265;"	d
SYS_brk	lib/syscall_ids.h	214;"	d
SYS_capget	lib/syscall_ids.h	90;"	d
SYS_capset	lib/syscall_ids.h	91;"	d
SYS_chdir	lib/syscall_ids.h	49;"	d
SYS_chroot	lib/syscall_ids.h	51;"	d
SYS_clock_adjtime	lib/syscall_ids.h	251;"	d
SYS_clock_getres	lib/syscall_ids.h	114;"	d
SYS_clock_gettime	lib/syscall_ids.h	113;"	d
SYS_clock_nanosleep	lib/syscall_ids.h	115;"	d
SYS_clock_settime	lib/syscall_ids.h	112;"	d
SYS_clone	lib/syscall_ids.h	220;"	d
SYS_close	lib/syscall_ids.h	57;"	d
SYS_condvar_create	lib/syscall_ids.h	294;"	d
SYS_condvar_signal	lib/syscall_ids.h	295;"	d
SYS_condvar_wait	lib/syscall_ids.h	296;"	d
SYS_connect	lib/syscall_ids.h	203;"	d
SYS_copy_file_range	lib/syscall_ids.h	270;"	d
SYS_delete_module	lib/syscall_ids.h	106;"	d
SYS_dup	lib/syscall_ids.h	24;"	d
SYS_dup3	lib/syscall_ids.h	25;"	d
SYS_enable_deadlock_detect	lib/syscall_ids.h	292;"	d
SYS_epoll_create1	lib/syscall_ids.h	21;"	d
SYS_epoll_ctl	lib/syscall_ids.h	22;"	d
SYS_epoll_pwait	lib/syscall_ids.h	23;"	d
SYS_eventfd2	lib/syscall_ids.h	20;"	d
SYS_execve	lib/syscall_ids.h	221;"	d
SYS_execveat	lib/syscall_ids.h	266;"	d
SYS_exit	lib/syscall_ids.h	93;"	d
SYS_exit_group	lib/syscall_ids.h	94;"	d
SYS_faccessat	lib/syscall_ids.h	48;"	d
SYS_fadvise64	lib/syscall_ids.h	223;"	d
SYS_fallocate	lib/syscall_ids.h	47;"	d
SYS_fanotify_init	lib/syscall_ids.h	247;"	d
SYS_fanotify_mark	lib/syscall_ids.h	248;"	d
SYS_fchdir	lib/syscall_ids.h	50;"	d
SYS_fchmod	lib/syscall_ids.h	52;"	d
SYS_fchmodat	lib/syscall_ids.h	53;"	d
SYS_fchown	lib/syscall_ids.h	55;"	d
SYS_fchownat	lib/syscall_ids.h	54;"	d
SYS_fcntl	lib/syscall_ids.h	26;"	d
SYS_fdatasync	lib/syscall_ids.h	83;"	d
SYS_fgetxattr	lib/syscall_ids.h	11;"	d
SYS_finit_module	lib/syscall_ids.h	258;"	d
SYS_flistxattr	lib/syscall_ids.h	14;"	d
SYS_flock	lib/syscall_ids.h	33;"	d
SYS_fremovexattr	lib/syscall_ids.h	17;"	d
SYS_fsetxattr	lib/syscall_ids.h	8;"	d
SYS_fstat	lib/syscall_ids.h	80;"	d
SYS_fstatat	lib/syscall_ids.h	79;"	d
SYS_fstatfs	lib/syscall_ids.h	44;"	d
SYS_fsync	lib/syscall_ids.h	82;"	d
SYS_ftruncate	lib/syscall_ids.h	46;"	d
SYS_futex	lib/syscall_ids.h	98;"	d
SYS_get_mempolicy	lib/syscall_ids.h	236;"	d
SYS_get_robust_list	lib/syscall_ids.h	100;"	d
SYS_getcpu	lib/syscall_ids.h	168;"	d
SYS_getcwd	lib/syscall_ids.h	18;"	d
SYS_getdents64	lib/syscall_ids.h	61;"	d
SYS_getegid	lib/syscall_ids.h	177;"	d
SYS_geteuid	lib/syscall_ids.h	175;"	d
SYS_getgid	lib/syscall_ids.h	176;"	d
SYS_getgroups	lib/syscall_ids.h	158;"	d
SYS_getitimer	lib/syscall_ids.h	102;"	d
SYS_getpeername	lib/syscall_ids.h	205;"	d
SYS_getpgid	lib/syscall_ids.h	155;"	d
SYS_getpid	lib/syscall_ids.h	172;"	d
SYS_getppid	lib/syscall_ids.h	173;"	d
SYS_getpriority	lib/syscall_ids.h	141;"	d
SYS_getrandom	lib/syscall_ids.h	263;"	d
SYS_getresgid	lib/syscall_ids.h	150;"	d
SYS_getresuid	lib/syscall_ids.h	148;"	d
SYS_getrlimit	lib/syscall_ids.h	163;"	d
SYS_getrusage	lib/syscall_ids.h	165;"	d
SYS_getsid	lib/syscall_ids.h	156;"	d
SYS_getsockname	lib/syscall_ids.h	204;"	d
SYS_getsockopt	lib/syscall_ids.h	209;"	d
SYS_gettid	lib/syscall_ids.h	178;"	d
SYS_gettimeofday	lib/syscall_ids.h	169;"	d
SYS_getuid	lib/syscall_ids.h	174;"	d
SYS_getxattr	lib/syscall_ids.h	9;"	d
SYS_init_module	lib/syscall_ids.h	105;"	d
SYS_inotify_add_watch	lib/syscall_ids.h	28;"	d
SYS_inotify_init1	lib/syscall_ids.h	27;"	d
SYS_inotify_rm_watch	lib/syscall_ids.h	29;"	d
SYS_io_cancel	lib/syscall_ids.h	4;"	d
SYS_io_destroy	lib/syscall_ids.h	2;"	d
SYS_io_getevents	lib/syscall_ids.h	5;"	d
SYS_io_pgetevents	lib/syscall_ids.h	277;"	d
SYS_io_setup	lib/syscall_ids.h	1;"	d
SYS_io_submit	lib/syscall_ids.h	3;"	d
SYS_ioctl	lib/syscall_ids.h	30;"	d
SYS_ioprio_get	lib/syscall_ids.h	32;"	d
SYS_ioprio_set	lib/syscall_ids.h	31;"	d
SYS_kcmp	lib/syscall_ids.h	257;"	d
SYS_kexec_file_load	lib/syscall_ids.h	279;"	d
SYS_kexec_load	lib/syscall_ids.h	104;"	d
SYS_keyctl	lib/syscall_ids.h	219;"	d
SYS_kill	lib/syscall_ids.h	129;"	d
SYS_lgetxattr	lib/syscall_ids.h	10;"	d
SYS_linkat	lib/syscall_ids.h	38;"	d
SYS_listen	lib/syscall_ids.h	201;"	d
SYS_listxattr	lib/syscall_ids.h	12;"	d
SYS_llistxattr	lib/syscall_ids.h	13;"	d
SYS_lookup_dcookie	lib/syscall_ids.h	19;"	d
SYS_lremovexattr	lib/syscall_ids.h	16;"	d
SYS_lseek	lib/syscall_ids.h	62;"	d
SYS_lsetxattr	lib/syscall_ids.h	7;"	d
SYS_madvise	lib/syscall_ids.h	233;"	d
SYS_mailread	lib/syscall_ids.h	282;"	d
SYS_mailwrite	lib/syscall_ids.h	283;"	d
SYS_mbind	lib/syscall_ids.h	235;"	d
SYS_membarrier	lib/syscall_ids.h	268;"	d
SYS_memfd_create	lib/syscall_ids.h	264;"	d
SYS_migrate_pages	lib/syscall_ids.h	238;"	d
SYS_mincore	lib/syscall_ids.h	232;"	d
SYS_mkdirat	lib/syscall_ids.h	35;"	d
SYS_mknodat	lib/syscall_ids.h	34;"	d
SYS_mlock	lib/syscall_ids.h	228;"	d
SYS_mlock2	lib/syscall_ids.h	269;"	d
SYS_mlockall	lib/syscall_ids.h	230;"	d
SYS_mmap	lib/syscall_ids.h	222;"	d
SYS_mount	lib/syscall_ids.h	40;"	d
SYS_move_pages	lib/syscall_ids.h	239;"	d
SYS_mprotect	lib/syscall_ids.h	226;"	d
SYS_mq_getsetattr	lib/syscall_ids.h	185;"	d
SYS_mq_notify	lib/syscall_ids.h	184;"	d
SYS_mq_open	lib/syscall_ids.h	180;"	d
SYS_mq_timedreceive	lib/syscall_ids.h	183;"	d
SYS_mq_timedsend	lib/syscall_ids.h	182;"	d
SYS_mq_unlink	lib/syscall_ids.h	181;"	d
SYS_mremap	lib/syscall_ids.h	216;"	d
SYS_msgctl	lib/syscall_ids.h	187;"	d
SYS_msgget	lib/syscall_ids.h	186;"	d
SYS_msgrcv	lib/syscall_ids.h	188;"	d
SYS_msgsnd	lib/syscall_ids.h	189;"	d
SYS_msync	lib/syscall_ids.h	227;"	d
SYS_munlock	lib/syscall_ids.h	229;"	d
SYS_munlockall	lib/syscall_ids.h	231;"	d
SYS_munmap	lib/syscall_ids.h	215;"	d
SYS_mutex_create	lib/syscall_ids.h	287;"	d
SYS_mutex_lock	lib/syscall_ids.h	288;"	d
SYS_mutex_unlock	lib/syscall_ids.h	289;"	d
SYS_name_to_handle_at	lib/syscall_ids.h	249;"	d
SYS_nanosleep	lib/syscall_ids.h	101;"	d
SYS_nfsservctl	lib/syscall_ids.h	42;"	d
SYS_open_by_handle_at	lib/syscall_ids.h	250;"	d
SYS_openat	lib/syscall_ids.h	56;"	d
SYS_perf_event_open	lib/syscall_ids.h	241;"	d
SYS_personality	lib/syscall_ids.h	92;"	d
SYS_pipe2	lib/syscall_ids.h	59;"	d
SYS_pivot_root	lib/syscall_ids.h	41;"	d
SYS_pkey_alloc	lib/syscall_ids.h	274;"	d
SYS_pkey_free	lib/syscall_ids.h	275;"	d
SYS_pkey_mprotect	lib/syscall_ids.h	273;"	d
SYS_ppoll	lib/syscall_ids.h	73;"	d
SYS_prctl	lib/syscall_ids.h	167;"	d
SYS_pread64	lib/syscall_ids.h	67;"	d
SYS_preadv	lib/syscall_ids.h	69;"	d
SYS_preadv2	lib/syscall_ids.h	271;"	d
SYS_prlimit64	lib/syscall_ids.h	246;"	d
SYS_process_vm_readv	lib/syscall_ids.h	255;"	d
SYS_process_vm_writev	lib/syscall_ids.h	256;"	d
SYS_pselect6	lib/syscall_ids.h	72;"	d
SYS_ptrace	lib/syscall_ids.h	117;"	d
SYS_pwrite64	lib/syscall_ids.h	68;"	d
SYS_pwritev	lib/syscall_ids.h	70;"	d
SYS_pwritev2	lib/syscall_ids.h	272;"	d
SYS_quotactl	lib/syscall_ids.h	60;"	d
SYS_read	lib/syscall_ids.h	63;"	d
SYS_readahead	lib/syscall_ids.h	213;"	d
SYS_readlinkat	lib/syscall_ids.h	78;"	d
SYS_readv	lib/syscall_ids.h	65;"	d
SYS_reboot	lib/syscall_ids.h	142;"	d
SYS_recvfrom	lib/syscall_ids.h	207;"	d
SYS_recvmmsg	lib/syscall_ids.h	243;"	d
SYS_recvmsg	lib/syscall_ids.h	212;"	d
SYS_remap_file_pages	lib/syscall_ids.h	234;"	d
SYS_removexattr	lib/syscall_ids.h	15;"	d
SYS_renameat2	lib/syscall_ids.h	261;"	d
SYS_request_key	lib/syscall_ids.h	218;"	d
SYS_restart_syscall	lib/syscall_ids.h	128;"	d
SYS_riscv_flush_icache	lib/syscall_ids.h	280;"	d
SYS_rseq	lib/syscall_ids.h	278;"	d
SYS_rt_sigaction	lib/syscall_ids.h	134;"	d
SYS_rt_sigpending	lib/syscall_ids.h	136;"	d
SYS_rt_sigprocmask	lib/syscall_ids.h	135;"	d
SYS_rt_sigqueueinfo	lib/syscall_ids.h	138;"	d
SYS_rt_sigreturn	lib/syscall_ids.h	139;"	d
SYS_rt_sigsuspend	lib/syscall_ids.h	133;"	d
SYS_rt_sigtimedwait	lib/syscall_ids.h	137;"	d
SYS_rt_tgsigqueueinfo	lib/syscall_ids.h	240;"	d
SYS_sched_get_priority_max	lib/syscall_ids.h	125;"	d
SYS_sched_get_priority_min	lib/syscall_ids.h	126;"	d
SYS_sched_getaffinity	lib/syscall_ids.h	123;"	d
SYS_sched_getattr	lib/syscall_ids.h	260;"	d
SYS_sched_getparam	lib/syscall_ids.h	121;"	d
SYS_sched_getscheduler	lib/syscall_ids.h	120;"	d
SYS_sched_rr_get_interval	lib/syscall_ids.h	127;"	d
SYS_sched_setaffinity	lib/syscall_ids.h	122;"	d
SYS_sched_setattr	lib/syscall_ids.h	259;"	d
SYS_sched_setparam	lib/syscall_ids.h	118;"	d
SYS_sched_setscheduler	lib/syscall_ids.h	119;"	d
SYS_sched_yield	lib/syscall_ids.h	124;"	d
SYS_seccomp	lib/syscall_ids.h	262;"	d
SYS_semaphore_create	lib/syscall_ids.h	290;"	d
SYS_semaphore_down	lib/syscall_ids.h	293;"	d
SYS_semaphore_up	lib/syscall_ids.h	291;"	d
SYS_semctl	lib/syscall_ids.h	191;"	d
SYS_semget	lib/syscall_ids.h	190;"	d
SYS_semop	lib/syscall_ids.h	193;"	d
SYS_semtimedop	lib/syscall_ids.h	192;"	d
SYS_sendfile	lib/syscall_ids.h	71;"	d
SYS_sendmmsg	lib/syscall_ids.h	254;"	d
SYS_sendmsg	lib/syscall_ids.h	211;"	d
SYS_sendto	lib/syscall_ids.h	206;"	d
SYS_set_mempolicy	lib/syscall_ids.h	237;"	d
SYS_set_robust_list	lib/syscall_ids.h	99;"	d
SYS_set_tid_address	lib/syscall_ids.h	96;"	d
SYS_setdomainname	lib/syscall_ids.h	162;"	d
SYS_setfsgid	lib/syscall_ids.h	152;"	d
SYS_setfsuid	lib/syscall_ids.h	151;"	d
SYS_setgid	lib/syscall_ids.h	144;"	d
SYS_setgroups	lib/syscall_ids.h	159;"	d
SYS_sethostname	lib/syscall_ids.h	161;"	d
SYS_setitimer	lib/syscall_ids.h	103;"	d
SYS_setns	lib/syscall_ids.h	253;"	d
SYS_setpgid	lib/syscall_ids.h	154;"	d
SYS_setpriority	lib/syscall_ids.h	140;"	d
SYS_setregid	lib/syscall_ids.h	143;"	d
SYS_setresgid	lib/syscall_ids.h	149;"	d
SYS_setresuid	lib/syscall_ids.h	147;"	d
SYS_setreuid	lib/syscall_ids.h	145;"	d
SYS_setrlimit	lib/syscall_ids.h	164;"	d
SYS_setsid	lib/syscall_ids.h	157;"	d
SYS_setsockopt	lib/syscall_ids.h	208;"	d
SYS_settimeofday	lib/syscall_ids.h	170;"	d
SYS_setuid	lib/syscall_ids.h	146;"	d
SYS_setxattr	lib/syscall_ids.h	6;"	d
SYS_shmat	lib/syscall_ids.h	196;"	d
SYS_shmctl	lib/syscall_ids.h	195;"	d
SYS_shmdt	lib/syscall_ids.h	197;"	d
SYS_shmget	lib/syscall_ids.h	194;"	d
SYS_shutdown	lib/syscall_ids.h	210;"	d
SYS_sigact	lib/syscall_ids.h	297;"	d
SYS_sigaltstack	lib/syscall_ids.h	132;"	d
SYS_signalfd4	lib/syscall_ids.h	74;"	d
SYS_socket	lib/syscall_ids.h	198;"	d
SYS_socketpair	lib/syscall_ids.h	199;"	d
SYS_spawn	lib/syscall_ids.h	281;"	d
SYS_splice	lib/syscall_ids.h	76;"	d
SYS_statfs	lib/syscall_ids.h	43;"	d
SYS_statx	lib/syscall_ids.h	276;"	d
SYS_swapoff	lib/syscall_ids.h	225;"	d
SYS_swapon	lib/syscall_ids.h	224;"	d
SYS_symlinkat	lib/syscall_ids.h	37;"	d
SYS_sync	lib/syscall_ids.h	81;"	d
SYS_sync_file_range	lib/syscall_ids.h	84;"	d
SYS_syncfs	lib/syscall_ids.h	252;"	d
SYS_sysinfo	lib/syscall_ids.h	179;"	d
SYS_syslog	lib/syscall_ids.h	116;"	d
SYS_task_info	lib/syscall_ids.h	284;"	d
SYS_tee	lib/syscall_ids.h	77;"	d
SYS_tgkill	lib/syscall_ids.h	131;"	d
SYS_thread_create	lib/syscall_ids.h	285;"	d
SYS_timer_create	lib/syscall_ids.h	107;"	d
SYS_timer_delete	lib/syscall_ids.h	111;"	d
SYS_timer_getoverrun	lib/syscall_ids.h	109;"	d
SYS_timer_gettime	lib/syscall_ids.h	108;"	d
SYS_timer_settime	lib/syscall_ids.h	110;"	d
SYS_timerfd_create	lib/syscall_ids.h	85;"	d
SYS_timerfd_gettime	lib/syscall_ids.h	87;"	d
SYS_timerfd_settime	lib/syscall_ids.h	86;"	d
SYS_times	lib/syscall_ids.h	153;"	d
SYS_tkill	lib/syscall_ids.h	130;"	d
SYS_truncate	lib/syscall_ids.h	45;"	d
SYS_umask	lib/syscall_ids.h	166;"	d
SYS_umount2	lib/syscall_ids.h	39;"	d
SYS_uname	lib/syscall_ids.h	160;"	d
SYS_unlinkat	lib/syscall_ids.h	36;"	d
SYS_unshare	lib/syscall_ids.h	97;"	d
SYS_userfaultfd	lib/syscall_ids.h	267;"	d
SYS_utimensat	lib/syscall_ids.h	88;"	d
SYS_vhangup	lib/syscall_ids.h	58;"	d
SYS_vmsplice	lib/syscall_ids.h	75;"	d
SYS_wait4	lib/syscall_ids.h	245;"	d
SYS_waitid	lib/syscall_ids.h	95;"	d
SYS_waittid	lib/syscall_ids.h	286;"	d
SYS_write	lib/syscall_ids.h	64;"	d
SYS_writev	lib/syscall_ids.h	66;"	d
Stat	include/stddef.h	/^} Stat;$/;"	t	typeref:struct:__anon2
TESTS	src/ch5_mergetest.c	/^const char *TESTS[] = {$/;"	v
TESTS	src/ch5_usertest.c	/^const char *TESTS[] = {$/;"	v
TESTS	src/ch5b_usertest.c	/^const char *TESTS[] = {$/;"	v
TESTS	src/ch5t_usertest.c	/^const char *TESTS[] = {$/;"	v
TESTS	src/ch6_usertest.c	/^const char *TESTS[] = {$/;"	v
TESTS	src/ch6b_usertest.c	/^const char *TESTS[] = {$/;"	v
TESTS	src/ch7b_usertest.c	/^const char *TESTS[] = {$/;"	v
TESTS	src/ch8_usertest.c	/^const char *TESTS[] = {$/;"	v
TESTS	src/ch8b_usertest.c	/^const char *TESTS[] = {$/;"	v
THREAD_N	src/ch8_sem1_deadlock.c	11;"	d	file:
THREAD_N	src/ch8_sem2_deadlock.c	12;"	d	file:
TaskInfo	include/stddef.h	/^} TaskInfo;$/;"	t	typeref:struct:__anon5
TaskStatus	include/stddef.h	/^} TaskStatus;$/;"	t	typeref:enum:__anon4
TimeVal	include/stddef.h	/^} TimeVal;$/;"	t	typeref:struct:__anon1
UCHAR_MAX	include/stddef.h	23;"	d
UINT_MAX	include/stddef.h	21;"	d
ULONG_MAX	include/stddef.h	18;"	d
USER_TEST	asm/ch5_mergetest.asm	/^#define USER_TEST$/;"	d
USER_TEST	asm/ch5_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	asm/ch5b_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	asm/ch6_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	asm/ch6b_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	asm/ch7b_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	asm/ch8_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	asm/ch8b_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	build/asm/ch5_mergetest.asm	/^#define USER_TEST$/;"	d
USER_TEST	build/asm/ch5_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	build/asm/ch5b_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	build/asm/ch6_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	build/asm/ch6b_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	build/asm/ch7b_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	build/asm/ch8_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	build/asm/ch8b_usertest.asm	/^#define USER_TEST$/;"	d
USER_TEST	src/usertest.h	2;"	d
UnInit	include/stddef.h	/^	UnInit,$/;"	e	enum:__anon4
VDSO_USEFUL	lib/arch/riscv/syscall_arch.h	74;"	d
WIDTH	src/ch3b_yield0.c	/^const int WIDTH = 10;$/;"	v
WIDTH	src/ch3b_yield1.c	/^const int WIDTH = 10;$/;"	v
WIDTH	src/ch3b_yield2.c	/^const int WIDTH = 10;$/;"	v
_STRINGIFY	include/stdlib.h	10;"	d
__FCNTL_H__	include/fcntl.h	2;"	d
__LINE_WIDTH	lib/stdio.c	20;"	d	file:
__STDDEF_H__	include/stddef.h	2;"	d
__STDIO_H__	include/stdio.h	2;"	d
__STDLIB_H__	include/stdlib.h	2;"	d
__STRING_H__	include/string.h	2;"	d
__SYSCALL_CONCAT	lib/syscall.h	27;"	d
__SYSCALL_CONCAT_X	lib/syscall.h	26;"	d
__SYSCALL_DISP	lib/syscall.h	28;"	d
__SYSCALL_H__	lib/syscall.h	2;"	d
__SYSCALL_LL_E	lib/arch/riscv/syscall_arch.h	1;"	d
__SYSCALL_LL_O	lib/arch/riscv/syscall_arch.h	2;"	d
__SYSCALL_NARGS	lib/syscall.h	24;"	d
__SYSCALL_NARGS_X	lib/syscall.h	23;"	d
__UNISTD_H__	include/unistd.h	2;"	d
__asm_syscall	lib/arch/riscv/syscall_arch.h	4;"	d
__clear_buffer	lib/stdio.c	/^void __clear_buffer()$/;"	f
__fflush	lib/stdio.c	/^int __fflush()$/;"	f
__scc	lib/syscall.h	8;"	d
__start_main	lib/main.c	/^int __start_main(int argc, char **argv)$/;"	f
__syscall	lib/syscall.h	32;"	d
__syscall0	lib/arch/riscv/syscall_arch.h	/^static inline long __syscall0(long n)$/;"	f
__syscall1	lib/arch/riscv/syscall_arch.h	/^static inline long __syscall1(long n, long a)$/;"	f
__syscall1	lib/syscall.h	12;"	d
__syscall2	lib/arch/riscv/syscall_arch.h	/^static inline long __syscall2(long n, long a, long b)$/;"	f
__syscall2	lib/syscall.h	13;"	d
__syscall3	lib/arch/riscv/syscall_arch.h	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	f
__syscall3	lib/syscall.h	14;"	d
__syscall4	lib/arch/riscv/syscall_arch.h	/^static inline long __syscall4(long n, long a, long b, long c, long d)$/;"	f
__syscall4	lib/syscall.h	15;"	d
__syscall5	lib/arch/riscv/syscall_arch.h	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	f
__syscall5	lib/syscall.h	17;"	d
__syscall6	lib/arch/riscv/syscall_arch.h	/^static inline long __syscall6(long n, long a, long b, long c, long d, long e,$/;"	f
__syscall6	lib/syscall.h	19;"	d
__write_buffer	lib/stdio.c	/^int __write_buffer()$/;"	f
_start	asm/__ch2_bad_address.asm	/^_start:$/;"	l
_start	asm/__ch2_bad_instruction.asm	/^_start:$/;"	l
_start	asm/__ch2_bad_register.asm	/^_start:$/;"	l
_start	asm/ch2b_exit.asm	/^_start:$/;"	l
_start	asm/ch2b_hello_world.asm	/^_start:$/;"	l
_start	asm/ch2b_power.asm	/^_start:$/;"	l
_start	asm/ch3_taskinfo.asm	/^_start:$/;"	l
_start	asm/ch3b_sleep.asm	/^_start:$/;"	l
_start	asm/ch3b_sleep1.asm	/^_start:$/;"	l
_start	asm/ch3b_yield0.asm	/^_start:$/;"	l
_start	asm/ch3b_yield1.asm	/^_start:$/;"	l
_start	asm/ch3b_yield2.asm	/^_start:$/;"	l
_start	asm/ch4_mmap0.asm	/^_start:$/;"	l
_start	asm/ch4_mmap1.asm	/^_start:$/;"	l
_start	asm/ch4_mmap2.asm	/^_start:$/;"	l
_start	asm/ch4_mmap3.asm	/^_start:$/;"	l
_start	asm/ch4_unmap0.asm	/^_start:$/;"	l
_start	asm/ch4_unmap1.asm	/^_start:$/;"	l
_start	asm/ch5_exit0.asm	/^_start:$/;"	l
_start	asm/ch5_exit1.asm	/^_start:$/;"	l
_start	asm/ch5_mergetest.asm	/^_start:$/;"	l
_start	asm/ch5_ppid.asm	/^_start:$/;"	l
_start	asm/ch5_setprio.asm	/^_start:$/;"	l
_start	asm/ch5_spawn0.asm	/^_start:$/;"	l
_start	asm/ch5_spawn1.asm	/^_start:$/;"	l
_start	asm/ch5_usertest.asm	/^_start:$/;"	l
_start	asm/ch5b_exec_simple.asm	/^_start:$/;"	l
_start	asm/ch5b_exit.asm	/^_start:$/;"	l
_start	asm/ch5b_forktest0.asm	/^_start:$/;"	l
_start	asm/ch5b_forktest1.asm	/^_start:$/;"	l
_start	asm/ch5b_forktest2.asm	/^_start:$/;"	l
_start	asm/ch5b_getpid.asm	/^_start:$/;"	l
_start	asm/ch5b_usertest.asm	/^_start:$/;"	l
_start	asm/ch5t_stride0.asm	/^_start:$/;"	l
_start	asm/ch5t_stride1.asm	/^_start:$/;"	l
_start	asm/ch5t_stride2.asm	/^_start:$/;"	l
_start	asm/ch5t_stride3.asm	/^_start:$/;"	l
_start	asm/ch5t_stride4.asm	/^_start:$/;"	l
_start	asm/ch5t_stride5.asm	/^_start:$/;"	l
_start	asm/ch5t_usertest.asm	/^_start:$/;"	l
_start	asm/ch6_file0.asm	/^_start:$/;"	l
_start	asm/ch6_file1.asm	/^_start:$/;"	l
_start	asm/ch6_file2.asm	/^_start:$/;"	l
_start	asm/ch6_file3.asm	/^_start:$/;"	l
_start	asm/ch6_usertest.asm	/^_start:$/;"	l
_start	asm/ch6b_args.asm	/^_start:$/;"	l
_start	asm/ch6b_assert.asm	/^_start:$/;"	l
_start	asm/ch6b_cat.asm	/^_start:$/;"	l
_start	asm/ch6b_exec.asm	/^_start:$/;"	l
_start	asm/ch6b_filetest.asm	/^_start:$/;"	l
_start	asm/ch6b_filetest_simple.asm	/^_start:$/;"	l
_start	asm/ch6b_panic.asm	/^_start:$/;"	l
_start	asm/ch6b_usertest.asm	/^_start:$/;"	l
_start	asm/ch7b_pipetest.asm	/^_start:$/;"	l
_start	asm/ch7b_usertest.asm	/^_start:$/;"	l
_start	asm/ch8_mut1_deadlock.asm	/^_start:$/;"	l
_start	asm/ch8_sem1_deadlock.asm	/^_start:$/;"	l
_start	asm/ch8_sem2_deadlock.asm	/^_start:$/;"	l
_start	asm/ch8_usertest.asm	/^_start:$/;"	l
_start	asm/ch8b_mpsc_sem.asm	/^_start:$/;"	l
_start	asm/ch8b_mut_phi_din.asm	/^_start:$/;"	l
_start	asm/ch8b_mut_race.asm	/^_start:$/;"	l
_start	asm/ch8b_spin_mut_race.asm	/^_start:$/;"	l
_start	asm/ch8b_sync_sem.asm	/^_start:$/;"	l
_start	asm/ch8b_test_condvar.asm	/^_start:$/;"	l
_start	asm/ch8b_threads.asm	/^_start:$/;"	l
_start	asm/ch8b_threads_arg.asm	/^_start:$/;"	l
_start	asm/ch8b_usertest.asm	/^_start:$/;"	l
_start	asm/usershell.asm	/^_start:$/;"	l
_start	build/asm/__ch2_bad_address.asm	/^_start:$/;"	l
_start	build/asm/__ch2_bad_instruction.asm	/^_start:$/;"	l
_start	build/asm/__ch2_bad_register.asm	/^_start:$/;"	l
_start	build/asm/ch2b_exit.asm	/^_start:$/;"	l
_start	build/asm/ch2b_hello_world.asm	/^_start:$/;"	l
_start	build/asm/ch2b_power.asm	/^_start:$/;"	l
_start	build/asm/ch3_taskinfo.asm	/^_start:$/;"	l
_start	build/asm/ch3b_sleep.asm	/^_start:$/;"	l
_start	build/asm/ch3b_sleep1.asm	/^_start:$/;"	l
_start	build/asm/ch3b_yield0.asm	/^_start:$/;"	l
_start	build/asm/ch3b_yield1.asm	/^_start:$/;"	l
_start	build/asm/ch3b_yield2.asm	/^_start:$/;"	l
_start	build/asm/ch4_mmap0.asm	/^_start:$/;"	l
_start	build/asm/ch4_mmap1.asm	/^_start:$/;"	l
_start	build/asm/ch4_mmap2.asm	/^_start:$/;"	l
_start	build/asm/ch4_mmap3.asm	/^_start:$/;"	l
_start	build/asm/ch4_unmap0.asm	/^_start:$/;"	l
_start	build/asm/ch4_unmap1.asm	/^_start:$/;"	l
_start	build/asm/ch5_exit0.asm	/^_start:$/;"	l
_start	build/asm/ch5_exit1.asm	/^_start:$/;"	l
_start	build/asm/ch5_mergetest.asm	/^_start:$/;"	l
_start	build/asm/ch5_ppid.asm	/^_start:$/;"	l
_start	build/asm/ch5_setprio.asm	/^_start:$/;"	l
_start	build/asm/ch5_spawn0.asm	/^_start:$/;"	l
_start	build/asm/ch5_spawn1.asm	/^_start:$/;"	l
_start	build/asm/ch5_usertest.asm	/^_start:$/;"	l
_start	build/asm/ch5b_exec_simple.asm	/^_start:$/;"	l
_start	build/asm/ch5b_exit.asm	/^_start:$/;"	l
_start	build/asm/ch5b_forktest0.asm	/^_start:$/;"	l
_start	build/asm/ch5b_forktest1.asm	/^_start:$/;"	l
_start	build/asm/ch5b_forktest2.asm	/^_start:$/;"	l
_start	build/asm/ch5b_getpid.asm	/^_start:$/;"	l
_start	build/asm/ch5b_usertest.asm	/^_start:$/;"	l
_start	build/asm/ch5t_stride0.asm	/^_start:$/;"	l
_start	build/asm/ch5t_stride1.asm	/^_start:$/;"	l
_start	build/asm/ch5t_stride2.asm	/^_start:$/;"	l
_start	build/asm/ch5t_stride3.asm	/^_start:$/;"	l
_start	build/asm/ch5t_stride4.asm	/^_start:$/;"	l
_start	build/asm/ch5t_stride5.asm	/^_start:$/;"	l
_start	build/asm/ch5t_usertest.asm	/^_start:$/;"	l
_start	build/asm/ch6_file0.asm	/^_start:$/;"	l
_start	build/asm/ch6_file1.asm	/^_start:$/;"	l
_start	build/asm/ch6_file2.asm	/^_start:$/;"	l
_start	build/asm/ch6_file3.asm	/^_start:$/;"	l
_start	build/asm/ch6_usertest.asm	/^_start:$/;"	l
_start	build/asm/ch6b_args.asm	/^_start:$/;"	l
_start	build/asm/ch6b_assert.asm	/^_start:$/;"	l
_start	build/asm/ch6b_cat.asm	/^_start:$/;"	l
_start	build/asm/ch6b_exec.asm	/^_start:$/;"	l
_start	build/asm/ch6b_filetest.asm	/^_start:$/;"	l
_start	build/asm/ch6b_filetest_simple.asm	/^_start:$/;"	l
_start	build/asm/ch6b_panic.asm	/^_start:$/;"	l
_start	build/asm/ch6b_usertest.asm	/^_start:$/;"	l
_start	build/asm/ch7b_pipetest.asm	/^_start:$/;"	l
_start	build/asm/ch7b_usertest.asm	/^_start:$/;"	l
_start	build/asm/ch8_mut1_deadlock.asm	/^_start:$/;"	l
_start	build/asm/ch8_sem1_deadlock.asm	/^_start:$/;"	l
_start	build/asm/ch8_sem2_deadlock.asm	/^_start:$/;"	l
_start	build/asm/ch8_usertest.asm	/^_start:$/;"	l
_start	build/asm/ch8b_mpsc_sem.asm	/^_start:$/;"	l
_start	build/asm/ch8b_mut_phi_din.asm	/^_start:$/;"	l
_start	build/asm/ch8b_mut_race.asm	/^_start:$/;"	l
_start	build/asm/ch8b_spin_mut_race.asm	/^_start:$/;"	l
_start	build/asm/ch8b_sync_sem.asm	/^_start:$/;"	l
_start	build/asm/ch8b_test_condvar.asm	/^_start:$/;"	l
_start	build/asm/ch8b_threads.asm	/^_start:$/;"	l
_start	build/asm/ch8b_threads_arg.asm	/^_start:$/;"	l
_start	build/asm/ch8b_usertest.asm	/^_start:$/;"	l
_start	build/asm/usershell.asm	/^_start:$/;"	l
_start	lib/arch/riscv/crt.S	/^_start:$/;"	l
a	asm/__ch2_bad_address.asm	/^				a = "(null)";$/;"	d
a	asm/__ch2_bad_instruction.asm	/^				a = "(null)";$/;"	d
a	asm/__ch2_bad_register.asm	/^				a = "(null)";$/;"	d
a	asm/ch2b_exit.asm	/^				a = "(null)";$/;"	d
a	asm/ch2b_hello_world.asm	/^				a = "(null)";$/;"	d
a	asm/ch2b_power.asm	/^				a = "(null)";$/;"	d
a	asm/ch3_taskinfo.asm	/^				a = "(null)";$/;"	d
a	asm/ch3b_sleep.asm	/^				a = "(null)";$/;"	d
a	asm/ch3b_sleep1.asm	/^				a = "(null)";$/;"	d
a	asm/ch3b_yield0.asm	/^				a = "(null)";$/;"	d
a	asm/ch3b_yield1.asm	/^				a = "(null)";$/;"	d
a	asm/ch3b_yield2.asm	/^				a = "(null)";$/;"	d
a	asm/ch4_mmap0.asm	/^				a = "(null)";$/;"	d
a	asm/ch4_mmap1.asm	/^				a = "(null)";$/;"	d
a	asm/ch4_mmap2.asm	/^				a = "(null)";$/;"	d
a	asm/ch4_mmap3.asm	/^				a = "(null)";$/;"	d
a	asm/ch4_unmap0.asm	/^				a = "(null)";$/;"	d
a	asm/ch4_unmap1.asm	/^				a = "(null)";$/;"	d
a	asm/ch5_exit0.asm	/^				a = "(null)";$/;"	d
a	asm/ch5_exit1.asm	/^				a = "(null)";$/;"	d
a	asm/ch5_mergetest.asm	/^				a = "(null)";$/;"	d
a	asm/ch5_ppid.asm	/^				a = "(null)";$/;"	d
a	asm/ch5_setprio.asm	/^				a = "(null)";$/;"	d
a	asm/ch5_spawn0.asm	/^				a = "(null)";$/;"	d
a	asm/ch5_spawn1.asm	/^				a = "(null)";$/;"	d
a	asm/ch5_usertest.asm	/^				a = "(null)";$/;"	d
a	asm/ch5b_exec_simple.asm	/^				a = "(null)";$/;"	d
a	asm/ch5b_exit.asm	/^				a = "(null)";$/;"	d
a	asm/ch5b_forktest0.asm	/^				a = "(null)";$/;"	d
a	asm/ch5b_forktest1.asm	/^				a = "(null)";$/;"	d
a	asm/ch5b_forktest2.asm	/^				a = "(null)";$/;"	d
a	asm/ch5b_getpid.asm	/^				a = "(null)";$/;"	d
a	asm/ch5b_usertest.asm	/^				a = "(null)";$/;"	d
a	asm/ch5t_stride0.asm	/^				a = "(null)";$/;"	d
a	asm/ch5t_stride1.asm	/^				a = "(null)";$/;"	d
a	asm/ch5t_stride2.asm	/^				a = "(null)";$/;"	d
a	asm/ch5t_stride3.asm	/^				a = "(null)";$/;"	d
a	asm/ch5t_stride4.asm	/^				a = "(null)";$/;"	d
a	asm/ch5t_stride5.asm	/^				a = "(null)";$/;"	d
a	asm/ch5t_usertest.asm	/^				a = "(null)";$/;"	d
a	asm/ch6_file0.asm	/^				a = "(null)";$/;"	d
a	asm/ch6_file1.asm	/^				a = "(null)";$/;"	d
a	asm/ch6_file2.asm	/^				a = "(null)";$/;"	d
a	asm/ch6_file3.asm	/^				a = "(null)";$/;"	d
a	asm/ch6_usertest.asm	/^				a = "(null)";$/;"	d
a	asm/ch6b_args.asm	/^				a = "(null)";$/;"	d
a	asm/ch6b_assert.asm	/^				a = "(null)";$/;"	d
a	asm/ch6b_cat.asm	/^				a = "(null)";$/;"	d
a	asm/ch6b_exec.asm	/^				a = "(null)";$/;"	d
a	asm/ch6b_filetest.asm	/^				a = "(null)";$/;"	d
a	asm/ch6b_filetest_simple.asm	/^				a = "(null)";$/;"	d
a	asm/ch6b_panic.asm	/^				a = "(null)";$/;"	d
a	asm/ch6b_usertest.asm	/^				a = "(null)";$/;"	d
a	asm/ch7b_pipetest.asm	/^				a = "(null)";$/;"	d
a	asm/ch7b_usertest.asm	/^				a = "(null)";$/;"	d
a	asm/ch8_mut1_deadlock.asm	/^				a = "(null)";$/;"	d
a	asm/ch8_sem1_deadlock.asm	/^				a = "(null)";$/;"	d
a	asm/ch8_sem2_deadlock.asm	/^				a = "(null)";$/;"	d
a	asm/ch8_usertest.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_mpsc_sem.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_mut_phi_din.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_mut_race.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_mut_race.asm	/^		a = old_a + 1;$/;"	d
a	asm/ch8b_spin_mut_race.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_spin_mut_race.asm	/^		a = old_a + 1;$/;"	d
a	asm/ch8b_sync_sem.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_test_condvar.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_test_condvar.asm	/^	a = 1;$/;"	d
a	asm/ch8b_threads.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_threads_arg.asm	/^				a = "(null)";$/;"	d
a	asm/ch8b_usertest.asm	/^				a = "(null)";$/;"	d
a	asm/usershell.asm	/^				a = "(null)";$/;"	d
a	build/asm/__ch2_bad_address.asm	/^				a = "(null)";$/;"	d
a	build/asm/__ch2_bad_instruction.asm	/^				a = "(null)";$/;"	d
a	build/asm/__ch2_bad_register.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch2b_exit.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch2b_hello_world.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch2b_power.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch3_taskinfo.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch3b_sleep.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch3b_sleep1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch3b_yield0.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch3b_yield1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch3b_yield2.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch4_mmap0.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch4_mmap1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch4_mmap2.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch4_mmap3.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch4_unmap0.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch4_unmap1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5_exit0.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5_exit1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5_mergetest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5_ppid.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5_setprio.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5_spawn0.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5_spawn1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5_usertest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5b_exec_simple.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5b_exit.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5b_forktest0.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5b_forktest1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5b_forktest2.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5b_getpid.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5b_usertest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5t_stride0.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5t_stride1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5t_stride2.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5t_stride3.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5t_stride4.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5t_stride5.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch5t_usertest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6_file0.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6_file1.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6_file2.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6_file3.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6_usertest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6b_args.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6b_assert.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6b_cat.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6b_exec.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6b_filetest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6b_filetest_simple.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6b_panic.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch6b_usertest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch7b_pipetest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch7b_usertest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8_mut1_deadlock.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8_sem1_deadlock.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8_sem2_deadlock.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8_usertest.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_mpsc_sem.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_mut_phi_din.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_mut_race.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_mut_race.asm	/^		a = old_a + 1;$/;"	d
a	build/asm/ch8b_spin_mut_race.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_spin_mut_race.asm	/^		a = old_a + 1;$/;"	d
a	build/asm/ch8b_sync_sem.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_test_condvar.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_test_condvar.asm	/^	a = 1;$/;"	d
a	build/asm/ch8b_threads.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_threads_arg.asm	/^				a = "(null)";$/;"	d
a	build/asm/ch8b_usertest.asm	/^				a = "(null)";$/;"	d
a	build/asm/usershell.asm	/^				a = "(null)";$/;"	d
a	src/ch8b_mut_race.c	/^int a;$/;"	v
a	src/ch8b_spin_mut_race.c	/^int a;$/;"	v
a	src/ch8b_test_condvar.c	/^int a = 0;$/;"	v
alloc	src/ch8_sem2_deadlock.c	/^const int alloc[THREAD_N] = { 2, 1, 1, 2 };$/;"	v
app_dir	Makefile	/^app_dir = src$/;"	m
args	src/ch8b_threads_arg.c	/^} args[NTHREAD] = {$/;"	v	typeref:struct:thread_arg
argv	src/usershell.c	/^char *argv[MAX_ARG_NUM];$/;"	v
arr	src/ch8b_mut_phi_din.c	/^const int arr[N][ROUND * 2] = {$/;"	v
assert	include/stdlib.h	23;"	d
assert_eq	include/stdlib.h	29;"	d
atoi	lib/string.c	/^int atoi(const char *s)$/;"	f
basename	lib/string.c	/^char *basename(char *s)$/;"	f
bin_dir	Makefile	/^bin_dir := build\/bin$/;"	m
bool	include/stddef.h	/^typedef int bool;$/;"	t
buffer	lib/stdio.c	/^static char buffer[__LINE_WIDTH];$/;"	v	file:
buffer	src/ch8b_mpsc_sem.c	/^int buffer[buffer_size];$/;"	v
buffer_len	asm/__ch2_bad_address.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/__ch2_bad_instruction.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/__ch2_bad_register.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch2b_exit.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch2b_hello_world.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch2b_power.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch3_taskinfo.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch3b_sleep.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch3b_sleep1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch3b_yield0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch3b_yield1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch3b_yield2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch4_mmap0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch4_mmap1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch4_mmap2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch4_mmap3.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch4_unmap0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch4_unmap1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5_exit0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5_exit1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5_mergetest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5_ppid.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5_setprio.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5_spawn0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5_spawn1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5b_exec_simple.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5b_exit.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5b_forktest0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5b_forktest1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5b_forktest2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5b_getpid.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5b_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5t_stride0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5t_stride1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5t_stride2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5t_stride3.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5t_stride4.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5t_stride5.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch5t_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6_file0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6_file1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6_file2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6_file3.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6b_args.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6b_assert.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6b_cat.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6b_exec.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6b_filetest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6b_filetest_simple.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6b_panic.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch6b_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch7b_pipetest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch7b_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8_mut1_deadlock.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8_sem1_deadlock.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8_sem2_deadlock.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_mpsc_sem.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_mut_phi_din.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_mut_race.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_spin_mut_race.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_sync_sem.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_test_condvar.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_threads.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_threads_arg.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/ch8b_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	asm/usershell.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/__ch2_bad_address.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/__ch2_bad_instruction.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/__ch2_bad_register.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch2b_exit.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch2b_hello_world.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch2b_power.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch3_taskinfo.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch3b_sleep.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch3b_sleep1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch3b_yield0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch3b_yield1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch3b_yield2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch4_mmap0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch4_mmap1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch4_mmap2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch4_mmap3.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch4_unmap0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch4_unmap1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5_exit0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5_exit1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5_mergetest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5_ppid.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5_setprio.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5_spawn0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5_spawn1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5b_exec_simple.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5b_exit.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5b_forktest0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5b_forktest1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5b_forktest2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5b_getpid.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5b_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5t_stride0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5t_stride1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5t_stride2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5t_stride3.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5t_stride4.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5t_stride5.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch5t_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6_file0.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6_file1.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6_file2.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6_file3.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6b_args.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6b_assert.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6b_cat.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6b_exec.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6b_filetest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6b_filetest_simple.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6b_panic.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch6b_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch7b_pipetest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch7b_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8_mut1_deadlock.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8_sem1_deadlock.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8_sem2_deadlock.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_mpsc_sem.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_mut_phi_din.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_mut_race.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_spin_mut_race.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_sync_sem.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_test_condvar.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_threads.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_threads_arg.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/ch8b_usertest.asm	/^	buffer_len = 0;$/;"	d
buffer_len	build/asm/usershell.asm	/^	buffer_len = 0;$/;"	d
buffer_len	lib/stdio.c	/^static int buffer_len;$/;"	v	file:
buffer_lock	lib/stdio.c	/^static int buffer_lock;$/;"	v	file:
buffer_lock_enabled	asm/__ch2_bad_address.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/__ch2_bad_instruction.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/__ch2_bad_register.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch2b_exit.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch2b_hello_world.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch2b_power.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch3_taskinfo.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch3b_sleep.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch3b_sleep1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch3b_yield0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch3b_yield1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch3b_yield2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch4_mmap0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch4_mmap1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch4_mmap2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch4_mmap3.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch4_unmap0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch4_unmap1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5_exit0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5_exit1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5_mergetest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5_ppid.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5_setprio.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5_spawn0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5_spawn1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5b_exec_simple.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5b_exit.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5b_forktest0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5b_forktest1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5b_forktest2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5b_getpid.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5b_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5t_stride0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5t_stride1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5t_stride2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5t_stride3.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5t_stride4.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5t_stride5.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch5t_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6_file0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6_file1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6_file2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6_file3.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6b_args.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6b_assert.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6b_cat.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6b_exec.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6b_filetest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6b_filetest_simple.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6b_panic.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch6b_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch7b_pipetest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch7b_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8_mut1_deadlock.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8_sem1_deadlock.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8_sem2_deadlock.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_mpsc_sem.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_mut_phi_din.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_mut_race.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_spin_mut_race.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_sync_sem.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_test_condvar.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_threads.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_threads_arg.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/ch8b_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	asm/usershell.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/__ch2_bad_address.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/__ch2_bad_instruction.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/__ch2_bad_register.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch2b_exit.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch2b_hello_world.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch2b_power.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch3_taskinfo.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch3b_sleep.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch3b_sleep1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch3b_yield0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch3b_yield1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch3b_yield2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch4_mmap0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch4_mmap1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch4_mmap2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch4_mmap3.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch4_unmap0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch4_unmap1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5_exit0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5_exit1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5_mergetest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5_ppid.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5_setprio.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5_spawn0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5_spawn1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5b_exec_simple.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5b_exit.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5b_forktest0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5b_forktest1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5b_forktest2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5b_getpid.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5b_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5t_stride0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5t_stride1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5t_stride2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5t_stride3.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5t_stride4.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5t_stride5.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch5t_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6_file0.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6_file1.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6_file2.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6_file3.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6b_args.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6b_assert.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6b_cat.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6b_exec.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6b_filetest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6b_filetest_simple.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6b_panic.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch6b_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch7b_pipetest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch7b_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8_mut1_deadlock.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8_sem1_deadlock.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8_sem2_deadlock.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_mpsc_sem.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_mut_phi_din.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_mut_race.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_spin_mut_race.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_sync_sem.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_test_condvar.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_threads.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_threads_arg.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/ch8b_usertest.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	build/asm/usershell.asm	/^	buffer_lock_enabled = 1;$/;"	d
buffer_lock_enabled	lib/stdio.c	/^int buffer_lock_enabled = 0;$/;"	v
buffer_size	src/ch8b_mpsc_sem.c	7;"	d	file:
c	asm/__ch2_bad_address.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/__ch2_bad_instruction.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/__ch2_bad_register.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch2b_exit.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch2b_hello_world.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch2b_power.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch3_taskinfo.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch3b_sleep.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch3b_sleep1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch3b_yield0.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch3b_yield1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch3b_yield2.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch4_mmap0.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch4_mmap1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch4_mmap2.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch4_mmap3.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch4_unmap0.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch4_unmap1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5_exit0.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5_exit1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5_mergetest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5_ppid.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5_setprio.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5_spawn0.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5_spawn1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5b_exec_simple.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5b_exit.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5b_forktest0.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5b_forktest1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5b_forktest2.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5b_getpid.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5b_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5t_stride0.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5t_stride1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5t_stride2.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5t_stride3.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5t_stride4.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5t_stride5.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch5t_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6_file0.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6_file1.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6_file2.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6_file3.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6b_args.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6b_assert.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6b_cat.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6b_exec.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6b_filetest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6b_filetest_simple.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6b_panic.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch6b_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch7b_pipetest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch7b_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8_mut1_deadlock.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8_sem1_deadlock.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8_sem2_deadlock.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_mpsc_sem.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_mut_phi_din.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_mut_race.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_spin_mut_race.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_sync_sem.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_test_condvar.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_threads.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_threads_arg.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/ch8b_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	asm/usershell.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/__ch2_bad_address.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/__ch2_bad_instruction.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/__ch2_bad_register.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch2b_exit.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch2b_hello_world.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch2b_power.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch3_taskinfo.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch3b_sleep.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch3b_sleep1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch3b_yield0.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch3b_yield1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch3b_yield2.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch4_mmap0.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch4_mmap1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch4_mmap2.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch4_mmap3.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch4_unmap0.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch4_unmap1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5_exit0.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5_exit1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5_mergetest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5_ppid.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5_setprio.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5_spawn0.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5_spawn1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5b_exec_simple.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5b_exit.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5b_forktest0.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5b_forktest1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5b_forktest2.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5b_getpid.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5b_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5t_stride0.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5t_stride1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5t_stride2.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5t_stride3.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5t_stride4.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5t_stride5.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch5t_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6_file0.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6_file1.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6_file2.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6_file3.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6b_args.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6b_assert.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6b_cat.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6b_exec.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6b_filetest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6b_filetest_simple.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6b_panic.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch6b_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch7b_pipetest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch7b_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8_mut1_deadlock.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8_sem1_deadlock.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8_sem2_deadlock.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_mpsc_sem.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_mut_phi_din.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_mut_race.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_spin_mut_race.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_sync_sem.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_test_condvar.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_threads.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_threads_arg.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/ch8b_usertest.asm	/^	c = (unsigned char)c;$/;"	d
c	build/asm/usershell.asm	/^	c = (unsigned char)c;$/;"	d
c	src/ch8b_threads_arg.c	/^	char c;$/;"	m	struct:thread_arg	file:
char	asm/__ch2_bad_address.asm	/^char *basename(char *s)$/;"	l
char	asm/__ch2_bad_address.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/__ch2_bad_address.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/__ch2_bad_instruction.asm	/^char *basename(char *s)$/;"	l
char	asm/__ch2_bad_instruction.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/__ch2_bad_instruction.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/__ch2_bad_register.asm	/^char *basename(char *s)$/;"	l
char	asm/__ch2_bad_register.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/__ch2_bad_register.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch2b_exit.asm	/^char *basename(char *s)$/;"	l
char	asm/ch2b_exit.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch2b_exit.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch2b_hello_world.asm	/^char *basename(char *s)$/;"	l
char	asm/ch2b_hello_world.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch2b_hello_world.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch2b_power.asm	/^char *basename(char *s)$/;"	l
char	asm/ch2b_power.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch2b_power.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch3_taskinfo.asm	/^char *basename(char *s)$/;"	l
char	asm/ch3_taskinfo.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch3_taskinfo.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch3b_sleep.asm	/^char *basename(char *s)$/;"	l
char	asm/ch3b_sleep.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch3b_sleep.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch3b_sleep1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch3b_sleep1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch3b_sleep1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch3b_yield0.asm	/^char *basename(char *s)$/;"	l
char	asm/ch3b_yield0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch3b_yield0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch3b_yield1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch3b_yield1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch3b_yield1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch3b_yield2.asm	/^char *basename(char *s)$/;"	l
char	asm/ch3b_yield2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch3b_yield2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch4_mmap0.asm	/^char *basename(char *s)$/;"	l
char	asm/ch4_mmap0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch4_mmap0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch4_mmap1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch4_mmap1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch4_mmap1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch4_mmap2.asm	/^char *basename(char *s)$/;"	l
char	asm/ch4_mmap2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch4_mmap2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch4_mmap3.asm	/^char *basename(char *s)$/;"	l
char	asm/ch4_mmap3.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch4_mmap3.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch4_unmap0.asm	/^char *basename(char *s)$/;"	l
char	asm/ch4_unmap0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch4_unmap0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch4_unmap1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch4_unmap1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch4_unmap1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5_exit0.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5_exit0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5_exit0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5_exit1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5_exit1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5_exit1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5_mergetest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5_mergetest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5_mergetest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5_ppid.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5_ppid.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5_ppid.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5_setprio.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5_setprio.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5_setprio.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5_spawn0.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5_spawn0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5_spawn0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5_spawn1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5_spawn1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5_spawn1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5_usertest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5b_exec_simple.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5b_exec_simple.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5b_exec_simple.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5b_exit.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5b_exit.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5b_exit.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5b_forktest0.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5b_forktest0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5b_forktest0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5b_forktest1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5b_forktest1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5b_forktest1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5b_forktest2.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5b_forktest2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5b_forktest2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5b_getpid.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5b_getpid.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5b_getpid.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5b_usertest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5b_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5b_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5t_stride0.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5t_stride0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5t_stride0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5t_stride1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5t_stride1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5t_stride1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5t_stride2.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5t_stride2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5t_stride2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5t_stride3.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5t_stride3.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5t_stride3.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5t_stride4.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5t_stride4.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5t_stride4.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5t_stride5.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5t_stride5.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5t_stride5.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch5t_usertest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch5t_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch5t_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6_file0.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6_file0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6_file0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6_file1.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6_file1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6_file1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6_file2.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6_file2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6_file2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6_file3.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6_file3.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6_file3.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6_file3.asm	/^char test_str[4096];$/;"	l
char	asm/ch6_usertest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6b_args.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6b_args.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6b_args.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6b_assert.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6b_assert.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6b_assert.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6b_cat.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6b_cat.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6b_cat.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6b_exec.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6b_exec.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6b_exec.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6b_filetest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6b_filetest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6b_filetest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6b_filetest_simple.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6b_filetest_simple.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6b_filetest_simple.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6b_panic.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6b_panic.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6b_panic.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch6b_usertest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch6b_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch6b_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch7b_pipetest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch7b_pipetest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch7b_pipetest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch7b_pipetest.asm	/^char STR[] = "hello pipe!";$/;"	l
char	asm/ch7b_usertest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch7b_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch7b_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8_mut1_deadlock.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8_mut1_deadlock.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8_mut1_deadlock.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8_sem1_deadlock.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8_sem1_deadlock.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8_sem1_deadlock.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8_sem2_deadlock.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8_sem2_deadlock.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8_sem2_deadlock.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8_usertest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_mpsc_sem.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_mpsc_sem.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_mpsc_sem.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_mut_phi_din.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_mut_phi_din.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_mut_phi_din.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_mut_race.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_mut_race.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_mut_race.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_spin_mut_race.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_spin_mut_race.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_spin_mut_race.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_sync_sem.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_sync_sem.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_sync_sem.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_test_condvar.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_test_condvar.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_test_condvar.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_threads.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_threads.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_threads.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_threads_arg.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_threads_arg.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_threads_arg.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/ch8b_usertest.asm	/^char *basename(char *s)$/;"	l
char	asm/ch8b_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/ch8b_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	asm/usershell.asm	/^char *basename(char *s)$/;"	l
char	asm/usershell.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	asm/usershell.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/__ch2_bad_address.asm	/^char *basename(char *s)$/;"	l
char	build/asm/__ch2_bad_address.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/__ch2_bad_address.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/__ch2_bad_instruction.asm	/^char *basename(char *s)$/;"	l
char	build/asm/__ch2_bad_instruction.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/__ch2_bad_instruction.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/__ch2_bad_register.asm	/^char *basename(char *s)$/;"	l
char	build/asm/__ch2_bad_register.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/__ch2_bad_register.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch2b_exit.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch2b_exit.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch2b_exit.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch2b_hello_world.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch2b_hello_world.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch2b_hello_world.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch2b_power.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch2b_power.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch2b_power.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch3_taskinfo.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch3_taskinfo.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch3_taskinfo.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch3b_sleep.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch3b_sleep.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch3b_sleep.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch3b_sleep1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch3b_sleep1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch3b_sleep1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch3b_yield0.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch3b_yield0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch3b_yield0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch3b_yield1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch3b_yield1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch3b_yield1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch3b_yield2.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch3b_yield2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch3b_yield2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch4_mmap0.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch4_mmap0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch4_mmap0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch4_mmap1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch4_mmap1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch4_mmap1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch4_mmap2.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch4_mmap2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch4_mmap2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch4_mmap3.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch4_mmap3.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch4_mmap3.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch4_unmap0.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch4_unmap0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch4_unmap0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch4_unmap1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch4_unmap1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch4_unmap1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5_exit0.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5_exit0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5_exit0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5_exit1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5_exit1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5_exit1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5_mergetest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5_mergetest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5_mergetest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5_ppid.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5_ppid.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5_ppid.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5_setprio.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5_setprio.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5_setprio.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5_spawn0.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5_spawn0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5_spawn0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5_spawn1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5_spawn1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5_spawn1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5_usertest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5b_exec_simple.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5b_exec_simple.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5b_exec_simple.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5b_exit.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5b_exit.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5b_exit.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5b_forktest0.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5b_forktest0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5b_forktest0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5b_forktest1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5b_forktest1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5b_forktest1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5b_forktest2.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5b_forktest2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5b_forktest2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5b_getpid.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5b_getpid.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5b_getpid.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5b_usertest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5b_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5b_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5t_stride0.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5t_stride0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5t_stride0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5t_stride1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5t_stride1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5t_stride1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5t_stride2.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5t_stride2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5t_stride2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5t_stride3.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5t_stride3.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5t_stride3.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5t_stride4.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5t_stride4.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5t_stride4.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5t_stride5.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5t_stride5.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5t_stride5.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch5t_usertest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch5t_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch5t_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6_file0.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6_file0.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6_file0.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6_file1.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6_file1.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6_file1.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6_file2.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6_file2.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6_file2.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6_file3.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6_file3.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6_file3.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6_file3.asm	/^char test_str[4096];$/;"	l
char	build/asm/ch6_usertest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6b_args.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6b_args.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6b_args.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6b_assert.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6b_assert.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6b_assert.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6b_cat.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6b_cat.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6b_cat.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6b_exec.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6b_exec.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6b_exec.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6b_filetest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6b_filetest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6b_filetest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6b_filetest_simple.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6b_filetest_simple.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6b_filetest_simple.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6b_panic.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6b_panic.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6b_panic.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch6b_usertest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch6b_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch6b_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch7b_pipetest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch7b_pipetest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch7b_pipetest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch7b_pipetest.asm	/^char STR[] = "hello pipe!";$/;"	l
char	build/asm/ch7b_usertest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch7b_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch7b_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8_mut1_deadlock.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8_mut1_deadlock.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8_mut1_deadlock.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8_sem1_deadlock.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8_sem1_deadlock.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8_sem1_deadlock.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8_sem2_deadlock.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8_sem2_deadlock.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8_sem2_deadlock.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8_usertest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_mpsc_sem.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_mpsc_sem.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_mpsc_sem.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_mut_phi_din.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_mut_phi_din.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_mut_phi_din.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_mut_race.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_mut_race.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_mut_race.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_spin_mut_race.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_spin_mut_race.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_spin_mut_race.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_sync_sem.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_sync_sem.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_sync_sem.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_test_condvar.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_test_condvar.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_test_condvar.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_threads.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_threads.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_threads.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_threads_arg.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_threads_arg.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_threads_arg.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/ch8b_usertest.asm	/^char *basename(char *s)$/;"	l
char	build/asm/ch8b_usertest.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/ch8b_usertest.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
char	build/asm/usershell.asm	/^char *basename(char *s)$/;"	l
char	build/asm/usershell.asm	/^char *stpcpy(char *restrict d, const char *s)$/;"	l
char	build/asm/usershell.asm	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	l
clear	src/usershell.c	/^void clear()$/;"	f
close	lib/syscall.c	/^int close(int fd)$/;"	f
cmake_build_args	Makefile	/^cmake_build_args := -DARCH=$(ARCH) -DCHAPTER=$(CHAPTER)$/;"	m
condvar_create	lib/syscall.c	/^int condvar_create()$/;"	f
condvar_id	src/ch8b_test_condvar.c	/^int condvar_id;$/;"	v
condvar_signal	lib/syscall.c	/^int condvar_signal(int cid)$/;"	f
condvar_wait	lib/syscall.c	/^int condvar_wait(int cid, int mid)$/;"	f
const	asm/ch2b_exit.asm	/^const int MAGIC = 1234;$/;"	l
const	asm/ch5_spawn0.asm	/^const int MAX_CHILD = 40;$/;"	l
const	asm/ch5b_exit.asm	/^const int MAGIC = 0x1234;$/;"	l
const	asm/ch5b_exit.asm	/^const int max_child = 32;$/;"	l
const	asm/ch5b_forktest1.asm	/^const int MAX_CHILD = 40;$/;"	l
const	asm/ch5b_forktest2.asm	/^const int NUM = 5;$/;"	l
const	asm/ch5t_stride0.asm	/^const int MAX_TIME = 1000;$/;"	l
const	asm/ch5t_stride1.asm	/^const int MAX_TIME = 1000;$/;"	l
const	asm/ch5t_stride2.asm	/^const int MAX_TIME = 1000;$/;"	l
const	asm/ch5t_stride3.asm	/^const int MAX_TIME = 1000;$/;"	l
const	asm/ch5t_stride4.asm	/^const int MAX_TIME = 1000;$/;"	l
const	asm/ch5t_stride5.asm	/^const int MAX_TIME = 1000;$/;"	l
const	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const	build/asm/ch2b_exit.asm	/^const int MAGIC = 1234;$/;"	l
const	build/asm/ch5_spawn0.asm	/^const int MAX_CHILD = 40;$/;"	l
const	build/asm/ch5b_exit.asm	/^const int MAGIC = 0x1234;$/;"	l
const	build/asm/ch5b_exit.asm	/^const int max_child = 32;$/;"	l
const	build/asm/ch5b_forktest1.asm	/^const int MAX_CHILD = 40;$/;"	l
const	build/asm/ch5b_forktest2.asm	/^const int NUM = 5;$/;"	l
const	build/asm/ch5t_stride0.asm	/^const int MAX_TIME = 1000;$/;"	l
const	build/asm/ch5t_stride1.asm	/^const int MAX_TIME = 1000;$/;"	l
const	build/asm/ch5t_stride2.asm	/^const int MAX_TIME = 1000;$/;"	l
const	build/asm/ch5t_stride3.asm	/^const int MAX_TIME = 1000;$/;"	l
const	build/asm/ch5t_stride4.asm	/^const int MAX_TIME = 1000;$/;"	l
const	build/asm/ch5t_stride5.asm	/^const int MAX_TIME = 1000;$/;"	l
consumer	src/ch8b_mpsc_sem.c	/^void consumer()$/;"	f
count_during	src/ch5t_stride0.c	/^int count_during(int prio)$/;"	f
count_during	src/ch5t_stride1.c	/^int count_during(int prio)$/;"	f
count_during	src/ch5t_stride2.c	/^int count_during(int prio)$/;"	f
count_during	src/ch5t_stride3.c	/^int count_during(int prio)$/;"	f
count_during	src/ch5t_stride4.c	/^int count_during(int prio)$/;"	f
count_during	src/ch5t_stride5.c	/^int count_during(int prio)$/;"	f
d	asm/__ch2_bad_address.asm	/^		d = (void *)wd;$/;"	d
d	asm/__ch2_bad_instruction.asm	/^		d = (void *)wd;$/;"	d
d	asm/__ch2_bad_register.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch2b_exit.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch2b_hello_world.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch2b_power.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch3_taskinfo.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch3b_sleep.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch3b_sleep1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch3b_yield0.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch3b_yield1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch3b_yield2.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch4_mmap0.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch4_mmap1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch4_mmap2.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch4_mmap3.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch4_unmap0.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch4_unmap1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5_exit0.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5_exit1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5_mergetest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5_ppid.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5_setprio.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5_spawn0.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5_spawn1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5_usertest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5b_exec_simple.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5b_exit.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5b_forktest0.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5b_forktest1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5b_forktest2.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5b_getpid.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5b_usertest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5t_stride0.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5t_stride1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5t_stride2.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5t_stride3.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5t_stride4.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5t_stride5.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch5t_usertest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6_file0.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6_file1.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6_file2.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6_file3.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6_usertest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6b_args.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6b_assert.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6b_cat.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6b_exec.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6b_filetest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6b_filetest_simple.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6b_panic.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch6b_usertest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch7b_pipetest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch7b_usertest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8_mut1_deadlock.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8_sem1_deadlock.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8_sem2_deadlock.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8_usertest.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_mpsc_sem.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_mut_phi_din.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_mut_race.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_spin_mut_race.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_sync_sem.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_test_condvar.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_threads.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_threads_arg.asm	/^		d = (void *)wd;$/;"	d
d	asm/ch8b_usertest.asm	/^		d = (void *)wd;$/;"	d
d	asm/usershell.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/__ch2_bad_address.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/__ch2_bad_instruction.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/__ch2_bad_register.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch2b_exit.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch2b_hello_world.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch2b_power.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch3_taskinfo.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch3b_sleep.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch3b_sleep1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch3b_yield0.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch3b_yield1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch3b_yield2.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch4_mmap0.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch4_mmap1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch4_mmap2.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch4_mmap3.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch4_unmap0.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch4_unmap1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5_exit0.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5_exit1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5_mergetest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5_ppid.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5_setprio.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5_spawn0.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5_spawn1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5_usertest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5b_exec_simple.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5b_exit.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5b_forktest0.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5b_forktest1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5b_forktest2.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5b_getpid.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5b_usertest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5t_stride0.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5t_stride1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5t_stride2.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5t_stride3.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5t_stride4.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5t_stride5.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch5t_usertest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6_file0.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6_file1.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6_file2.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6_file3.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6_usertest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6b_args.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6b_assert.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6b_cat.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6b_exec.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6b_filetest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6b_filetest_simple.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6b_panic.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch6b_usertest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch7b_pipetest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch7b_usertest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8_mut1_deadlock.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8_sem1_deadlock.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8_sem2_deadlock.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8_usertest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_mpsc_sem.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_mut_phi_din.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_mut_race.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_spin_mut_race.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_sync_sem.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_test_condvar.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_threads.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_threads_arg.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/ch8b_usertest.asm	/^		d = (void *)wd;$/;"	d
d	build/asm/usershell.asm	/^		d = (void *)wd;$/;"	d
deadlock_test	src/ch8_sem1_deadlock.c	/^void deadlock_test(long _id)$/;"	f
deadlock_test	src/ch8_sem2_deadlock.c	/^void deadlock_test(long _id)$/;"	f
default	asm/ch8_sem1_deadlock.asm	/^	default:$/;"	l
default	asm/usershell.asm	/^		default:$/;"	l
default	build/asm/ch8_sem1_deadlock.asm	/^	default:$/;"	l
default	build/asm/usershell.asm	/^		default:$/;"	l
dev	include/stddef.h	/^	uint64 dev; \/\/ 文件所在磁盘驱动器号，不考虑$/;"	m	struct:__anon2
digits	lib/stdio.c	/^static char digits[] = "0123456789abcdef";$/;"	v	file:
eat	src/ch8b_mut_phi_din.c	/^int eat[N][ROUND * 2];$/;"	v
elf_dir	Makefile	/^elf_dir := build\/$(ARCH)$/;"	m
enable_deadlock_detect	lib/syscall.c	/^int enable_deadlock_detect(int enabled)$/;"	f
enable_thread_io_buffer	lib/stdio.c	/^void enable_thread_io_buffer()$/;"	f
exec	lib/syscall.c	/^int exec(const char *name, char **argv)$/;"	f
exit	lib/syscall.c	/^void exit(int code)$/;"	f
exit_pid	asm/ch5_spawn1.asm	/^	exit_pid = waitpid(cpid0, &exit_code);$/;"	d
exit_pid	asm/ch5_spawn1.asm	/^	exit_pid = waitpid(cpid1, &exit_code);$/;"	d
exit_pid	asm/ch5_spawn1.asm	/^	exit_pid = waitpid(cpid2, &exit_code);$/;"	d
exit_pid	asm/usershell.asm	/^					exit_pid = waitpid(pid, &xstate);$/;"	d
exit_pid	build/asm/ch5_spawn1.asm	/^	exit_pid = waitpid(cpid0, &exit_code);$/;"	d
exit_pid	build/asm/ch5_spawn1.asm	/^	exit_pid = waitpid(cpid1, &exit_code);$/;"	d
exit_pid	build/asm/ch5_spawn1.asm	/^	exit_pid = waitpid(cpid2, &exit_code);$/;"	d
exit_pid	build/asm/usershell.asm	/^					exit_pid = waitpid(pid, &xstate);$/;"	d
extern	asm/__ch2_bad_address.asm	/^extern int main(int, char **);$/;"	l
extern	asm/__ch2_bad_instruction.asm	/^extern int main(int, char **);$/;"	l
extern	asm/__ch2_bad_register.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch2b_exit.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch2b_hello_world.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch2b_power.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch3_taskinfo.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch3b_sleep.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch3b_sleep1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch3b_yield0.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch3b_yield1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch3b_yield2.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch4_mmap0.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch4_mmap1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch4_mmap2.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch4_mmap3.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch4_unmap0.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch4_unmap1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5_exit0.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5_exit1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5_mergetest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5_ppid.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5_setprio.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5_spawn0.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5_spawn1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5b_exec_simple.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5b_exit.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5b_forktest0.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5b_forktest1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5b_forktest2.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5b_getpid.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5b_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5t_stride0.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5t_stride1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5t_stride2.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5t_stride3.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5t_stride4.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5t_stride5.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch5t_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6_file0.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6_file1.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6_file2.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6_file3.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6b_args.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6b_assert.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6b_cat.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6b_exec.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6b_filetest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6b_filetest_simple.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6b_panic.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch6b_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch7b_pipetest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch7b_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8_mut1_deadlock.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8_sem1_deadlock.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8_sem2_deadlock.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_mpsc_sem.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_mut_phi_din.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_mut_race.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_spin_mut_race.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_sync_sem.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_test_condvar.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_threads.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_threads_arg.asm	/^extern int main(int, char **);$/;"	l
extern	asm/ch8b_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	asm/usershell.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/__ch2_bad_address.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/__ch2_bad_instruction.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/__ch2_bad_register.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch2b_exit.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch2b_hello_world.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch2b_power.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch3_taskinfo.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch3b_sleep.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch3b_sleep1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch3b_yield0.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch3b_yield1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch3b_yield2.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch4_mmap0.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch4_mmap1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch4_mmap2.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch4_mmap3.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch4_unmap0.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch4_unmap1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5_exit0.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5_exit1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5_mergetest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5_ppid.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5_setprio.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5_spawn0.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5_spawn1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5b_exec_simple.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5b_exit.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5b_forktest0.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5b_forktest1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5b_forktest2.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5b_getpid.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5b_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5t_stride0.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5t_stride1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5t_stride2.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5t_stride3.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5t_stride4.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5t_stride5.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch5t_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6_file0.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6_file1.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6_file2.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6_file3.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6b_args.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6b_assert.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6b_cat.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6b_exec.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6b_filetest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6b_filetest_simple.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6b_panic.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch6b_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch7b_pipetest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch7b_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8_mut1_deadlock.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8_sem1_deadlock.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8_sem2_deadlock.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_mpsc_sem.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_mut_phi_din.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_mut_race.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_spin_mut_race.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_sync_sem.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_test_condvar.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_threads.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_threads_arg.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/ch8b_usertest.asm	/^extern int main(int, char **);$/;"	l
extern	build/asm/usershell.asm	/^extern int main(int, char **);$/;"	l
fd	asm/ch6_file0.asm	/^	fd = open(fname, O_RDONLY);$/;"	d
fd	asm/ch6_file2.asm	/^	fd = open(lname0, O_RDONLY);$/;"	d
fd	asm/ch6b_filetest_simple.asm	/^	fd = open(filea, O_RDONLY);$/;"	d
fd	build/asm/ch6_file0.asm	/^	fd = open(fname, O_RDONLY);$/;"	d
fd	build/asm/ch6_file2.asm	/^	fd = open(lname0, O_RDONLY);$/;"	d
fd	build/asm/ch6b_filetest_simple.asm	/^	fd = open(filea, O_RDONLY);$/;"	d
fflush	lib/stdio.c	/^int fflush(int fd)$/;"	f
first	src/ch8b_sync_sem.c	/^void first()$/;"	f
first	src/ch8b_test_condvar.c	/^void first()$/;"	f
fork	lib/syscall.c	/^int fork()$/;"	f
front	asm/ch8b_mpsc_sem.asm	/^		front = (front + 1) % buffer_size;$/;"	d
front	build/asm/ch8b_mpsc_sem.asm	/^		front = (front + 1) % buffer_size;$/;"	d
front	src/ch8b_mpsc_sem.c	/^int front = 0;$/;"	v
fstat	lib/syscall.c	/^int fstat(int fd, Stat *st)$/;"	f
fun	src/ch8b_mut_race.c	/^void fun(long i)$/;"	f
fun	src/ch8b_spin_mut_race.c	/^void fun()$/;"	f
get_argv	src/usershell.c	/^void get_argv()$/;"	f
get_mtime	lib/syscall.c	/^int64 get_mtime()$/;"	f
getchar	lib/stdio.c	/^int getchar()$/;"	f
getpid	lib/syscall.c	/^int getpid()$/;"	f
getppid	lib/syscall.c	/^int getppid()$/;"	f
gettid	lib/syscall.c	/^int gettid(void)$/;"	f
handler	include/stddef.h	/^	void (*handler)(int);$/;"	m	struct:__anon3
handler	src/ch7b_sigtest.c	/^void handler(int signum, void *info, void *context)$/;"	f
hash	lib/stdlib.c	/^static int hash(int n)$/;"	f	file:
i	asm/__ch2_bad_address.asm	/^	i = 15;$/;"	d
i	asm/__ch2_bad_address.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/__ch2_bad_instruction.asm	/^	i = 15;$/;"	d
i	asm/__ch2_bad_instruction.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/__ch2_bad_register.asm	/^	i = 15;$/;"	d
i	asm/__ch2_bad_register.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch2b_exit.asm	/^	i = 15;$/;"	d
i	asm/ch2b_exit.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch2b_hello_world.asm	/^	i = 15;$/;"	d
i	asm/ch2b_hello_world.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch2b_power.asm	/^	i = 15;$/;"	d
i	asm/ch2b_power.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch3_taskinfo.asm	/^	i = 15;$/;"	d
i	asm/ch3_taskinfo.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch3b_sleep.asm	/^	i = 15;$/;"	d
i	asm/ch3b_sleep.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch3b_sleep1.asm	/^	i = 15;$/;"	d
i	asm/ch3b_sleep1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch3b_yield0.asm	/^	i = 15;$/;"	d
i	asm/ch3b_yield0.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch3b_yield1.asm	/^	i = 15;$/;"	d
i	asm/ch3b_yield1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch3b_yield2.asm	/^	i = 15;$/;"	d
i	asm/ch3b_yield2.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch4_mmap0.asm	/^	i = 15;$/;"	d
i	asm/ch4_mmap0.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch4_mmap1.asm	/^	i = 15;$/;"	d
i	asm/ch4_mmap1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch4_mmap2.asm	/^	i = 15;$/;"	d
i	asm/ch4_mmap2.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch4_mmap3.asm	/^	i = 15;$/;"	d
i	asm/ch4_mmap3.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch4_unmap0.asm	/^	i = 15;$/;"	d
i	asm/ch4_unmap0.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch4_unmap1.asm	/^	i = 15;$/;"	d
i	asm/ch4_unmap1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5_exit0.asm	/^	i = 15;$/;"	d
i	asm/ch5_exit0.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5_exit1.asm	/^	i = 15;$/;"	d
i	asm/ch5_exit1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5_mergetest.asm	/^	i = 15;$/;"	d
i	asm/ch5_mergetest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5_ppid.asm	/^	i = 15;$/;"	d
i	asm/ch5_ppid.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5_setprio.asm	/^	i = 15;$/;"	d
i	asm/ch5_setprio.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5_spawn0.asm	/^	i = 15;$/;"	d
i	asm/ch5_spawn0.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5_spawn1.asm	/^	i = 15;$/;"	d
i	asm/ch5_spawn1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5_usertest.asm	/^	i = 15;$/;"	d
i	asm/ch5_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5b_exec_simple.asm	/^	i = 15;$/;"	d
i	asm/ch5b_exec_simple.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5b_exit.asm	/^	i = 15;$/;"	d
i	asm/ch5b_exit.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5b_forktest0.asm	/^	i = 15;$/;"	d
i	asm/ch5b_forktest0.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5b_forktest1.asm	/^	i = 15;$/;"	d
i	asm/ch5b_forktest1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5b_forktest2.asm	/^	i = 15;$/;"	d
i	asm/ch5b_forktest2.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5b_getpid.asm	/^	i = 15;$/;"	d
i	asm/ch5b_getpid.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5b_usertest.asm	/^	i = 15;$/;"	d
i	asm/ch5b_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5t_stride0.asm	/^	i = 15;$/;"	d
i	asm/ch5t_stride0.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5t_stride1.asm	/^	i = 15;$/;"	d
i	asm/ch5t_stride1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5t_stride2.asm	/^	i = 15;$/;"	d
i	asm/ch5t_stride2.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5t_stride3.asm	/^	i = 15;$/;"	d
i	asm/ch5t_stride3.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5t_stride4.asm	/^	i = 15;$/;"	d
i	asm/ch5t_stride4.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5t_stride5.asm	/^	i = 15;$/;"	d
i	asm/ch5t_stride5.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch5t_usertest.asm	/^	i = 15;$/;"	d
i	asm/ch5t_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6_file0.asm	/^	i = 15;$/;"	d
i	asm/ch6_file0.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6_file1.asm	/^	i = 15;$/;"	d
i	asm/ch6_file1.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6_file2.asm	/^	i = 15;$/;"	d
i	asm/ch6_file2.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6_file3.asm	/^	i = 15;$/;"	d
i	asm/ch6_file3.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6_usertest.asm	/^	i = 15;$/;"	d
i	asm/ch6_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6b_args.asm	/^	i = 15;$/;"	d
i	asm/ch6b_args.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6b_assert.asm	/^	i = 15;$/;"	d
i	asm/ch6b_assert.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6b_cat.asm	/^	i = 15;$/;"	d
i	asm/ch6b_cat.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6b_exec.asm	/^	i = 15;$/;"	d
i	asm/ch6b_exec.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6b_filetest.asm	/^	i = 15;$/;"	d
i	asm/ch6b_filetest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6b_filetest_simple.asm	/^	i = 15;$/;"	d
i	asm/ch6b_filetest_simple.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6b_panic.asm	/^	i = 15;$/;"	d
i	asm/ch6b_panic.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch6b_usertest.asm	/^	i = 15;$/;"	d
i	asm/ch6b_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch7b_pipetest.asm	/^	i = 15;$/;"	d
i	asm/ch7b_pipetest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch7b_usertest.asm	/^	i = 15;$/;"	d
i	asm/ch7b_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8_mut1_deadlock.asm	/^	i = 15;$/;"	d
i	asm/ch8_mut1_deadlock.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8_sem1_deadlock.asm	/^	i = 15;$/;"	d
i	asm/ch8_sem1_deadlock.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8_sem2_deadlock.asm	/^	i = 15;$/;"	d
i	asm/ch8_sem2_deadlock.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8_usertest.asm	/^	i = 15;$/;"	d
i	asm/ch8_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_mpsc_sem.asm	/^	i = 15;$/;"	d
i	asm/ch8b_mpsc_sem.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_mut_phi_din.asm	/^	i = 15;$/;"	d
i	asm/ch8b_mut_phi_din.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_mut_race.asm	/^	i = 15;$/;"	d
i	asm/ch8b_mut_race.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_spin_mut_race.asm	/^	i = 15;$/;"	d
i	asm/ch8b_spin_mut_race.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_sync_sem.asm	/^	i = 15;$/;"	d
i	asm/ch8b_sync_sem.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_test_condvar.asm	/^	i = 15;$/;"	d
i	asm/ch8b_test_condvar.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_threads.asm	/^	i = 15;$/;"	d
i	asm/ch8b_threads.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_threads_arg.asm	/^	i = 15;$/;"	d
i	asm/ch8b_threads_arg.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/ch8b_usertest.asm	/^	i = 15;$/;"	d
i	asm/ch8b_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	asm/usershell.asm	/^	i = 15;$/;"	d
i	asm/usershell.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/__ch2_bad_address.asm	/^	i = 15;$/;"	d
i	build/asm/__ch2_bad_address.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/__ch2_bad_instruction.asm	/^	i = 15;$/;"	d
i	build/asm/__ch2_bad_instruction.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/__ch2_bad_register.asm	/^	i = 15;$/;"	d
i	build/asm/__ch2_bad_register.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch2b_exit.asm	/^	i = 15;$/;"	d
i	build/asm/ch2b_exit.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch2b_hello_world.asm	/^	i = 15;$/;"	d
i	build/asm/ch2b_hello_world.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch2b_power.asm	/^	i = 15;$/;"	d
i	build/asm/ch2b_power.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch3_taskinfo.asm	/^	i = 15;$/;"	d
i	build/asm/ch3_taskinfo.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch3b_sleep.asm	/^	i = 15;$/;"	d
i	build/asm/ch3b_sleep.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch3b_sleep1.asm	/^	i = 15;$/;"	d
i	build/asm/ch3b_sleep1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch3b_yield0.asm	/^	i = 15;$/;"	d
i	build/asm/ch3b_yield0.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch3b_yield1.asm	/^	i = 15;$/;"	d
i	build/asm/ch3b_yield1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch3b_yield2.asm	/^	i = 15;$/;"	d
i	build/asm/ch3b_yield2.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch4_mmap0.asm	/^	i = 15;$/;"	d
i	build/asm/ch4_mmap0.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch4_mmap1.asm	/^	i = 15;$/;"	d
i	build/asm/ch4_mmap1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch4_mmap2.asm	/^	i = 15;$/;"	d
i	build/asm/ch4_mmap2.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch4_mmap3.asm	/^	i = 15;$/;"	d
i	build/asm/ch4_mmap3.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch4_unmap0.asm	/^	i = 15;$/;"	d
i	build/asm/ch4_unmap0.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch4_unmap1.asm	/^	i = 15;$/;"	d
i	build/asm/ch4_unmap1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5_exit0.asm	/^	i = 15;$/;"	d
i	build/asm/ch5_exit0.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5_exit1.asm	/^	i = 15;$/;"	d
i	build/asm/ch5_exit1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5_mergetest.asm	/^	i = 15;$/;"	d
i	build/asm/ch5_mergetest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5_ppid.asm	/^	i = 15;$/;"	d
i	build/asm/ch5_ppid.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5_setprio.asm	/^	i = 15;$/;"	d
i	build/asm/ch5_setprio.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5_spawn0.asm	/^	i = 15;$/;"	d
i	build/asm/ch5_spawn0.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5_spawn1.asm	/^	i = 15;$/;"	d
i	build/asm/ch5_spawn1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5_usertest.asm	/^	i = 15;$/;"	d
i	build/asm/ch5_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5b_exec_simple.asm	/^	i = 15;$/;"	d
i	build/asm/ch5b_exec_simple.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5b_exit.asm	/^	i = 15;$/;"	d
i	build/asm/ch5b_exit.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5b_forktest0.asm	/^	i = 15;$/;"	d
i	build/asm/ch5b_forktest0.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5b_forktest1.asm	/^	i = 15;$/;"	d
i	build/asm/ch5b_forktest1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5b_forktest2.asm	/^	i = 15;$/;"	d
i	build/asm/ch5b_forktest2.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5b_getpid.asm	/^	i = 15;$/;"	d
i	build/asm/ch5b_getpid.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5b_usertest.asm	/^	i = 15;$/;"	d
i	build/asm/ch5b_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5t_stride0.asm	/^	i = 15;$/;"	d
i	build/asm/ch5t_stride0.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5t_stride1.asm	/^	i = 15;$/;"	d
i	build/asm/ch5t_stride1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5t_stride2.asm	/^	i = 15;$/;"	d
i	build/asm/ch5t_stride2.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5t_stride3.asm	/^	i = 15;$/;"	d
i	build/asm/ch5t_stride3.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5t_stride4.asm	/^	i = 15;$/;"	d
i	build/asm/ch5t_stride4.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5t_stride5.asm	/^	i = 15;$/;"	d
i	build/asm/ch5t_stride5.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch5t_usertest.asm	/^	i = 15;$/;"	d
i	build/asm/ch5t_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6_file0.asm	/^	i = 15;$/;"	d
i	build/asm/ch6_file0.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6_file1.asm	/^	i = 15;$/;"	d
i	build/asm/ch6_file1.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6_file2.asm	/^	i = 15;$/;"	d
i	build/asm/ch6_file2.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6_file3.asm	/^	i = 15;$/;"	d
i	build/asm/ch6_file3.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6_usertest.asm	/^	i = 15;$/;"	d
i	build/asm/ch6_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6b_args.asm	/^	i = 15;$/;"	d
i	build/asm/ch6b_args.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6b_assert.asm	/^	i = 15;$/;"	d
i	build/asm/ch6b_assert.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6b_cat.asm	/^	i = 15;$/;"	d
i	build/asm/ch6b_cat.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6b_exec.asm	/^	i = 15;$/;"	d
i	build/asm/ch6b_exec.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6b_filetest.asm	/^	i = 15;$/;"	d
i	build/asm/ch6b_filetest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6b_filetest_simple.asm	/^	i = 15;$/;"	d
i	build/asm/ch6b_filetest_simple.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6b_panic.asm	/^	i = 15;$/;"	d
i	build/asm/ch6b_panic.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch6b_usertest.asm	/^	i = 15;$/;"	d
i	build/asm/ch6b_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch7b_pipetest.asm	/^	i = 15;$/;"	d
i	build/asm/ch7b_pipetest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch7b_usertest.asm	/^	i = 15;$/;"	d
i	build/asm/ch7b_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8_mut1_deadlock.asm	/^	i = 15;$/;"	d
i	build/asm/ch8_mut1_deadlock.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8_sem1_deadlock.asm	/^	i = 15;$/;"	d
i	build/asm/ch8_sem1_deadlock.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8_sem2_deadlock.asm	/^	i = 15;$/;"	d
i	build/asm/ch8_sem2_deadlock.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8_usertest.asm	/^	i = 15;$/;"	d
i	build/asm/ch8_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_mpsc_sem.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_mpsc_sem.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_mut_phi_din.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_mut_phi_din.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_mut_race.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_mut_race.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_spin_mut_race.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_spin_mut_race.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_sync_sem.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_sync_sem.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_test_condvar.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_test_condvar.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_threads.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_threads.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_threads_arg.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_threads_arg.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/ch8b_usertest.asm	/^	i = 15;$/;"	d
i	build/asm/ch8b_usertest.asm	/^	i = strlen(s) - 1;$/;"	d
i	build/asm/usershell.asm	/^	i = 15;$/;"	d
i	build/asm/usershell.asm	/^	i = strlen(s) - 1;$/;"	d
index	asm/ch2b_power.asm	/^		index = (index + 1) % SIZE;$/;"	d
index	build/asm/ch2b_power.asm	/^		index = (index + 1) % SIZE;$/;"	d
info_arch	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
ino	include/stddef.h	/^	uint64 ino; \/\/ inode 文件所在 inode 编号$/;"	m	struct:__anon2
int	asm/__ch2_bad_address.asm	/^int __fflush()$/;"	l
int	asm/__ch2_bad_address.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/__ch2_bad_address.asm	/^int __write_buffer()$/;"	l
int	asm/__ch2_bad_address.asm	/^int atoi(const char *s)$/;"	l
int	asm/__ch2_bad_address.asm	/^int close(int fd)$/;"	l
int	asm/__ch2_bad_address.asm	/^int condvar_create()$/;"	l
int	asm/__ch2_bad_address.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/__ch2_bad_address.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/__ch2_bad_address.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/__ch2_bad_address.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/__ch2_bad_address.asm	/^int fflush(int fd)$/;"	l
int	asm/__ch2_bad_address.asm	/^int fork()$/;"	l
int	asm/__ch2_bad_address.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/__ch2_bad_address.asm	/^int getchar()$/;"	l
int	asm/__ch2_bad_address.asm	/^int getpid()$/;"	l
int	asm/__ch2_bad_address.asm	/^int getppid()$/;"	l
int	asm/__ch2_bad_address.asm	/^int gettid(void)$/;"	l
int	asm/__ch2_bad_address.asm	/^int isdigit(int c)$/;"	l
int	asm/__ch2_bad_address.asm	/^int isspace(int c)$/;"	l
int	asm/__ch2_bad_address.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/__ch2_bad_address.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/__ch2_bad_address.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/__ch2_bad_address.asm	/^int main()$/;"	l
int	asm/__ch2_bad_address.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/__ch2_bad_address.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/__ch2_bad_address.asm	/^int mutex_blocking_create()$/;"	l
int	asm/__ch2_bad_address.asm	/^int mutex_create()$/;"	l
int	asm/__ch2_bad_address.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/__ch2_bad_address.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/__ch2_bad_address.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/__ch2_bad_address.asm	/^int pipe(void *p)$/;"	l
int	asm/__ch2_bad_address.asm	/^int sched_yield()$/;"	l
int	asm/__ch2_bad_address.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/__ch2_bad_address.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/__ch2_bad_address.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/__ch2_bad_address.asm	/^int set_priority(int prio)$/;"	l
int	asm/__ch2_bad_address.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/__ch2_bad_address.asm	/^int spawn(const char *file)$/;"	l
int	asm/__ch2_bad_address.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/__ch2_bad_address.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/__ch2_bad_address.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/__ch2_bad_address.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/__ch2_bad_address.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/__ch2_bad_address.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/__ch2_bad_address.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/__ch2_bad_address.asm	/^int unlink(char *path)$/;"	l
int	asm/__ch2_bad_address.asm	/^int wait(int *code)$/;"	l
int	asm/__ch2_bad_address.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/__ch2_bad_address.asm	/^int waittid(int tid)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int __fflush()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int __write_buffer()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int atoi(const char *s)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int close(int fd)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int condvar_create()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int fflush(int fd)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int fork()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int getchar()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int getpid()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int getppid()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int gettid(void)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int isdigit(int c)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int isspace(int c)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int main()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int mutex_blocking_create()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int mutex_create()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int pipe(void *p)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int sched_yield()$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int set_priority(int prio)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int spawn(const char *file)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int unlink(char *path)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int wait(int *code)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/__ch2_bad_instruction.asm	/^int waittid(int tid)$/;"	l
int	asm/__ch2_bad_register.asm	/^int __fflush()$/;"	l
int	asm/__ch2_bad_register.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/__ch2_bad_register.asm	/^int __write_buffer()$/;"	l
int	asm/__ch2_bad_register.asm	/^int atoi(const char *s)$/;"	l
int	asm/__ch2_bad_register.asm	/^int close(int fd)$/;"	l
int	asm/__ch2_bad_register.asm	/^int condvar_create()$/;"	l
int	asm/__ch2_bad_register.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/__ch2_bad_register.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/__ch2_bad_register.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/__ch2_bad_register.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/__ch2_bad_register.asm	/^int fflush(int fd)$/;"	l
int	asm/__ch2_bad_register.asm	/^int fork()$/;"	l
int	asm/__ch2_bad_register.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/__ch2_bad_register.asm	/^int getchar()$/;"	l
int	asm/__ch2_bad_register.asm	/^int getpid()$/;"	l
int	asm/__ch2_bad_register.asm	/^int getppid()$/;"	l
int	asm/__ch2_bad_register.asm	/^int gettid(void)$/;"	l
int	asm/__ch2_bad_register.asm	/^int isdigit(int c)$/;"	l
int	asm/__ch2_bad_register.asm	/^int isspace(int c)$/;"	l
int	asm/__ch2_bad_register.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/__ch2_bad_register.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/__ch2_bad_register.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/__ch2_bad_register.asm	/^int main()$/;"	l
int	asm/__ch2_bad_register.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/__ch2_bad_register.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/__ch2_bad_register.asm	/^int mutex_blocking_create()$/;"	l
int	asm/__ch2_bad_register.asm	/^int mutex_create()$/;"	l
int	asm/__ch2_bad_register.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/__ch2_bad_register.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/__ch2_bad_register.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/__ch2_bad_register.asm	/^int pipe(void *p)$/;"	l
int	asm/__ch2_bad_register.asm	/^int sched_yield()$/;"	l
int	asm/__ch2_bad_register.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/__ch2_bad_register.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/__ch2_bad_register.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/__ch2_bad_register.asm	/^int set_priority(int prio)$/;"	l
int	asm/__ch2_bad_register.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/__ch2_bad_register.asm	/^int spawn(const char *file)$/;"	l
int	asm/__ch2_bad_register.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/__ch2_bad_register.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/__ch2_bad_register.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/__ch2_bad_register.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/__ch2_bad_register.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/__ch2_bad_register.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/__ch2_bad_register.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/__ch2_bad_register.asm	/^int unlink(char *path)$/;"	l
int	asm/__ch2_bad_register.asm	/^int wait(int *code)$/;"	l
int	asm/__ch2_bad_register.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/__ch2_bad_register.asm	/^int waittid(int tid)$/;"	l
int	asm/ch2b_exit.asm	/^int __fflush()$/;"	l
int	asm/ch2b_exit.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch2b_exit.asm	/^int __write_buffer()$/;"	l
int	asm/ch2b_exit.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch2b_exit.asm	/^int close(int fd)$/;"	l
int	asm/ch2b_exit.asm	/^int condvar_create()$/;"	l
int	asm/ch2b_exit.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch2b_exit.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch2b_exit.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch2b_exit.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch2b_exit.asm	/^int fflush(int fd)$/;"	l
int	asm/ch2b_exit.asm	/^int fork()$/;"	l
int	asm/ch2b_exit.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch2b_exit.asm	/^int getchar()$/;"	l
int	asm/ch2b_exit.asm	/^int getpid()$/;"	l
int	asm/ch2b_exit.asm	/^int getppid()$/;"	l
int	asm/ch2b_exit.asm	/^int gettid(void)$/;"	l
int	asm/ch2b_exit.asm	/^int isdigit(int c)$/;"	l
int	asm/ch2b_exit.asm	/^int isspace(int c)$/;"	l
int	asm/ch2b_exit.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch2b_exit.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch2b_exit.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch2b_exit.asm	/^int main()$/;"	l
int	asm/ch2b_exit.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch2b_exit.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch2b_exit.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch2b_exit.asm	/^int mutex_create()$/;"	l
int	asm/ch2b_exit.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch2b_exit.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch2b_exit.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch2b_exit.asm	/^int pipe(void *p)$/;"	l
int	asm/ch2b_exit.asm	/^int sched_yield()$/;"	l
int	asm/ch2b_exit.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch2b_exit.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch2b_exit.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch2b_exit.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch2b_exit.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch2b_exit.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch2b_exit.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch2b_exit.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch2b_exit.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch2b_exit.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch2b_exit.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch2b_exit.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch2b_exit.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch2b_exit.asm	/^int unlink(char *path)$/;"	l
int	asm/ch2b_exit.asm	/^int wait(int *code)$/;"	l
int	asm/ch2b_exit.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch2b_exit.asm	/^int waittid(int tid)$/;"	l
int	asm/ch2b_hello_world.asm	/^int __fflush()$/;"	l
int	asm/ch2b_hello_world.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch2b_hello_world.asm	/^int __write_buffer()$/;"	l
int	asm/ch2b_hello_world.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch2b_hello_world.asm	/^int close(int fd)$/;"	l
int	asm/ch2b_hello_world.asm	/^int condvar_create()$/;"	l
int	asm/ch2b_hello_world.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch2b_hello_world.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch2b_hello_world.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch2b_hello_world.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch2b_hello_world.asm	/^int fflush(int fd)$/;"	l
int	asm/ch2b_hello_world.asm	/^int fork()$/;"	l
int	asm/ch2b_hello_world.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch2b_hello_world.asm	/^int getchar()$/;"	l
int	asm/ch2b_hello_world.asm	/^int getpid()$/;"	l
int	asm/ch2b_hello_world.asm	/^int getppid()$/;"	l
int	asm/ch2b_hello_world.asm	/^int gettid(void)$/;"	l
int	asm/ch2b_hello_world.asm	/^int isdigit(int c)$/;"	l
int	asm/ch2b_hello_world.asm	/^int isspace(int c)$/;"	l
int	asm/ch2b_hello_world.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch2b_hello_world.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch2b_hello_world.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch2b_hello_world.asm	/^int main()$/;"	l
int	asm/ch2b_hello_world.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch2b_hello_world.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch2b_hello_world.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch2b_hello_world.asm	/^int mutex_create()$/;"	l
int	asm/ch2b_hello_world.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch2b_hello_world.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch2b_hello_world.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch2b_hello_world.asm	/^int pipe(void *p)$/;"	l
int	asm/ch2b_hello_world.asm	/^int sched_yield()$/;"	l
int	asm/ch2b_hello_world.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch2b_hello_world.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch2b_hello_world.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch2b_hello_world.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch2b_hello_world.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch2b_hello_world.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch2b_hello_world.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch2b_hello_world.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch2b_hello_world.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch2b_hello_world.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch2b_hello_world.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch2b_hello_world.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch2b_hello_world.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch2b_hello_world.asm	/^int unlink(char *path)$/;"	l
int	asm/ch2b_hello_world.asm	/^int wait(int *code)$/;"	l
int	asm/ch2b_hello_world.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch2b_hello_world.asm	/^int waittid(int tid)$/;"	l
int	asm/ch2b_power.asm	/^int __fflush()$/;"	l
int	asm/ch2b_power.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch2b_power.asm	/^int __write_buffer()$/;"	l
int	asm/ch2b_power.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch2b_power.asm	/^int close(int fd)$/;"	l
int	asm/ch2b_power.asm	/^int condvar_create()$/;"	l
int	asm/ch2b_power.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch2b_power.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch2b_power.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch2b_power.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch2b_power.asm	/^int fflush(int fd)$/;"	l
int	asm/ch2b_power.asm	/^int fork()$/;"	l
int	asm/ch2b_power.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch2b_power.asm	/^int getchar()$/;"	l
int	asm/ch2b_power.asm	/^int getpid()$/;"	l
int	asm/ch2b_power.asm	/^int getppid()$/;"	l
int	asm/ch2b_power.asm	/^int gettid(void)$/;"	l
int	asm/ch2b_power.asm	/^int isdigit(int c)$/;"	l
int	asm/ch2b_power.asm	/^int isspace(int c)$/;"	l
int	asm/ch2b_power.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch2b_power.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch2b_power.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch2b_power.asm	/^int main()$/;"	l
int	asm/ch2b_power.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch2b_power.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch2b_power.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch2b_power.asm	/^int mutex_create()$/;"	l
int	asm/ch2b_power.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch2b_power.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch2b_power.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch2b_power.asm	/^int pipe(void *p)$/;"	l
int	asm/ch2b_power.asm	/^int sched_yield()$/;"	l
int	asm/ch2b_power.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch2b_power.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch2b_power.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch2b_power.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch2b_power.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch2b_power.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch2b_power.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch2b_power.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch2b_power.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch2b_power.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch2b_power.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch2b_power.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch2b_power.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch2b_power.asm	/^int unlink(char *path)$/;"	l
int	asm/ch2b_power.asm	/^int wait(int *code)$/;"	l
int	asm/ch2b_power.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch2b_power.asm	/^int waittid(int tid)$/;"	l
int	asm/ch3_taskinfo.asm	/^int __fflush()$/;"	l
int	asm/ch3_taskinfo.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch3_taskinfo.asm	/^int __write_buffer()$/;"	l
int	asm/ch3_taskinfo.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch3_taskinfo.asm	/^int close(int fd)$/;"	l
int	asm/ch3_taskinfo.asm	/^int condvar_create()$/;"	l
int	asm/ch3_taskinfo.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch3_taskinfo.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch3_taskinfo.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch3_taskinfo.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch3_taskinfo.asm	/^int fflush(int fd)$/;"	l
int	asm/ch3_taskinfo.asm	/^int fork()$/;"	l
int	asm/ch3_taskinfo.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch3_taskinfo.asm	/^int getchar()$/;"	l
int	asm/ch3_taskinfo.asm	/^int getpid()$/;"	l
int	asm/ch3_taskinfo.asm	/^int getppid()$/;"	l
int	asm/ch3_taskinfo.asm	/^int gettid(void)$/;"	l
int	asm/ch3_taskinfo.asm	/^int isdigit(int c)$/;"	l
int	asm/ch3_taskinfo.asm	/^int isspace(int c)$/;"	l
int	asm/ch3_taskinfo.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch3_taskinfo.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch3_taskinfo.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch3_taskinfo.asm	/^int main()$/;"	l
int	asm/ch3_taskinfo.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch3_taskinfo.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch3_taskinfo.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch3_taskinfo.asm	/^int mutex_create()$/;"	l
int	asm/ch3_taskinfo.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch3_taskinfo.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch3_taskinfo.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch3_taskinfo.asm	/^int pipe(void *p)$/;"	l
int	asm/ch3_taskinfo.asm	/^int sched_yield()$/;"	l
int	asm/ch3_taskinfo.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch3_taskinfo.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch3_taskinfo.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch3_taskinfo.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch3_taskinfo.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch3_taskinfo.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch3_taskinfo.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch3_taskinfo.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch3_taskinfo.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch3_taskinfo.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch3_taskinfo.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch3_taskinfo.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch3_taskinfo.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch3_taskinfo.asm	/^int unlink(char *path)$/;"	l
int	asm/ch3_taskinfo.asm	/^int wait(int *code)$/;"	l
int	asm/ch3_taskinfo.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch3_taskinfo.asm	/^int waittid(int tid)$/;"	l
int	asm/ch3b_sleep.asm	/^int __fflush()$/;"	l
int	asm/ch3b_sleep.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch3b_sleep.asm	/^int __write_buffer()$/;"	l
int	asm/ch3b_sleep.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch3b_sleep.asm	/^int close(int fd)$/;"	l
int	asm/ch3b_sleep.asm	/^int condvar_create()$/;"	l
int	asm/ch3b_sleep.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch3b_sleep.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch3b_sleep.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch3b_sleep.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch3b_sleep.asm	/^int fflush(int fd)$/;"	l
int	asm/ch3b_sleep.asm	/^int fork()$/;"	l
int	asm/ch3b_sleep.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch3b_sleep.asm	/^int getchar()$/;"	l
int	asm/ch3b_sleep.asm	/^int getpid()$/;"	l
int	asm/ch3b_sleep.asm	/^int getppid()$/;"	l
int	asm/ch3b_sleep.asm	/^int gettid(void)$/;"	l
int	asm/ch3b_sleep.asm	/^int isdigit(int c)$/;"	l
int	asm/ch3b_sleep.asm	/^int isspace(int c)$/;"	l
int	asm/ch3b_sleep.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch3b_sleep.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch3b_sleep.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch3b_sleep.asm	/^int main()$/;"	l
int	asm/ch3b_sleep.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch3b_sleep.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch3b_sleep.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch3b_sleep.asm	/^int mutex_create()$/;"	l
int	asm/ch3b_sleep.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch3b_sleep.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch3b_sleep.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch3b_sleep.asm	/^int pipe(void *p)$/;"	l
int	asm/ch3b_sleep.asm	/^int sched_yield()$/;"	l
int	asm/ch3b_sleep.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch3b_sleep.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch3b_sleep.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch3b_sleep.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch3b_sleep.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch3b_sleep.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch3b_sleep.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch3b_sleep.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch3b_sleep.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch3b_sleep.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch3b_sleep.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch3b_sleep.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch3b_sleep.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch3b_sleep.asm	/^int unlink(char *path)$/;"	l
int	asm/ch3b_sleep.asm	/^int wait(int *code)$/;"	l
int	asm/ch3b_sleep.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch3b_sleep.asm	/^int waittid(int tid)$/;"	l
int	asm/ch3b_sleep1.asm	/^int __fflush()$/;"	l
int	asm/ch3b_sleep1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch3b_sleep1.asm	/^int __write_buffer()$/;"	l
int	asm/ch3b_sleep1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch3b_sleep1.asm	/^int close(int fd)$/;"	l
int	asm/ch3b_sleep1.asm	/^int condvar_create()$/;"	l
int	asm/ch3b_sleep1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch3b_sleep1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch3b_sleep1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch3b_sleep1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch3b_sleep1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch3b_sleep1.asm	/^int fork()$/;"	l
int	asm/ch3b_sleep1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch3b_sleep1.asm	/^int getchar()$/;"	l
int	asm/ch3b_sleep1.asm	/^int getpid()$/;"	l
int	asm/ch3b_sleep1.asm	/^int getppid()$/;"	l
int	asm/ch3b_sleep1.asm	/^int gettid(void)$/;"	l
int	asm/ch3b_sleep1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch3b_sleep1.asm	/^int isspace(int c)$/;"	l
int	asm/ch3b_sleep1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch3b_sleep1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch3b_sleep1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch3b_sleep1.asm	/^int main()$/;"	l
int	asm/ch3b_sleep1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch3b_sleep1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch3b_sleep1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch3b_sleep1.asm	/^int mutex_create()$/;"	l
int	asm/ch3b_sleep1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch3b_sleep1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch3b_sleep1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch3b_sleep1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch3b_sleep1.asm	/^int sched_yield()$/;"	l
int	asm/ch3b_sleep1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch3b_sleep1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch3b_sleep1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch3b_sleep1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch3b_sleep1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch3b_sleep1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch3b_sleep1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch3b_sleep1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch3b_sleep1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch3b_sleep1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch3b_sleep1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch3b_sleep1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch3b_sleep1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch3b_sleep1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch3b_sleep1.asm	/^int wait(int *code)$/;"	l
int	asm/ch3b_sleep1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch3b_sleep1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch3b_yield0.asm	/^int __fflush()$/;"	l
int	asm/ch3b_yield0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch3b_yield0.asm	/^int __write_buffer()$/;"	l
int	asm/ch3b_yield0.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch3b_yield0.asm	/^int close(int fd)$/;"	l
int	asm/ch3b_yield0.asm	/^int condvar_create()$/;"	l
int	asm/ch3b_yield0.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch3b_yield0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch3b_yield0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch3b_yield0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch3b_yield0.asm	/^int fflush(int fd)$/;"	l
int	asm/ch3b_yield0.asm	/^int fork()$/;"	l
int	asm/ch3b_yield0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch3b_yield0.asm	/^int getchar()$/;"	l
int	asm/ch3b_yield0.asm	/^int getpid()$/;"	l
int	asm/ch3b_yield0.asm	/^int getppid()$/;"	l
int	asm/ch3b_yield0.asm	/^int gettid(void)$/;"	l
int	asm/ch3b_yield0.asm	/^int isdigit(int c)$/;"	l
int	asm/ch3b_yield0.asm	/^int isspace(int c)$/;"	l
int	asm/ch3b_yield0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch3b_yield0.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch3b_yield0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch3b_yield0.asm	/^int main()$/;"	l
int	asm/ch3b_yield0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch3b_yield0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch3b_yield0.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch3b_yield0.asm	/^int mutex_create()$/;"	l
int	asm/ch3b_yield0.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch3b_yield0.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch3b_yield0.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch3b_yield0.asm	/^int pipe(void *p)$/;"	l
int	asm/ch3b_yield0.asm	/^int sched_yield()$/;"	l
int	asm/ch3b_yield0.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch3b_yield0.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch3b_yield0.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch3b_yield0.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch3b_yield0.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch3b_yield0.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch3b_yield0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch3b_yield0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch3b_yield0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch3b_yield0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch3b_yield0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch3b_yield0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch3b_yield0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch3b_yield0.asm	/^int unlink(char *path)$/;"	l
int	asm/ch3b_yield0.asm	/^int wait(int *code)$/;"	l
int	asm/ch3b_yield0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch3b_yield0.asm	/^int waittid(int tid)$/;"	l
int	asm/ch3b_yield1.asm	/^int __fflush()$/;"	l
int	asm/ch3b_yield1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch3b_yield1.asm	/^int __write_buffer()$/;"	l
int	asm/ch3b_yield1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch3b_yield1.asm	/^int close(int fd)$/;"	l
int	asm/ch3b_yield1.asm	/^int condvar_create()$/;"	l
int	asm/ch3b_yield1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch3b_yield1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch3b_yield1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch3b_yield1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch3b_yield1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch3b_yield1.asm	/^int fork()$/;"	l
int	asm/ch3b_yield1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch3b_yield1.asm	/^int getchar()$/;"	l
int	asm/ch3b_yield1.asm	/^int getpid()$/;"	l
int	asm/ch3b_yield1.asm	/^int getppid()$/;"	l
int	asm/ch3b_yield1.asm	/^int gettid(void)$/;"	l
int	asm/ch3b_yield1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch3b_yield1.asm	/^int isspace(int c)$/;"	l
int	asm/ch3b_yield1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch3b_yield1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch3b_yield1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch3b_yield1.asm	/^int main()$/;"	l
int	asm/ch3b_yield1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch3b_yield1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch3b_yield1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch3b_yield1.asm	/^int mutex_create()$/;"	l
int	asm/ch3b_yield1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch3b_yield1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch3b_yield1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch3b_yield1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch3b_yield1.asm	/^int sched_yield()$/;"	l
int	asm/ch3b_yield1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch3b_yield1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch3b_yield1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch3b_yield1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch3b_yield1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch3b_yield1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch3b_yield1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch3b_yield1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch3b_yield1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch3b_yield1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch3b_yield1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch3b_yield1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch3b_yield1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch3b_yield1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch3b_yield1.asm	/^int wait(int *code)$/;"	l
int	asm/ch3b_yield1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch3b_yield1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch3b_yield2.asm	/^int __fflush()$/;"	l
int	asm/ch3b_yield2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch3b_yield2.asm	/^int __write_buffer()$/;"	l
int	asm/ch3b_yield2.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch3b_yield2.asm	/^int close(int fd)$/;"	l
int	asm/ch3b_yield2.asm	/^int condvar_create()$/;"	l
int	asm/ch3b_yield2.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch3b_yield2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch3b_yield2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch3b_yield2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch3b_yield2.asm	/^int fflush(int fd)$/;"	l
int	asm/ch3b_yield2.asm	/^int fork()$/;"	l
int	asm/ch3b_yield2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch3b_yield2.asm	/^int getchar()$/;"	l
int	asm/ch3b_yield2.asm	/^int getpid()$/;"	l
int	asm/ch3b_yield2.asm	/^int getppid()$/;"	l
int	asm/ch3b_yield2.asm	/^int gettid(void)$/;"	l
int	asm/ch3b_yield2.asm	/^int isdigit(int c)$/;"	l
int	asm/ch3b_yield2.asm	/^int isspace(int c)$/;"	l
int	asm/ch3b_yield2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch3b_yield2.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch3b_yield2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch3b_yield2.asm	/^int main()$/;"	l
int	asm/ch3b_yield2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch3b_yield2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch3b_yield2.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch3b_yield2.asm	/^int mutex_create()$/;"	l
int	asm/ch3b_yield2.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch3b_yield2.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch3b_yield2.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch3b_yield2.asm	/^int pipe(void *p)$/;"	l
int	asm/ch3b_yield2.asm	/^int sched_yield()$/;"	l
int	asm/ch3b_yield2.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch3b_yield2.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch3b_yield2.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch3b_yield2.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch3b_yield2.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch3b_yield2.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch3b_yield2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch3b_yield2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch3b_yield2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch3b_yield2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch3b_yield2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch3b_yield2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch3b_yield2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch3b_yield2.asm	/^int unlink(char *path)$/;"	l
int	asm/ch3b_yield2.asm	/^int wait(int *code)$/;"	l
int	asm/ch3b_yield2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch3b_yield2.asm	/^int waittid(int tid)$/;"	l
int	asm/ch4_mmap0.asm	/^int __fflush()$/;"	l
int	asm/ch4_mmap0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch4_mmap0.asm	/^int __write_buffer()$/;"	l
int	asm/ch4_mmap0.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch4_mmap0.asm	/^int close(int fd)$/;"	l
int	asm/ch4_mmap0.asm	/^int condvar_create()$/;"	l
int	asm/ch4_mmap0.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch4_mmap0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch4_mmap0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch4_mmap0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch4_mmap0.asm	/^int fflush(int fd)$/;"	l
int	asm/ch4_mmap0.asm	/^int fork()$/;"	l
int	asm/ch4_mmap0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch4_mmap0.asm	/^int getchar()$/;"	l
int	asm/ch4_mmap0.asm	/^int getpid()$/;"	l
int	asm/ch4_mmap0.asm	/^int getppid()$/;"	l
int	asm/ch4_mmap0.asm	/^int gettid(void)$/;"	l
int	asm/ch4_mmap0.asm	/^int isdigit(int c)$/;"	l
int	asm/ch4_mmap0.asm	/^int isspace(int c)$/;"	l
int	asm/ch4_mmap0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch4_mmap0.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch4_mmap0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch4_mmap0.asm	/^int main()$/;"	l
int	asm/ch4_mmap0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch4_mmap0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch4_mmap0.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch4_mmap0.asm	/^int mutex_create()$/;"	l
int	asm/ch4_mmap0.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch4_mmap0.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch4_mmap0.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch4_mmap0.asm	/^int pipe(void *p)$/;"	l
int	asm/ch4_mmap0.asm	/^int sched_yield()$/;"	l
int	asm/ch4_mmap0.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch4_mmap0.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch4_mmap0.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch4_mmap0.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch4_mmap0.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch4_mmap0.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch4_mmap0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch4_mmap0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch4_mmap0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch4_mmap0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch4_mmap0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch4_mmap0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch4_mmap0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch4_mmap0.asm	/^int unlink(char *path)$/;"	l
int	asm/ch4_mmap0.asm	/^int wait(int *code)$/;"	l
int	asm/ch4_mmap0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch4_mmap0.asm	/^int waittid(int tid)$/;"	l
int	asm/ch4_mmap1.asm	/^int __fflush()$/;"	l
int	asm/ch4_mmap1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch4_mmap1.asm	/^int __write_buffer()$/;"	l
int	asm/ch4_mmap1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch4_mmap1.asm	/^int close(int fd)$/;"	l
int	asm/ch4_mmap1.asm	/^int condvar_create()$/;"	l
int	asm/ch4_mmap1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch4_mmap1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch4_mmap1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch4_mmap1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch4_mmap1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch4_mmap1.asm	/^int fork()$/;"	l
int	asm/ch4_mmap1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch4_mmap1.asm	/^int getchar()$/;"	l
int	asm/ch4_mmap1.asm	/^int getpid()$/;"	l
int	asm/ch4_mmap1.asm	/^int getppid()$/;"	l
int	asm/ch4_mmap1.asm	/^int gettid(void)$/;"	l
int	asm/ch4_mmap1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch4_mmap1.asm	/^int isspace(int c)$/;"	l
int	asm/ch4_mmap1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch4_mmap1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch4_mmap1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch4_mmap1.asm	/^int main()$/;"	l
int	asm/ch4_mmap1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch4_mmap1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch4_mmap1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch4_mmap1.asm	/^int mutex_create()$/;"	l
int	asm/ch4_mmap1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch4_mmap1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch4_mmap1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch4_mmap1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch4_mmap1.asm	/^int sched_yield()$/;"	l
int	asm/ch4_mmap1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch4_mmap1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch4_mmap1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch4_mmap1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch4_mmap1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch4_mmap1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch4_mmap1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch4_mmap1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch4_mmap1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch4_mmap1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch4_mmap1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch4_mmap1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch4_mmap1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch4_mmap1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch4_mmap1.asm	/^int wait(int *code)$/;"	l
int	asm/ch4_mmap1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch4_mmap1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch4_mmap2.asm	/^int __fflush()$/;"	l
int	asm/ch4_mmap2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch4_mmap2.asm	/^int __write_buffer()$/;"	l
int	asm/ch4_mmap2.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch4_mmap2.asm	/^int close(int fd)$/;"	l
int	asm/ch4_mmap2.asm	/^int condvar_create()$/;"	l
int	asm/ch4_mmap2.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch4_mmap2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch4_mmap2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch4_mmap2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch4_mmap2.asm	/^int fflush(int fd)$/;"	l
int	asm/ch4_mmap2.asm	/^int fork()$/;"	l
int	asm/ch4_mmap2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch4_mmap2.asm	/^int getchar()$/;"	l
int	asm/ch4_mmap2.asm	/^int getpid()$/;"	l
int	asm/ch4_mmap2.asm	/^int getppid()$/;"	l
int	asm/ch4_mmap2.asm	/^int gettid(void)$/;"	l
int	asm/ch4_mmap2.asm	/^int isdigit(int c)$/;"	l
int	asm/ch4_mmap2.asm	/^int isspace(int c)$/;"	l
int	asm/ch4_mmap2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch4_mmap2.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch4_mmap2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch4_mmap2.asm	/^int main()$/;"	l
int	asm/ch4_mmap2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch4_mmap2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch4_mmap2.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch4_mmap2.asm	/^int mutex_create()$/;"	l
int	asm/ch4_mmap2.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch4_mmap2.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch4_mmap2.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch4_mmap2.asm	/^int pipe(void *p)$/;"	l
int	asm/ch4_mmap2.asm	/^int sched_yield()$/;"	l
int	asm/ch4_mmap2.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch4_mmap2.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch4_mmap2.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch4_mmap2.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch4_mmap2.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch4_mmap2.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch4_mmap2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch4_mmap2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch4_mmap2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch4_mmap2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch4_mmap2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch4_mmap2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch4_mmap2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch4_mmap2.asm	/^int unlink(char *path)$/;"	l
int	asm/ch4_mmap2.asm	/^int wait(int *code)$/;"	l
int	asm/ch4_mmap2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch4_mmap2.asm	/^int waittid(int tid)$/;"	l
int	asm/ch4_mmap3.asm	/^int __fflush()$/;"	l
int	asm/ch4_mmap3.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch4_mmap3.asm	/^int __write_buffer()$/;"	l
int	asm/ch4_mmap3.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch4_mmap3.asm	/^int close(int fd)$/;"	l
int	asm/ch4_mmap3.asm	/^int condvar_create()$/;"	l
int	asm/ch4_mmap3.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch4_mmap3.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch4_mmap3.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch4_mmap3.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch4_mmap3.asm	/^int fflush(int fd)$/;"	l
int	asm/ch4_mmap3.asm	/^int fork()$/;"	l
int	asm/ch4_mmap3.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch4_mmap3.asm	/^int getchar()$/;"	l
int	asm/ch4_mmap3.asm	/^int getpid()$/;"	l
int	asm/ch4_mmap3.asm	/^int getppid()$/;"	l
int	asm/ch4_mmap3.asm	/^int gettid(void)$/;"	l
int	asm/ch4_mmap3.asm	/^int isdigit(int c)$/;"	l
int	asm/ch4_mmap3.asm	/^int isspace(int c)$/;"	l
int	asm/ch4_mmap3.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch4_mmap3.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch4_mmap3.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch4_mmap3.asm	/^int main()$/;"	l
int	asm/ch4_mmap3.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch4_mmap3.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch4_mmap3.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch4_mmap3.asm	/^int mutex_create()$/;"	l
int	asm/ch4_mmap3.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch4_mmap3.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch4_mmap3.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch4_mmap3.asm	/^int pipe(void *p)$/;"	l
int	asm/ch4_mmap3.asm	/^int sched_yield()$/;"	l
int	asm/ch4_mmap3.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch4_mmap3.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch4_mmap3.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch4_mmap3.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch4_mmap3.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch4_mmap3.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch4_mmap3.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch4_mmap3.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch4_mmap3.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch4_mmap3.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch4_mmap3.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch4_mmap3.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch4_mmap3.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch4_mmap3.asm	/^int unlink(char *path)$/;"	l
int	asm/ch4_mmap3.asm	/^int wait(int *code)$/;"	l
int	asm/ch4_mmap3.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch4_mmap3.asm	/^int waittid(int tid)$/;"	l
int	asm/ch4_unmap0.asm	/^int __fflush()$/;"	l
int	asm/ch4_unmap0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch4_unmap0.asm	/^int __write_buffer()$/;"	l
int	asm/ch4_unmap0.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch4_unmap0.asm	/^int close(int fd)$/;"	l
int	asm/ch4_unmap0.asm	/^int condvar_create()$/;"	l
int	asm/ch4_unmap0.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch4_unmap0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch4_unmap0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch4_unmap0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch4_unmap0.asm	/^int fflush(int fd)$/;"	l
int	asm/ch4_unmap0.asm	/^int fork()$/;"	l
int	asm/ch4_unmap0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch4_unmap0.asm	/^int getchar()$/;"	l
int	asm/ch4_unmap0.asm	/^int getpid()$/;"	l
int	asm/ch4_unmap0.asm	/^int getppid()$/;"	l
int	asm/ch4_unmap0.asm	/^int gettid(void)$/;"	l
int	asm/ch4_unmap0.asm	/^int isdigit(int c)$/;"	l
int	asm/ch4_unmap0.asm	/^int isspace(int c)$/;"	l
int	asm/ch4_unmap0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch4_unmap0.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch4_unmap0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch4_unmap0.asm	/^int main()$/;"	l
int	asm/ch4_unmap0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch4_unmap0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch4_unmap0.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch4_unmap0.asm	/^int mutex_create()$/;"	l
int	asm/ch4_unmap0.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch4_unmap0.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch4_unmap0.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch4_unmap0.asm	/^int pipe(void *p)$/;"	l
int	asm/ch4_unmap0.asm	/^int sched_yield()$/;"	l
int	asm/ch4_unmap0.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch4_unmap0.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch4_unmap0.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch4_unmap0.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch4_unmap0.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch4_unmap0.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch4_unmap0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch4_unmap0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch4_unmap0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch4_unmap0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch4_unmap0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch4_unmap0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch4_unmap0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch4_unmap0.asm	/^int unlink(char *path)$/;"	l
int	asm/ch4_unmap0.asm	/^int wait(int *code)$/;"	l
int	asm/ch4_unmap0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch4_unmap0.asm	/^int waittid(int tid)$/;"	l
int	asm/ch4_unmap1.asm	/^int __fflush()$/;"	l
int	asm/ch4_unmap1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch4_unmap1.asm	/^int __write_buffer()$/;"	l
int	asm/ch4_unmap1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch4_unmap1.asm	/^int close(int fd)$/;"	l
int	asm/ch4_unmap1.asm	/^int condvar_create()$/;"	l
int	asm/ch4_unmap1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch4_unmap1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch4_unmap1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch4_unmap1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch4_unmap1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch4_unmap1.asm	/^int fork()$/;"	l
int	asm/ch4_unmap1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch4_unmap1.asm	/^int getchar()$/;"	l
int	asm/ch4_unmap1.asm	/^int getpid()$/;"	l
int	asm/ch4_unmap1.asm	/^int getppid()$/;"	l
int	asm/ch4_unmap1.asm	/^int gettid(void)$/;"	l
int	asm/ch4_unmap1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch4_unmap1.asm	/^int isspace(int c)$/;"	l
int	asm/ch4_unmap1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch4_unmap1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch4_unmap1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch4_unmap1.asm	/^int main()$/;"	l
int	asm/ch4_unmap1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch4_unmap1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch4_unmap1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch4_unmap1.asm	/^int mutex_create()$/;"	l
int	asm/ch4_unmap1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch4_unmap1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch4_unmap1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch4_unmap1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch4_unmap1.asm	/^int sched_yield()$/;"	l
int	asm/ch4_unmap1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch4_unmap1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch4_unmap1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch4_unmap1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch4_unmap1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch4_unmap1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch4_unmap1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch4_unmap1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch4_unmap1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch4_unmap1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch4_unmap1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch4_unmap1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch4_unmap1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch4_unmap1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch4_unmap1.asm	/^int wait(int *code)$/;"	l
int	asm/ch4_unmap1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch4_unmap1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5_exit0.asm	/^int __fflush()$/;"	l
int	asm/ch5_exit0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5_exit0.asm	/^int __write_buffer()$/;"	l
int	asm/ch5_exit0.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5_exit0.asm	/^int close(int fd)$/;"	l
int	asm/ch5_exit0.asm	/^int condvar_create()$/;"	l
int	asm/ch5_exit0.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5_exit0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5_exit0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5_exit0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5_exit0.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5_exit0.asm	/^int fork()$/;"	l
int	asm/ch5_exit0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5_exit0.asm	/^int getchar()$/;"	l
int	asm/ch5_exit0.asm	/^int getpid()$/;"	l
int	asm/ch5_exit0.asm	/^int getppid()$/;"	l
int	asm/ch5_exit0.asm	/^int gettid(void)$/;"	l
int	asm/ch5_exit0.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5_exit0.asm	/^int isspace(int c)$/;"	l
int	asm/ch5_exit0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5_exit0.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5_exit0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5_exit0.asm	/^int main()$/;"	l
int	asm/ch5_exit0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5_exit0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5_exit0.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5_exit0.asm	/^int mutex_create()$/;"	l
int	asm/ch5_exit0.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5_exit0.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5_exit0.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5_exit0.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5_exit0.asm	/^int sched_yield()$/;"	l
int	asm/ch5_exit0.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5_exit0.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5_exit0.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5_exit0.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5_exit0.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5_exit0.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5_exit0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5_exit0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5_exit0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5_exit0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5_exit0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5_exit0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5_exit0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5_exit0.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5_exit0.asm	/^int wait(int *code)$/;"	l
int	asm/ch5_exit0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5_exit0.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5_exit1.asm	/^int __fflush()$/;"	l
int	asm/ch5_exit1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5_exit1.asm	/^int __write_buffer()$/;"	l
int	asm/ch5_exit1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5_exit1.asm	/^int close(int fd)$/;"	l
int	asm/ch5_exit1.asm	/^int condvar_create()$/;"	l
int	asm/ch5_exit1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5_exit1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5_exit1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5_exit1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5_exit1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5_exit1.asm	/^int fork()$/;"	l
int	asm/ch5_exit1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5_exit1.asm	/^int getchar()$/;"	l
int	asm/ch5_exit1.asm	/^int getpid()$/;"	l
int	asm/ch5_exit1.asm	/^int getppid()$/;"	l
int	asm/ch5_exit1.asm	/^int gettid(void)$/;"	l
int	asm/ch5_exit1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5_exit1.asm	/^int isspace(int c)$/;"	l
int	asm/ch5_exit1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5_exit1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5_exit1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5_exit1.asm	/^int main()$/;"	l
int	asm/ch5_exit1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5_exit1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5_exit1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5_exit1.asm	/^int mutex_create()$/;"	l
int	asm/ch5_exit1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5_exit1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5_exit1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5_exit1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5_exit1.asm	/^int sched_yield()$/;"	l
int	asm/ch5_exit1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5_exit1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5_exit1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5_exit1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5_exit1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5_exit1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5_exit1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5_exit1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5_exit1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5_exit1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5_exit1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5_exit1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5_exit1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5_exit1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5_exit1.asm	/^int wait(int *code)$/;"	l
int	asm/ch5_exit1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5_exit1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5_mergetest.asm	/^int __fflush()$/;"	l
int	asm/ch5_mergetest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5_mergetest.asm	/^int __write_buffer()$/;"	l
int	asm/ch5_mergetest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5_mergetest.asm	/^int close(int fd)$/;"	l
int	asm/ch5_mergetest.asm	/^int condvar_create()$/;"	l
int	asm/ch5_mergetest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5_mergetest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5_mergetest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5_mergetest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5_mergetest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5_mergetest.asm	/^int fork()$/;"	l
int	asm/ch5_mergetest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5_mergetest.asm	/^int getchar()$/;"	l
int	asm/ch5_mergetest.asm	/^int getpid()$/;"	l
int	asm/ch5_mergetest.asm	/^int getppid()$/;"	l
int	asm/ch5_mergetest.asm	/^int gettid(void)$/;"	l
int	asm/ch5_mergetest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5_mergetest.asm	/^int isspace(int c)$/;"	l
int	asm/ch5_mergetest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5_mergetest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5_mergetest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5_mergetest.asm	/^int main()$/;"	l
int	asm/ch5_mergetest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5_mergetest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5_mergetest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5_mergetest.asm	/^int mutex_create()$/;"	l
int	asm/ch5_mergetest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5_mergetest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5_mergetest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5_mergetest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5_mergetest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	asm/ch5_mergetest.asm	/^int sched_yield()$/;"	l
int	asm/ch5_mergetest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5_mergetest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5_mergetest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5_mergetest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5_mergetest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5_mergetest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5_mergetest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5_mergetest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5_mergetest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5_mergetest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5_mergetest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5_mergetest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5_mergetest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	asm/ch5_mergetest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5_mergetest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5_mergetest.asm	/^int wait(int *code)$/;"	l
int	asm/ch5_mergetest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5_mergetest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5_ppid.asm	/^int __fflush()$/;"	l
int	asm/ch5_ppid.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5_ppid.asm	/^int __write_buffer()$/;"	l
int	asm/ch5_ppid.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5_ppid.asm	/^int close(int fd)$/;"	l
int	asm/ch5_ppid.asm	/^int condvar_create()$/;"	l
int	asm/ch5_ppid.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5_ppid.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5_ppid.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5_ppid.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5_ppid.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5_ppid.asm	/^int fork()$/;"	l
int	asm/ch5_ppid.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5_ppid.asm	/^int getchar()$/;"	l
int	asm/ch5_ppid.asm	/^int getpid()$/;"	l
int	asm/ch5_ppid.asm	/^int getppid()$/;"	l
int	asm/ch5_ppid.asm	/^int gettid(void)$/;"	l
int	asm/ch5_ppid.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5_ppid.asm	/^int isspace(int c)$/;"	l
int	asm/ch5_ppid.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5_ppid.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5_ppid.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5_ppid.asm	/^int main()$/;"	l
int	asm/ch5_ppid.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5_ppid.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5_ppid.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5_ppid.asm	/^int mutex_create()$/;"	l
int	asm/ch5_ppid.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5_ppid.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5_ppid.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5_ppid.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5_ppid.asm	/^int sched_yield()$/;"	l
int	asm/ch5_ppid.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5_ppid.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5_ppid.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5_ppid.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5_ppid.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5_ppid.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5_ppid.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5_ppid.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5_ppid.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5_ppid.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5_ppid.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5_ppid.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5_ppid.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5_ppid.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5_ppid.asm	/^int wait(int *code)$/;"	l
int	asm/ch5_ppid.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5_ppid.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5_setprio.asm	/^int __fflush()$/;"	l
int	asm/ch5_setprio.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5_setprio.asm	/^int __write_buffer()$/;"	l
int	asm/ch5_setprio.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5_setprio.asm	/^int close(int fd)$/;"	l
int	asm/ch5_setprio.asm	/^int condvar_create()$/;"	l
int	asm/ch5_setprio.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5_setprio.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5_setprio.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5_setprio.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5_setprio.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5_setprio.asm	/^int fork()$/;"	l
int	asm/ch5_setprio.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5_setprio.asm	/^int getchar()$/;"	l
int	asm/ch5_setprio.asm	/^int getpid()$/;"	l
int	asm/ch5_setprio.asm	/^int getppid()$/;"	l
int	asm/ch5_setprio.asm	/^int gettid(void)$/;"	l
int	asm/ch5_setprio.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5_setprio.asm	/^int isspace(int c)$/;"	l
int	asm/ch5_setprio.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5_setprio.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5_setprio.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5_setprio.asm	/^int main()$/;"	l
int	asm/ch5_setprio.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5_setprio.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5_setprio.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5_setprio.asm	/^int mutex_create()$/;"	l
int	asm/ch5_setprio.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5_setprio.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5_setprio.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5_setprio.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5_setprio.asm	/^int sched_yield()$/;"	l
int	asm/ch5_setprio.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5_setprio.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5_setprio.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5_setprio.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5_setprio.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5_setprio.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5_setprio.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5_setprio.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5_setprio.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5_setprio.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5_setprio.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5_setprio.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5_setprio.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5_setprio.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5_setprio.asm	/^int wait(int *code)$/;"	l
int	asm/ch5_setprio.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5_setprio.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5_spawn0.asm	/^int __fflush()$/;"	l
int	asm/ch5_spawn0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5_spawn0.asm	/^int __write_buffer()$/;"	l
int	asm/ch5_spawn0.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5_spawn0.asm	/^int close(int fd)$/;"	l
int	asm/ch5_spawn0.asm	/^int condvar_create()$/;"	l
int	asm/ch5_spawn0.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5_spawn0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5_spawn0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5_spawn0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5_spawn0.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5_spawn0.asm	/^int fork()$/;"	l
int	asm/ch5_spawn0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5_spawn0.asm	/^int getchar()$/;"	l
int	asm/ch5_spawn0.asm	/^int getpid()$/;"	l
int	asm/ch5_spawn0.asm	/^int getppid()$/;"	l
int	asm/ch5_spawn0.asm	/^int gettid(void)$/;"	l
int	asm/ch5_spawn0.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5_spawn0.asm	/^int isspace(int c)$/;"	l
int	asm/ch5_spawn0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5_spawn0.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5_spawn0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5_spawn0.asm	/^int main()$/;"	l
int	asm/ch5_spawn0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5_spawn0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5_spawn0.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5_spawn0.asm	/^int mutex_create()$/;"	l
int	asm/ch5_spawn0.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5_spawn0.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5_spawn0.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5_spawn0.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5_spawn0.asm	/^int sched_yield()$/;"	l
int	asm/ch5_spawn0.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5_spawn0.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5_spawn0.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5_spawn0.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5_spawn0.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5_spawn0.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5_spawn0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5_spawn0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5_spawn0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5_spawn0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5_spawn0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5_spawn0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5_spawn0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5_spawn0.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5_spawn0.asm	/^int wait(int *code)$/;"	l
int	asm/ch5_spawn0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5_spawn0.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5_spawn1.asm	/^int __fflush()$/;"	l
int	asm/ch5_spawn1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5_spawn1.asm	/^int __write_buffer()$/;"	l
int	asm/ch5_spawn1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5_spawn1.asm	/^int close(int fd)$/;"	l
int	asm/ch5_spawn1.asm	/^int condvar_create()$/;"	l
int	asm/ch5_spawn1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5_spawn1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5_spawn1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5_spawn1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5_spawn1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5_spawn1.asm	/^int fork()$/;"	l
int	asm/ch5_spawn1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5_spawn1.asm	/^int getchar()$/;"	l
int	asm/ch5_spawn1.asm	/^int getpid()$/;"	l
int	asm/ch5_spawn1.asm	/^int getppid()$/;"	l
int	asm/ch5_spawn1.asm	/^int gettid(void)$/;"	l
int	asm/ch5_spawn1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5_spawn1.asm	/^int isspace(int c)$/;"	l
int	asm/ch5_spawn1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5_spawn1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5_spawn1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5_spawn1.asm	/^int main()$/;"	l
int	asm/ch5_spawn1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5_spawn1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5_spawn1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5_spawn1.asm	/^int mutex_create()$/;"	l
int	asm/ch5_spawn1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5_spawn1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5_spawn1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5_spawn1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5_spawn1.asm	/^int sched_yield()$/;"	l
int	asm/ch5_spawn1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5_spawn1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5_spawn1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5_spawn1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5_spawn1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5_spawn1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5_spawn1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5_spawn1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5_spawn1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5_spawn1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5_spawn1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5_spawn1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5_spawn1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5_spawn1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5_spawn1.asm	/^int wait(int *code)$/;"	l
int	asm/ch5_spawn1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5_spawn1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5_usertest.asm	/^int __fflush()$/;"	l
int	asm/ch5_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5_usertest.asm	/^int __write_buffer()$/;"	l
int	asm/ch5_usertest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5_usertest.asm	/^int close(int fd)$/;"	l
int	asm/ch5_usertest.asm	/^int condvar_create()$/;"	l
int	asm/ch5_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5_usertest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5_usertest.asm	/^int fork()$/;"	l
int	asm/ch5_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5_usertest.asm	/^int getchar()$/;"	l
int	asm/ch5_usertest.asm	/^int getpid()$/;"	l
int	asm/ch5_usertest.asm	/^int getppid()$/;"	l
int	asm/ch5_usertest.asm	/^int gettid(void)$/;"	l
int	asm/ch5_usertest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5_usertest.asm	/^int isspace(int c)$/;"	l
int	asm/ch5_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5_usertest.asm	/^int main()$/;"	l
int	asm/ch5_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5_usertest.asm	/^int mutex_create()$/;"	l
int	asm/ch5_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5_usertest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	asm/ch5_usertest.asm	/^int sched_yield()$/;"	l
int	asm/ch5_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5_usertest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5_usertest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	asm/ch5_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5_usertest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5_usertest.asm	/^int wait(int *code)$/;"	l
int	asm/ch5_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5_usertest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int __fflush()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int __write_buffer()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int close(int fd)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int condvar_create()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int fork()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int getchar()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int getpid()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int getppid()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int gettid(void)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int isspace(int c)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int main()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int mutex_create()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int sched_yield()$/;"	l
int	asm/ch5b_exec_simple.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5b_exec_simple.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int wait(int *code)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5b_exec_simple.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5b_exit.asm	/^int __fflush()$/;"	l
int	asm/ch5b_exit.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5b_exit.asm	/^int __write_buffer()$/;"	l
int	asm/ch5b_exit.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5b_exit.asm	/^int close(int fd)$/;"	l
int	asm/ch5b_exit.asm	/^int condvar_create()$/;"	l
int	asm/ch5b_exit.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5b_exit.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5b_exit.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5b_exit.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5b_exit.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5b_exit.asm	/^int fork()$/;"	l
int	asm/ch5b_exit.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5b_exit.asm	/^int getchar()$/;"	l
int	asm/ch5b_exit.asm	/^int getpid()$/;"	l
int	asm/ch5b_exit.asm	/^int getppid()$/;"	l
int	asm/ch5b_exit.asm	/^int gettid(void)$/;"	l
int	asm/ch5b_exit.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5b_exit.asm	/^int isspace(int c)$/;"	l
int	asm/ch5b_exit.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5b_exit.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5b_exit.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5b_exit.asm	/^int main()$/;"	l
int	asm/ch5b_exit.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5b_exit.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5b_exit.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5b_exit.asm	/^int mutex_create()$/;"	l
int	asm/ch5b_exit.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5b_exit.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5b_exit.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5b_exit.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5b_exit.asm	/^int sched_yield()$/;"	l
int	asm/ch5b_exit.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5b_exit.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5b_exit.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5b_exit.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5b_exit.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5b_exit.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5b_exit.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5b_exit.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5b_exit.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5b_exit.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5b_exit.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5b_exit.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5b_exit.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5b_exit.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5b_exit.asm	/^int wait(int *code)$/;"	l
int	asm/ch5b_exit.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5b_exit.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5b_forktest0.asm	/^int __fflush()$/;"	l
int	asm/ch5b_forktest0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5b_forktest0.asm	/^int __write_buffer()$/;"	l
int	asm/ch5b_forktest0.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5b_forktest0.asm	/^int close(int fd)$/;"	l
int	asm/ch5b_forktest0.asm	/^int condvar_create()$/;"	l
int	asm/ch5b_forktest0.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5b_forktest0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5b_forktest0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5b_forktest0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5b_forktest0.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5b_forktest0.asm	/^int fork()$/;"	l
int	asm/ch5b_forktest0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5b_forktest0.asm	/^int getchar()$/;"	l
int	asm/ch5b_forktest0.asm	/^int getpid()$/;"	l
int	asm/ch5b_forktest0.asm	/^int getppid()$/;"	l
int	asm/ch5b_forktest0.asm	/^int gettid(void)$/;"	l
int	asm/ch5b_forktest0.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5b_forktest0.asm	/^int isspace(int c)$/;"	l
int	asm/ch5b_forktest0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5b_forktest0.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5b_forktest0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5b_forktest0.asm	/^int main()$/;"	l
int	asm/ch5b_forktest0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5b_forktest0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5b_forktest0.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5b_forktest0.asm	/^int mutex_create()$/;"	l
int	asm/ch5b_forktest0.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5b_forktest0.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5b_forktest0.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5b_forktest0.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5b_forktest0.asm	/^int sched_yield()$/;"	l
int	asm/ch5b_forktest0.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5b_forktest0.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5b_forktest0.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5b_forktest0.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5b_forktest0.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5b_forktest0.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5b_forktest0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5b_forktest0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5b_forktest0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5b_forktest0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5b_forktest0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5b_forktest0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5b_forktest0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5b_forktest0.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5b_forktest0.asm	/^int wait(int *code)$/;"	l
int	asm/ch5b_forktest0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5b_forktest0.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5b_forktest1.asm	/^int __fflush()$/;"	l
int	asm/ch5b_forktest1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5b_forktest1.asm	/^int __write_buffer()$/;"	l
int	asm/ch5b_forktest1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5b_forktest1.asm	/^int close(int fd)$/;"	l
int	asm/ch5b_forktest1.asm	/^int condvar_create()$/;"	l
int	asm/ch5b_forktest1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5b_forktest1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5b_forktest1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5b_forktest1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5b_forktest1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5b_forktest1.asm	/^int fork()$/;"	l
int	asm/ch5b_forktest1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5b_forktest1.asm	/^int getchar()$/;"	l
int	asm/ch5b_forktest1.asm	/^int getpid()$/;"	l
int	asm/ch5b_forktest1.asm	/^int getppid()$/;"	l
int	asm/ch5b_forktest1.asm	/^int gettid(void)$/;"	l
int	asm/ch5b_forktest1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5b_forktest1.asm	/^int isspace(int c)$/;"	l
int	asm/ch5b_forktest1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5b_forktest1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5b_forktest1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5b_forktest1.asm	/^int main()$/;"	l
int	asm/ch5b_forktest1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5b_forktest1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5b_forktest1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5b_forktest1.asm	/^int mutex_create()$/;"	l
int	asm/ch5b_forktest1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5b_forktest1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5b_forktest1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5b_forktest1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5b_forktest1.asm	/^int sched_yield()$/;"	l
int	asm/ch5b_forktest1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5b_forktest1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5b_forktest1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5b_forktest1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5b_forktest1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5b_forktest1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5b_forktest1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5b_forktest1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5b_forktest1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5b_forktest1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5b_forktest1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5b_forktest1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5b_forktest1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5b_forktest1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5b_forktest1.asm	/^int wait(int *code)$/;"	l
int	asm/ch5b_forktest1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5b_forktest1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5b_forktest2.asm	/^int __fflush()$/;"	l
int	asm/ch5b_forktest2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5b_forktest2.asm	/^int __write_buffer()$/;"	l
int	asm/ch5b_forktest2.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5b_forktest2.asm	/^int close(int fd)$/;"	l
int	asm/ch5b_forktest2.asm	/^int condvar_create()$/;"	l
int	asm/ch5b_forktest2.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5b_forktest2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5b_forktest2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5b_forktest2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5b_forktest2.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5b_forktest2.asm	/^int fork()$/;"	l
int	asm/ch5b_forktest2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5b_forktest2.asm	/^int getchar()$/;"	l
int	asm/ch5b_forktest2.asm	/^int getpid()$/;"	l
int	asm/ch5b_forktest2.asm	/^int getppid()$/;"	l
int	asm/ch5b_forktest2.asm	/^int gettid(void)$/;"	l
int	asm/ch5b_forktest2.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5b_forktest2.asm	/^int isspace(int c)$/;"	l
int	asm/ch5b_forktest2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5b_forktest2.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5b_forktest2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5b_forktest2.asm	/^int main()$/;"	l
int	asm/ch5b_forktest2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5b_forktest2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5b_forktest2.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5b_forktest2.asm	/^int mutex_create()$/;"	l
int	asm/ch5b_forktest2.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5b_forktest2.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5b_forktest2.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5b_forktest2.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5b_forktest2.asm	/^int sched_yield()$/;"	l
int	asm/ch5b_forktest2.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5b_forktest2.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5b_forktest2.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5b_forktest2.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5b_forktest2.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5b_forktest2.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5b_forktest2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5b_forktest2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5b_forktest2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5b_forktest2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5b_forktest2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5b_forktest2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5b_forktest2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5b_forktest2.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5b_forktest2.asm	/^int wait(int *code)$/;"	l
int	asm/ch5b_forktest2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5b_forktest2.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5b_getpid.asm	/^int __fflush()$/;"	l
int	asm/ch5b_getpid.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5b_getpid.asm	/^int __write_buffer()$/;"	l
int	asm/ch5b_getpid.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5b_getpid.asm	/^int close(int fd)$/;"	l
int	asm/ch5b_getpid.asm	/^int condvar_create()$/;"	l
int	asm/ch5b_getpid.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5b_getpid.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5b_getpid.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5b_getpid.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5b_getpid.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5b_getpid.asm	/^int fork()$/;"	l
int	asm/ch5b_getpid.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5b_getpid.asm	/^int getchar()$/;"	l
int	asm/ch5b_getpid.asm	/^int getpid()$/;"	l
int	asm/ch5b_getpid.asm	/^int getppid()$/;"	l
int	asm/ch5b_getpid.asm	/^int gettid(void)$/;"	l
int	asm/ch5b_getpid.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5b_getpid.asm	/^int isspace(int c)$/;"	l
int	asm/ch5b_getpid.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5b_getpid.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5b_getpid.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5b_getpid.asm	/^int main()$/;"	l
int	asm/ch5b_getpid.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5b_getpid.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5b_getpid.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5b_getpid.asm	/^int mutex_create()$/;"	l
int	asm/ch5b_getpid.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5b_getpid.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5b_getpid.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5b_getpid.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5b_getpid.asm	/^int sched_yield()$/;"	l
int	asm/ch5b_getpid.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5b_getpid.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5b_getpid.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5b_getpid.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5b_getpid.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5b_getpid.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5b_getpid.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5b_getpid.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5b_getpid.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5b_getpid.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5b_getpid.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5b_getpid.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5b_getpid.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5b_getpid.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5b_getpid.asm	/^int wait(int *code)$/;"	l
int	asm/ch5b_getpid.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5b_getpid.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5b_usertest.asm	/^int __fflush()$/;"	l
int	asm/ch5b_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5b_usertest.asm	/^int __write_buffer()$/;"	l
int	asm/ch5b_usertest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5b_usertest.asm	/^int close(int fd)$/;"	l
int	asm/ch5b_usertest.asm	/^int condvar_create()$/;"	l
int	asm/ch5b_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5b_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5b_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5b_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5b_usertest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5b_usertest.asm	/^int fork()$/;"	l
int	asm/ch5b_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5b_usertest.asm	/^int getchar()$/;"	l
int	asm/ch5b_usertest.asm	/^int getpid()$/;"	l
int	asm/ch5b_usertest.asm	/^int getppid()$/;"	l
int	asm/ch5b_usertest.asm	/^int gettid(void)$/;"	l
int	asm/ch5b_usertest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5b_usertest.asm	/^int isspace(int c)$/;"	l
int	asm/ch5b_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5b_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5b_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5b_usertest.asm	/^int main()$/;"	l
int	asm/ch5b_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5b_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5b_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5b_usertest.asm	/^int mutex_create()$/;"	l
int	asm/ch5b_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5b_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5b_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5b_usertest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5b_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	asm/ch5b_usertest.asm	/^int sched_yield()$/;"	l
int	asm/ch5b_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5b_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5b_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5b_usertest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5b_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5b_usertest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5b_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5b_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5b_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5b_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5b_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5b_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5b_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	asm/ch5b_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5b_usertest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5b_usertest.asm	/^int wait(int *code)$/;"	l
int	asm/ch5b_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5b_usertest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5t_stride0.asm	/^int __fflush()$/;"	l
int	asm/ch5t_stride0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5t_stride0.asm	/^int __write_buffer()$/;"	l
int	asm/ch5t_stride0.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5t_stride0.asm	/^int close(int fd)$/;"	l
int	asm/ch5t_stride0.asm	/^int condvar_create()$/;"	l
int	asm/ch5t_stride0.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5t_stride0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5t_stride0.asm	/^int count_during(int prio)$/;"	l
int	asm/ch5t_stride0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5t_stride0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5t_stride0.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5t_stride0.asm	/^int fork()$/;"	l
int	asm/ch5t_stride0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5t_stride0.asm	/^int getchar()$/;"	l
int	asm/ch5t_stride0.asm	/^int getpid()$/;"	l
int	asm/ch5t_stride0.asm	/^int getppid()$/;"	l
int	asm/ch5t_stride0.asm	/^int gettid(void)$/;"	l
int	asm/ch5t_stride0.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5t_stride0.asm	/^int isspace(int c)$/;"	l
int	asm/ch5t_stride0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5t_stride0.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5t_stride0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5t_stride0.asm	/^int main()$/;"	l
int	asm/ch5t_stride0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5t_stride0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5t_stride0.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5t_stride0.asm	/^int mutex_create()$/;"	l
int	asm/ch5t_stride0.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5t_stride0.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5t_stride0.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5t_stride0.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5t_stride0.asm	/^int sched_yield()$/;"	l
int	asm/ch5t_stride0.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5t_stride0.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5t_stride0.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5t_stride0.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5t_stride0.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5t_stride0.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5t_stride0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5t_stride0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5t_stride0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5t_stride0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5t_stride0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5t_stride0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5t_stride0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5t_stride0.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5t_stride0.asm	/^int wait(int *code)$/;"	l
int	asm/ch5t_stride0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5t_stride0.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5t_stride1.asm	/^int __fflush()$/;"	l
int	asm/ch5t_stride1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5t_stride1.asm	/^int __write_buffer()$/;"	l
int	asm/ch5t_stride1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5t_stride1.asm	/^int close(int fd)$/;"	l
int	asm/ch5t_stride1.asm	/^int condvar_create()$/;"	l
int	asm/ch5t_stride1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5t_stride1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5t_stride1.asm	/^int count_during(int prio)$/;"	l
int	asm/ch5t_stride1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5t_stride1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5t_stride1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5t_stride1.asm	/^int fork()$/;"	l
int	asm/ch5t_stride1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5t_stride1.asm	/^int getchar()$/;"	l
int	asm/ch5t_stride1.asm	/^int getpid()$/;"	l
int	asm/ch5t_stride1.asm	/^int getppid()$/;"	l
int	asm/ch5t_stride1.asm	/^int gettid(void)$/;"	l
int	asm/ch5t_stride1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5t_stride1.asm	/^int isspace(int c)$/;"	l
int	asm/ch5t_stride1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5t_stride1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5t_stride1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5t_stride1.asm	/^int main()$/;"	l
int	asm/ch5t_stride1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5t_stride1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5t_stride1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5t_stride1.asm	/^int mutex_create()$/;"	l
int	asm/ch5t_stride1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5t_stride1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5t_stride1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5t_stride1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5t_stride1.asm	/^int sched_yield()$/;"	l
int	asm/ch5t_stride1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5t_stride1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5t_stride1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5t_stride1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5t_stride1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5t_stride1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5t_stride1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5t_stride1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5t_stride1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5t_stride1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5t_stride1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5t_stride1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5t_stride1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5t_stride1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5t_stride1.asm	/^int wait(int *code)$/;"	l
int	asm/ch5t_stride1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5t_stride1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5t_stride2.asm	/^int __fflush()$/;"	l
int	asm/ch5t_stride2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5t_stride2.asm	/^int __write_buffer()$/;"	l
int	asm/ch5t_stride2.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5t_stride2.asm	/^int close(int fd)$/;"	l
int	asm/ch5t_stride2.asm	/^int condvar_create()$/;"	l
int	asm/ch5t_stride2.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5t_stride2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5t_stride2.asm	/^int count_during(int prio)$/;"	l
int	asm/ch5t_stride2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5t_stride2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5t_stride2.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5t_stride2.asm	/^int fork()$/;"	l
int	asm/ch5t_stride2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5t_stride2.asm	/^int getchar()$/;"	l
int	asm/ch5t_stride2.asm	/^int getpid()$/;"	l
int	asm/ch5t_stride2.asm	/^int getppid()$/;"	l
int	asm/ch5t_stride2.asm	/^int gettid(void)$/;"	l
int	asm/ch5t_stride2.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5t_stride2.asm	/^int isspace(int c)$/;"	l
int	asm/ch5t_stride2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5t_stride2.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5t_stride2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5t_stride2.asm	/^int main()$/;"	l
int	asm/ch5t_stride2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5t_stride2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5t_stride2.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5t_stride2.asm	/^int mutex_create()$/;"	l
int	asm/ch5t_stride2.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5t_stride2.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5t_stride2.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5t_stride2.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5t_stride2.asm	/^int sched_yield()$/;"	l
int	asm/ch5t_stride2.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5t_stride2.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5t_stride2.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5t_stride2.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5t_stride2.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5t_stride2.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5t_stride2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5t_stride2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5t_stride2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5t_stride2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5t_stride2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5t_stride2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5t_stride2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5t_stride2.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5t_stride2.asm	/^int wait(int *code)$/;"	l
int	asm/ch5t_stride2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5t_stride2.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5t_stride3.asm	/^int __fflush()$/;"	l
int	asm/ch5t_stride3.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5t_stride3.asm	/^int __write_buffer()$/;"	l
int	asm/ch5t_stride3.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5t_stride3.asm	/^int close(int fd)$/;"	l
int	asm/ch5t_stride3.asm	/^int condvar_create()$/;"	l
int	asm/ch5t_stride3.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5t_stride3.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5t_stride3.asm	/^int count_during(int prio)$/;"	l
int	asm/ch5t_stride3.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5t_stride3.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5t_stride3.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5t_stride3.asm	/^int fork()$/;"	l
int	asm/ch5t_stride3.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5t_stride3.asm	/^int getchar()$/;"	l
int	asm/ch5t_stride3.asm	/^int getpid()$/;"	l
int	asm/ch5t_stride3.asm	/^int getppid()$/;"	l
int	asm/ch5t_stride3.asm	/^int gettid(void)$/;"	l
int	asm/ch5t_stride3.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5t_stride3.asm	/^int isspace(int c)$/;"	l
int	asm/ch5t_stride3.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5t_stride3.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5t_stride3.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5t_stride3.asm	/^int main()$/;"	l
int	asm/ch5t_stride3.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5t_stride3.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5t_stride3.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5t_stride3.asm	/^int mutex_create()$/;"	l
int	asm/ch5t_stride3.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5t_stride3.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5t_stride3.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5t_stride3.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5t_stride3.asm	/^int sched_yield()$/;"	l
int	asm/ch5t_stride3.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5t_stride3.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5t_stride3.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5t_stride3.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5t_stride3.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5t_stride3.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5t_stride3.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5t_stride3.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5t_stride3.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5t_stride3.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5t_stride3.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5t_stride3.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5t_stride3.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5t_stride3.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5t_stride3.asm	/^int wait(int *code)$/;"	l
int	asm/ch5t_stride3.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5t_stride3.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5t_stride4.asm	/^int __fflush()$/;"	l
int	asm/ch5t_stride4.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5t_stride4.asm	/^int __write_buffer()$/;"	l
int	asm/ch5t_stride4.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5t_stride4.asm	/^int close(int fd)$/;"	l
int	asm/ch5t_stride4.asm	/^int condvar_create()$/;"	l
int	asm/ch5t_stride4.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5t_stride4.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5t_stride4.asm	/^int count_during(int prio)$/;"	l
int	asm/ch5t_stride4.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5t_stride4.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5t_stride4.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5t_stride4.asm	/^int fork()$/;"	l
int	asm/ch5t_stride4.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5t_stride4.asm	/^int getchar()$/;"	l
int	asm/ch5t_stride4.asm	/^int getpid()$/;"	l
int	asm/ch5t_stride4.asm	/^int getppid()$/;"	l
int	asm/ch5t_stride4.asm	/^int gettid(void)$/;"	l
int	asm/ch5t_stride4.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5t_stride4.asm	/^int isspace(int c)$/;"	l
int	asm/ch5t_stride4.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5t_stride4.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5t_stride4.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5t_stride4.asm	/^int main()$/;"	l
int	asm/ch5t_stride4.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5t_stride4.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5t_stride4.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5t_stride4.asm	/^int mutex_create()$/;"	l
int	asm/ch5t_stride4.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5t_stride4.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5t_stride4.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5t_stride4.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5t_stride4.asm	/^int sched_yield()$/;"	l
int	asm/ch5t_stride4.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5t_stride4.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5t_stride4.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5t_stride4.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5t_stride4.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5t_stride4.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5t_stride4.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5t_stride4.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5t_stride4.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5t_stride4.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5t_stride4.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5t_stride4.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5t_stride4.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5t_stride4.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5t_stride4.asm	/^int wait(int *code)$/;"	l
int	asm/ch5t_stride4.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5t_stride4.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5t_stride5.asm	/^int __fflush()$/;"	l
int	asm/ch5t_stride5.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5t_stride5.asm	/^int __write_buffer()$/;"	l
int	asm/ch5t_stride5.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5t_stride5.asm	/^int close(int fd)$/;"	l
int	asm/ch5t_stride5.asm	/^int condvar_create()$/;"	l
int	asm/ch5t_stride5.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5t_stride5.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5t_stride5.asm	/^int count_during(int prio)$/;"	l
int	asm/ch5t_stride5.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5t_stride5.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5t_stride5.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5t_stride5.asm	/^int fork()$/;"	l
int	asm/ch5t_stride5.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5t_stride5.asm	/^int getchar()$/;"	l
int	asm/ch5t_stride5.asm	/^int getpid()$/;"	l
int	asm/ch5t_stride5.asm	/^int getppid()$/;"	l
int	asm/ch5t_stride5.asm	/^int gettid(void)$/;"	l
int	asm/ch5t_stride5.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5t_stride5.asm	/^int isspace(int c)$/;"	l
int	asm/ch5t_stride5.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5t_stride5.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5t_stride5.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5t_stride5.asm	/^int main()$/;"	l
int	asm/ch5t_stride5.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5t_stride5.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5t_stride5.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5t_stride5.asm	/^int mutex_create()$/;"	l
int	asm/ch5t_stride5.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5t_stride5.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5t_stride5.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5t_stride5.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5t_stride5.asm	/^int sched_yield()$/;"	l
int	asm/ch5t_stride5.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5t_stride5.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5t_stride5.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5t_stride5.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5t_stride5.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5t_stride5.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5t_stride5.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5t_stride5.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5t_stride5.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5t_stride5.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5t_stride5.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5t_stride5.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5t_stride5.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5t_stride5.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5t_stride5.asm	/^int wait(int *code)$/;"	l
int	asm/ch5t_stride5.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5t_stride5.asm	/^int waittid(int tid)$/;"	l
int	asm/ch5t_usertest.asm	/^int __fflush()$/;"	l
int	asm/ch5t_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch5t_usertest.asm	/^int __write_buffer()$/;"	l
int	asm/ch5t_usertest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch5t_usertest.asm	/^int close(int fd)$/;"	l
int	asm/ch5t_usertest.asm	/^int condvar_create()$/;"	l
int	asm/ch5t_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch5t_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch5t_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch5t_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch5t_usertest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch5t_usertest.asm	/^int fork()$/;"	l
int	asm/ch5t_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch5t_usertest.asm	/^int getchar()$/;"	l
int	asm/ch5t_usertest.asm	/^int getpid()$/;"	l
int	asm/ch5t_usertest.asm	/^int getppid()$/;"	l
int	asm/ch5t_usertest.asm	/^int gettid(void)$/;"	l
int	asm/ch5t_usertest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch5t_usertest.asm	/^int isspace(int c)$/;"	l
int	asm/ch5t_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch5t_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch5t_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch5t_usertest.asm	/^int main()$/;"	l
int	asm/ch5t_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch5t_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch5t_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch5t_usertest.asm	/^int mutex_create()$/;"	l
int	asm/ch5t_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch5t_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch5t_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch5t_usertest.asm	/^int pid[] = {0, 0, 0, 0, 0, 0};$/;"	l
int	asm/ch5t_usertest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch5t_usertest.asm	/^int sched_yield()$/;"	l
int	asm/ch5t_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch5t_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch5t_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch5t_usertest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch5t_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch5t_usertest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch5t_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch5t_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch5t_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch5t_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch5t_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch5t_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch5t_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch5t_usertest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch5t_usertest.asm	/^int wait(int *code)$/;"	l
int	asm/ch5t_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch5t_usertest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6_file0.asm	/^int __fflush()$/;"	l
int	asm/ch6_file0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6_file0.asm	/^int __write_buffer()$/;"	l
int	asm/ch6_file0.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6_file0.asm	/^int close(int fd)$/;"	l
int	asm/ch6_file0.asm	/^int condvar_create()$/;"	l
int	asm/ch6_file0.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6_file0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6_file0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6_file0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6_file0.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6_file0.asm	/^int fork()$/;"	l
int	asm/ch6_file0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6_file0.asm	/^int getchar()$/;"	l
int	asm/ch6_file0.asm	/^int getpid()$/;"	l
int	asm/ch6_file0.asm	/^int getppid()$/;"	l
int	asm/ch6_file0.asm	/^int gettid(void)$/;"	l
int	asm/ch6_file0.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6_file0.asm	/^int isspace(int c)$/;"	l
int	asm/ch6_file0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6_file0.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6_file0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6_file0.asm	/^int main()$/;"	l
int	asm/ch6_file0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6_file0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6_file0.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6_file0.asm	/^int mutex_create()$/;"	l
int	asm/ch6_file0.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6_file0.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6_file0.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6_file0.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6_file0.asm	/^int sched_yield()$/;"	l
int	asm/ch6_file0.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6_file0.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6_file0.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6_file0.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6_file0.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6_file0.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6_file0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6_file0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6_file0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6_file0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6_file0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6_file0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6_file0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6_file0.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6_file0.asm	/^int wait(int *code)$/;"	l
int	asm/ch6_file0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6_file0.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6_file1.asm	/^int __fflush()$/;"	l
int	asm/ch6_file1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6_file1.asm	/^int __write_buffer()$/;"	l
int	asm/ch6_file1.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6_file1.asm	/^int close(int fd)$/;"	l
int	asm/ch6_file1.asm	/^int condvar_create()$/;"	l
int	asm/ch6_file1.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6_file1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6_file1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6_file1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6_file1.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6_file1.asm	/^int fork()$/;"	l
int	asm/ch6_file1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6_file1.asm	/^int getchar()$/;"	l
int	asm/ch6_file1.asm	/^int getpid()$/;"	l
int	asm/ch6_file1.asm	/^int getppid()$/;"	l
int	asm/ch6_file1.asm	/^int gettid(void)$/;"	l
int	asm/ch6_file1.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6_file1.asm	/^int isspace(int c)$/;"	l
int	asm/ch6_file1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6_file1.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6_file1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6_file1.asm	/^int main()$/;"	l
int	asm/ch6_file1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6_file1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6_file1.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6_file1.asm	/^int mutex_create()$/;"	l
int	asm/ch6_file1.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6_file1.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6_file1.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6_file1.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6_file1.asm	/^int sched_yield()$/;"	l
int	asm/ch6_file1.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6_file1.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6_file1.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6_file1.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6_file1.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6_file1.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6_file1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6_file1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6_file1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6_file1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6_file1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6_file1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6_file1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6_file1.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6_file1.asm	/^int wait(int *code)$/;"	l
int	asm/ch6_file1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6_file1.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6_file2.asm	/^int __fflush()$/;"	l
int	asm/ch6_file2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6_file2.asm	/^int __write_buffer()$/;"	l
int	asm/ch6_file2.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6_file2.asm	/^int close(int fd)$/;"	l
int	asm/ch6_file2.asm	/^int condvar_create()$/;"	l
int	asm/ch6_file2.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6_file2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6_file2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6_file2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6_file2.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6_file2.asm	/^int fork()$/;"	l
int	asm/ch6_file2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6_file2.asm	/^int getchar()$/;"	l
int	asm/ch6_file2.asm	/^int getpid()$/;"	l
int	asm/ch6_file2.asm	/^int getppid()$/;"	l
int	asm/ch6_file2.asm	/^int gettid(void)$/;"	l
int	asm/ch6_file2.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6_file2.asm	/^int isspace(int c)$/;"	l
int	asm/ch6_file2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6_file2.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6_file2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6_file2.asm	/^int main()$/;"	l
int	asm/ch6_file2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6_file2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6_file2.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6_file2.asm	/^int mutex_create()$/;"	l
int	asm/ch6_file2.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6_file2.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6_file2.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6_file2.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6_file2.asm	/^int sched_yield()$/;"	l
int	asm/ch6_file2.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6_file2.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6_file2.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6_file2.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6_file2.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6_file2.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6_file2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6_file2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6_file2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6_file2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6_file2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6_file2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6_file2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6_file2.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6_file2.asm	/^int wait(int *code)$/;"	l
int	asm/ch6_file2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6_file2.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6_file3.asm	/^int __fflush()$/;"	l
int	asm/ch6_file3.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6_file3.asm	/^int __write_buffer()$/;"	l
int	asm/ch6_file3.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6_file3.asm	/^int close(int fd)$/;"	l
int	asm/ch6_file3.asm	/^int condvar_create()$/;"	l
int	asm/ch6_file3.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6_file3.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6_file3.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6_file3.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6_file3.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6_file3.asm	/^int fork()$/;"	l
int	asm/ch6_file3.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6_file3.asm	/^int getchar()$/;"	l
int	asm/ch6_file3.asm	/^int getpid()$/;"	l
int	asm/ch6_file3.asm	/^int getppid()$/;"	l
int	asm/ch6_file3.asm	/^int gettid(void)$/;"	l
int	asm/ch6_file3.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6_file3.asm	/^int isspace(int c)$/;"	l
int	asm/ch6_file3.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6_file3.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6_file3.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6_file3.asm	/^int main()$/;"	l
int	asm/ch6_file3.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6_file3.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6_file3.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6_file3.asm	/^int mutex_create()$/;"	l
int	asm/ch6_file3.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6_file3.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6_file3.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6_file3.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6_file3.asm	/^int sched_yield()$/;"	l
int	asm/ch6_file3.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6_file3.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6_file3.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6_file3.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6_file3.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6_file3.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6_file3.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6_file3.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6_file3.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6_file3.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6_file3.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6_file3.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6_file3.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6_file3.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6_file3.asm	/^int wait(int *code)$/;"	l
int	asm/ch6_file3.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6_file3.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6_usertest.asm	/^int __fflush()$/;"	l
int	asm/ch6_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6_usertest.asm	/^int __write_buffer()$/;"	l
int	asm/ch6_usertest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6_usertest.asm	/^int close(int fd)$/;"	l
int	asm/ch6_usertest.asm	/^int condvar_create()$/;"	l
int	asm/ch6_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6_usertest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6_usertest.asm	/^int fork()$/;"	l
int	asm/ch6_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6_usertest.asm	/^int getchar()$/;"	l
int	asm/ch6_usertest.asm	/^int getpid()$/;"	l
int	asm/ch6_usertest.asm	/^int getppid()$/;"	l
int	asm/ch6_usertest.asm	/^int gettid(void)$/;"	l
int	asm/ch6_usertest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6_usertest.asm	/^int isspace(int c)$/;"	l
int	asm/ch6_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6_usertest.asm	/^int main()$/;"	l
int	asm/ch6_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6_usertest.asm	/^int mutex_create()$/;"	l
int	asm/ch6_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6_usertest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	asm/ch6_usertest.asm	/^int sched_yield()$/;"	l
int	asm/ch6_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6_usertest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6_usertest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	asm/ch6_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6_usertest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6_usertest.asm	/^int wait(int *code)$/;"	l
int	asm/ch6_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6_usertest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6b_args.asm	/^int __fflush()$/;"	l
int	asm/ch6b_args.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6b_args.asm	/^int __write_buffer()$/;"	l
int	asm/ch6b_args.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6b_args.asm	/^int close(int fd)$/;"	l
int	asm/ch6b_args.asm	/^int condvar_create()$/;"	l
int	asm/ch6b_args.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6b_args.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6b_args.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6b_args.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6b_args.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6b_args.asm	/^int fork()$/;"	l
int	asm/ch6b_args.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6b_args.asm	/^int getchar()$/;"	l
int	asm/ch6b_args.asm	/^int getpid()$/;"	l
int	asm/ch6b_args.asm	/^int getppid()$/;"	l
int	asm/ch6b_args.asm	/^int gettid(void)$/;"	l
int	asm/ch6b_args.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6b_args.asm	/^int isspace(int c)$/;"	l
int	asm/ch6b_args.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6b_args.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6b_args.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6b_args.asm	/^int main(int argc, char **argv)$/;"	l
int	asm/ch6b_args.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6b_args.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6b_args.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6b_args.asm	/^int mutex_create()$/;"	l
int	asm/ch6b_args.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6b_args.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6b_args.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6b_args.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6b_args.asm	/^int sched_yield()$/;"	l
int	asm/ch6b_args.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6b_args.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6b_args.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6b_args.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6b_args.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6b_args.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6b_args.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6b_args.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6b_args.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6b_args.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6b_args.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6b_args.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6b_args.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6b_args.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6b_args.asm	/^int wait(int *code)$/;"	l
int	asm/ch6b_args.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6b_args.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6b_assert.asm	/^int __fflush()$/;"	l
int	asm/ch6b_assert.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6b_assert.asm	/^int __write_buffer()$/;"	l
int	asm/ch6b_assert.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6b_assert.asm	/^int close(int fd)$/;"	l
int	asm/ch6b_assert.asm	/^int condvar_create()$/;"	l
int	asm/ch6b_assert.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6b_assert.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6b_assert.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6b_assert.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6b_assert.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6b_assert.asm	/^int fork()$/;"	l
int	asm/ch6b_assert.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6b_assert.asm	/^int getchar()$/;"	l
int	asm/ch6b_assert.asm	/^int getpid()$/;"	l
int	asm/ch6b_assert.asm	/^int getppid()$/;"	l
int	asm/ch6b_assert.asm	/^int gettid(void)$/;"	l
int	asm/ch6b_assert.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6b_assert.asm	/^int isspace(int c)$/;"	l
int	asm/ch6b_assert.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6b_assert.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6b_assert.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6b_assert.asm	/^int main()$/;"	l
int	asm/ch6b_assert.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6b_assert.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6b_assert.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6b_assert.asm	/^int mutex_create()$/;"	l
int	asm/ch6b_assert.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6b_assert.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6b_assert.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6b_assert.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6b_assert.asm	/^int sched_yield()$/;"	l
int	asm/ch6b_assert.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6b_assert.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6b_assert.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6b_assert.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6b_assert.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6b_assert.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6b_assert.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6b_assert.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6b_assert.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6b_assert.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6b_assert.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6b_assert.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6b_assert.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6b_assert.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6b_assert.asm	/^int wait(int *code)$/;"	l
int	asm/ch6b_assert.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6b_assert.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6b_cat.asm	/^int __fflush()$/;"	l
int	asm/ch6b_cat.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6b_cat.asm	/^int __write_buffer()$/;"	l
int	asm/ch6b_cat.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6b_cat.asm	/^int close(int fd)$/;"	l
int	asm/ch6b_cat.asm	/^int condvar_create()$/;"	l
int	asm/ch6b_cat.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6b_cat.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6b_cat.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6b_cat.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6b_cat.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6b_cat.asm	/^int fork()$/;"	l
int	asm/ch6b_cat.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6b_cat.asm	/^int getchar()$/;"	l
int	asm/ch6b_cat.asm	/^int getpid()$/;"	l
int	asm/ch6b_cat.asm	/^int getppid()$/;"	l
int	asm/ch6b_cat.asm	/^int gettid(void)$/;"	l
int	asm/ch6b_cat.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6b_cat.asm	/^int isspace(int c)$/;"	l
int	asm/ch6b_cat.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6b_cat.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6b_cat.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6b_cat.asm	/^int main()$/;"	l
int	asm/ch6b_cat.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6b_cat.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6b_cat.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6b_cat.asm	/^int mutex_create()$/;"	l
int	asm/ch6b_cat.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6b_cat.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6b_cat.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6b_cat.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6b_cat.asm	/^int sched_yield()$/;"	l
int	asm/ch6b_cat.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6b_cat.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6b_cat.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6b_cat.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6b_cat.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6b_cat.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6b_cat.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6b_cat.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6b_cat.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6b_cat.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6b_cat.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6b_cat.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6b_cat.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6b_cat.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6b_cat.asm	/^int wait(int *code)$/;"	l
int	asm/ch6b_cat.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6b_cat.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6b_exec.asm	/^int __fflush()$/;"	l
int	asm/ch6b_exec.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6b_exec.asm	/^int __write_buffer()$/;"	l
int	asm/ch6b_exec.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6b_exec.asm	/^int close(int fd)$/;"	l
int	asm/ch6b_exec.asm	/^int condvar_create()$/;"	l
int	asm/ch6b_exec.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6b_exec.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6b_exec.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6b_exec.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6b_exec.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6b_exec.asm	/^int fork()$/;"	l
int	asm/ch6b_exec.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6b_exec.asm	/^int getchar()$/;"	l
int	asm/ch6b_exec.asm	/^int getpid()$/;"	l
int	asm/ch6b_exec.asm	/^int getppid()$/;"	l
int	asm/ch6b_exec.asm	/^int gettid(void)$/;"	l
int	asm/ch6b_exec.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6b_exec.asm	/^int isspace(int c)$/;"	l
int	asm/ch6b_exec.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6b_exec.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6b_exec.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6b_exec.asm	/^int main()$/;"	l
int	asm/ch6b_exec.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6b_exec.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6b_exec.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6b_exec.asm	/^int mutex_create()$/;"	l
int	asm/ch6b_exec.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6b_exec.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6b_exec.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6b_exec.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6b_exec.asm	/^int sched_yield()$/;"	l
int	asm/ch6b_exec.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6b_exec.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6b_exec.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6b_exec.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6b_exec.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6b_exec.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6b_exec.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6b_exec.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6b_exec.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6b_exec.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6b_exec.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6b_exec.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6b_exec.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6b_exec.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6b_exec.asm	/^int wait(int *code)$/;"	l
int	asm/ch6b_exec.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6b_exec.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6b_filetest.asm	/^int __fflush()$/;"	l
int	asm/ch6b_filetest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6b_filetest.asm	/^int __write_buffer()$/;"	l
int	asm/ch6b_filetest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6b_filetest.asm	/^int close(int fd)$/;"	l
int	asm/ch6b_filetest.asm	/^int condvar_create()$/;"	l
int	asm/ch6b_filetest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6b_filetest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6b_filetest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6b_filetest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6b_filetest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6b_filetest.asm	/^int fork()$/;"	l
int	asm/ch6b_filetest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6b_filetest.asm	/^int getchar()$/;"	l
int	asm/ch6b_filetest.asm	/^int getpid()$/;"	l
int	asm/ch6b_filetest.asm	/^int getppid()$/;"	l
int	asm/ch6b_filetest.asm	/^int gettid(void)$/;"	l
int	asm/ch6b_filetest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6b_filetest.asm	/^int isspace(int c)$/;"	l
int	asm/ch6b_filetest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6b_filetest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6b_filetest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6b_filetest.asm	/^int main()$/;"	l
int	asm/ch6b_filetest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6b_filetest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6b_filetest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6b_filetest.asm	/^int mutex_create()$/;"	l
int	asm/ch6b_filetest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6b_filetest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6b_filetest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6b_filetest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6b_filetest.asm	/^int sched_yield()$/;"	l
int	asm/ch6b_filetest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6b_filetest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6b_filetest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6b_filetest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6b_filetest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6b_filetest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6b_filetest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6b_filetest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6b_filetest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6b_filetest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6b_filetest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6b_filetest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6b_filetest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6b_filetest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6b_filetest.asm	/^int wait(int *code)$/;"	l
int	asm/ch6b_filetest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6b_filetest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int __fflush()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int __write_buffer()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int close(int fd)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int condvar_create()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int fork()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int getchar()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int getpid()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int getppid()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int gettid(void)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int isspace(int c)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int main()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int mutex_create()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int sched_yield()$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int wait(int *code)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6b_filetest_simple.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6b_panic.asm	/^int __fflush()$/;"	l
int	asm/ch6b_panic.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6b_panic.asm	/^int __write_buffer()$/;"	l
int	asm/ch6b_panic.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6b_panic.asm	/^int close(int fd)$/;"	l
int	asm/ch6b_panic.asm	/^int condvar_create()$/;"	l
int	asm/ch6b_panic.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6b_panic.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6b_panic.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6b_panic.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6b_panic.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6b_panic.asm	/^int fork()$/;"	l
int	asm/ch6b_panic.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6b_panic.asm	/^int getchar()$/;"	l
int	asm/ch6b_panic.asm	/^int getpid()$/;"	l
int	asm/ch6b_panic.asm	/^int getppid()$/;"	l
int	asm/ch6b_panic.asm	/^int gettid(void)$/;"	l
int	asm/ch6b_panic.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6b_panic.asm	/^int isspace(int c)$/;"	l
int	asm/ch6b_panic.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6b_panic.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6b_panic.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6b_panic.asm	/^int main()$/;"	l
int	asm/ch6b_panic.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6b_panic.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6b_panic.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6b_panic.asm	/^int mutex_create()$/;"	l
int	asm/ch6b_panic.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6b_panic.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6b_panic.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6b_panic.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6b_panic.asm	/^int sched_yield()$/;"	l
int	asm/ch6b_panic.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6b_panic.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6b_panic.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6b_panic.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6b_panic.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6b_panic.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6b_panic.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6b_panic.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6b_panic.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6b_panic.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6b_panic.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6b_panic.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6b_panic.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6b_panic.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6b_panic.asm	/^int wait(int *code)$/;"	l
int	asm/ch6b_panic.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6b_panic.asm	/^int waittid(int tid)$/;"	l
int	asm/ch6b_usertest.asm	/^int __fflush()$/;"	l
int	asm/ch6b_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch6b_usertest.asm	/^int __write_buffer()$/;"	l
int	asm/ch6b_usertest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch6b_usertest.asm	/^int close(int fd)$/;"	l
int	asm/ch6b_usertest.asm	/^int condvar_create()$/;"	l
int	asm/ch6b_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch6b_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch6b_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch6b_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch6b_usertest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch6b_usertest.asm	/^int fork()$/;"	l
int	asm/ch6b_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch6b_usertest.asm	/^int getchar()$/;"	l
int	asm/ch6b_usertest.asm	/^int getpid()$/;"	l
int	asm/ch6b_usertest.asm	/^int getppid()$/;"	l
int	asm/ch6b_usertest.asm	/^int gettid(void)$/;"	l
int	asm/ch6b_usertest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch6b_usertest.asm	/^int isspace(int c)$/;"	l
int	asm/ch6b_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch6b_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch6b_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch6b_usertest.asm	/^int main()$/;"	l
int	asm/ch6b_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch6b_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch6b_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch6b_usertest.asm	/^int mutex_create()$/;"	l
int	asm/ch6b_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch6b_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch6b_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch6b_usertest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch6b_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	asm/ch6b_usertest.asm	/^int sched_yield()$/;"	l
int	asm/ch6b_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch6b_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch6b_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch6b_usertest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch6b_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch6b_usertest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch6b_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch6b_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch6b_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch6b_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch6b_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch6b_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch6b_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	asm/ch6b_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch6b_usertest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch6b_usertest.asm	/^int wait(int *code)$/;"	l
int	asm/ch6b_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch6b_usertest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch7b_pipetest.asm	/^int __fflush()$/;"	l
int	asm/ch7b_pipetest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch7b_pipetest.asm	/^int __write_buffer()$/;"	l
int	asm/ch7b_pipetest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch7b_pipetest.asm	/^int close(int fd)$/;"	l
int	asm/ch7b_pipetest.asm	/^int condvar_create()$/;"	l
int	asm/ch7b_pipetest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch7b_pipetest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch7b_pipetest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch7b_pipetest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch7b_pipetest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch7b_pipetest.asm	/^int fork()$/;"	l
int	asm/ch7b_pipetest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch7b_pipetest.asm	/^int getchar()$/;"	l
int	asm/ch7b_pipetest.asm	/^int getpid()$/;"	l
int	asm/ch7b_pipetest.asm	/^int getppid()$/;"	l
int	asm/ch7b_pipetest.asm	/^int gettid(void)$/;"	l
int	asm/ch7b_pipetest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch7b_pipetest.asm	/^int isspace(int c)$/;"	l
int	asm/ch7b_pipetest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch7b_pipetest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch7b_pipetest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch7b_pipetest.asm	/^int main()$/;"	l
int	asm/ch7b_pipetest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch7b_pipetest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch7b_pipetest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch7b_pipetest.asm	/^int mutex_create()$/;"	l
int	asm/ch7b_pipetest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch7b_pipetest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch7b_pipetest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch7b_pipetest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch7b_pipetest.asm	/^int sched_yield()$/;"	l
int	asm/ch7b_pipetest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch7b_pipetest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch7b_pipetest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch7b_pipetest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch7b_pipetest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch7b_pipetest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch7b_pipetest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch7b_pipetest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch7b_pipetest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch7b_pipetest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch7b_pipetest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch7b_pipetest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch7b_pipetest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch7b_pipetest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch7b_pipetest.asm	/^int wait(int *code)$/;"	l
int	asm/ch7b_pipetest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch7b_pipetest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch7b_usertest.asm	/^int __fflush()$/;"	l
int	asm/ch7b_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch7b_usertest.asm	/^int __write_buffer()$/;"	l
int	asm/ch7b_usertest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch7b_usertest.asm	/^int close(int fd)$/;"	l
int	asm/ch7b_usertest.asm	/^int condvar_create()$/;"	l
int	asm/ch7b_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch7b_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch7b_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch7b_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch7b_usertest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch7b_usertest.asm	/^int fork()$/;"	l
int	asm/ch7b_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch7b_usertest.asm	/^int getchar()$/;"	l
int	asm/ch7b_usertest.asm	/^int getpid()$/;"	l
int	asm/ch7b_usertest.asm	/^int getppid()$/;"	l
int	asm/ch7b_usertest.asm	/^int gettid(void)$/;"	l
int	asm/ch7b_usertest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch7b_usertest.asm	/^int isspace(int c)$/;"	l
int	asm/ch7b_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch7b_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch7b_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch7b_usertest.asm	/^int main()$/;"	l
int	asm/ch7b_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch7b_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch7b_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch7b_usertest.asm	/^int mutex_create()$/;"	l
int	asm/ch7b_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch7b_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch7b_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch7b_usertest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch7b_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	asm/ch7b_usertest.asm	/^int sched_yield()$/;"	l
int	asm/ch7b_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch7b_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch7b_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch7b_usertest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch7b_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch7b_usertest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch7b_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch7b_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch7b_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch7b_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch7b_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch7b_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch7b_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	asm/ch7b_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch7b_usertest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch7b_usertest.asm	/^int wait(int *code)$/;"	l
int	asm/ch7b_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch7b_usertest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int __fflush()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int __write_buffer()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int close(int fd)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int condvar_create()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int fork()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int getchar()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int getpid()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int getppid()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int gettid(void)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int isspace(int c)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int main()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int mutex_create()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int sched_yield()$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int wait(int *code)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8_mut1_deadlock.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int __fflush()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int __write_buffer()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int close(int fd)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int condvar_create()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int fork()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int getchar()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int getpid()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int getppid()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int gettid(void)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int isspace(int c)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int main()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int mutex_create()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int sched_yield()$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int wait(int *code)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8_sem1_deadlock.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int __fflush()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int __write_buffer()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int close(int fd)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int condvar_create()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int fork()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int getchar()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int getpid()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int getppid()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int gettid(void)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int isspace(int c)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int main()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int mutex_create()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int sched_yield()$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int semaphore_barrier_id;$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int wait(int *code)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8_sem2_deadlock.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8_usertest.asm	/^int __fflush()$/;"	l
int	asm/ch8_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8_usertest.asm	/^int __write_buffer()$/;"	l
int	asm/ch8_usertest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8_usertest.asm	/^int close(int fd)$/;"	l
int	asm/ch8_usertest.asm	/^int condvar_create()$/;"	l
int	asm/ch8_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8_usertest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8_usertest.asm	/^int fork()$/;"	l
int	asm/ch8_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8_usertest.asm	/^int getchar()$/;"	l
int	asm/ch8_usertest.asm	/^int getpid()$/;"	l
int	asm/ch8_usertest.asm	/^int getppid()$/;"	l
int	asm/ch8_usertest.asm	/^int gettid(void)$/;"	l
int	asm/ch8_usertest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8_usertest.asm	/^int isspace(int c)$/;"	l
int	asm/ch8_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8_usertest.asm	/^int main()$/;"	l
int	asm/ch8_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8_usertest.asm	/^int mutex_create()$/;"	l
int	asm/ch8_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8_usertest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	asm/ch8_usertest.asm	/^int sched_yield()$/;"	l
int	asm/ch8_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8_usertest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8_usertest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	asm/ch8_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8_usertest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8_usertest.asm	/^int wait(int *code)$/;"	l
int	asm/ch8_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8_usertest.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int __fflush()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int fork()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int front = 0;$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int getchar()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int getpid()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int getppid()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int main()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int tail = 0;$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int threads[producers + 1];$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_mpsc_sem.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int __fflush()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int eat[N][ROUND * 2];$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int fork()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int getchar()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int getpid()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int getppid()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int main()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_mut_phi_din.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_mut_race.asm	/^int __fflush()$/;"	l
int	asm/ch8b_mut_race.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_mut_race.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_mut_race.asm	/^int a;$/;"	l
int	asm/ch8b_mut_race.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_mut_race.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_mut_race.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_mut_race.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_mut_race.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_mut_race.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_mut_race.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_mut_race.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_mut_race.asm	/^int fork()$/;"	l
int	asm/ch8b_mut_race.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_mut_race.asm	/^int getchar()$/;"	l
int	asm/ch8b_mut_race.asm	/^int getpid()$/;"	l
int	asm/ch8b_mut_race.asm	/^int getppid()$/;"	l
int	asm/ch8b_mut_race.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_mut_race.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_mut_race.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_mut_race.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_mut_race.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_mut_race.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_mut_race.asm	/^int main()$/;"	l
int	asm/ch8b_mut_race.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_mut_race.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_mut_race.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_mut_race.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_mut_race.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_mut_race.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_mut_race.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_mut_race.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_mut_race.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_mut_race.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_mut_race.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_mut_race.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_mut_race.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_mut_race.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_mut_race.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_mut_race.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_mut_race.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_mut_race.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_mut_race.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_mut_race.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_mut_race.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_mut_race.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_mut_race.asm	/^int threads[thread_count];$/;"	l
int	asm/ch8b_mut_race.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_mut_race.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_mut_race.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_mut_race.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int __fflush()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int a;$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int fork()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int getchar()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int getpid()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int getppid()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int main()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int threads[thread_count];$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_spin_mut_race.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int __fflush()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int fork()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int getchar()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int getpid()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int getppid()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int main()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_sync_sem.asm	/^int sem_sync_id;$/;"	l
int	asm/ch8b_sync_sem.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_sync_sem.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_sync_sem.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int __fflush()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int a = 0;$/;"	l
int	asm/ch8b_test_condvar.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int condvar_id;$/;"	l
int	asm/ch8b_test_condvar.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int fork()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int getchar()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int getpid()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int getppid()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int main()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int mutex_id;$/;"	l
int	asm/ch8b_test_condvar.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_test_condvar.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_test_condvar.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_test_condvar.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_threads.asm	/^int __fflush()$/;"	l
int	asm/ch8b_threads.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_threads.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_threads.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_threads.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_threads.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_threads.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_threads.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_threads.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_threads.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_threads.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_threads.asm	/^int fork()$/;"	l
int	asm/ch8b_threads.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_threads.asm	/^int getchar()$/;"	l
int	asm/ch8b_threads.asm	/^int getpid()$/;"	l
int	asm/ch8b_threads.asm	/^int getppid()$/;"	l
int	asm/ch8b_threads.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_threads.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_threads.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_threads.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_threads.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_threads.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_threads.asm	/^int main(void)$/;"	l
int	asm/ch8b_threads.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_threads.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_threads.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_threads.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_threads.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_threads.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_threads.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_threads.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_threads.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_threads.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_threads.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_threads.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_threads.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_threads.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_threads.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_threads.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_threads.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_threads.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_threads.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_threads.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_threads.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_threads.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_threads.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_threads.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_threads.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_threads.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int __fflush()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int fork()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int getchar()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int getpid()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int getppid()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int main(void)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_threads_arg.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_threads_arg.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_threads_arg.asm	/^int waittid(int tid)$/;"	l
int	asm/ch8b_usertest.asm	/^int __fflush()$/;"	l
int	asm/ch8b_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/ch8b_usertest.asm	/^int __write_buffer()$/;"	l
int	asm/ch8b_usertest.asm	/^int atoi(const char *s)$/;"	l
int	asm/ch8b_usertest.asm	/^int close(int fd)$/;"	l
int	asm/ch8b_usertest.asm	/^int condvar_create()$/;"	l
int	asm/ch8b_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/ch8b_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/ch8b_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/ch8b_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/ch8b_usertest.asm	/^int fflush(int fd)$/;"	l
int	asm/ch8b_usertest.asm	/^int fork()$/;"	l
int	asm/ch8b_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/ch8b_usertest.asm	/^int getchar()$/;"	l
int	asm/ch8b_usertest.asm	/^int getpid()$/;"	l
int	asm/ch8b_usertest.asm	/^int getppid()$/;"	l
int	asm/ch8b_usertest.asm	/^int gettid(void)$/;"	l
int	asm/ch8b_usertest.asm	/^int isdigit(int c)$/;"	l
int	asm/ch8b_usertest.asm	/^int isspace(int c)$/;"	l
int	asm/ch8b_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/ch8b_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/ch8b_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/ch8b_usertest.asm	/^int main()$/;"	l
int	asm/ch8b_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/ch8b_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/ch8b_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	asm/ch8b_usertest.asm	/^int mutex_create()$/;"	l
int	asm/ch8b_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/ch8b_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/ch8b_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/ch8b_usertest.asm	/^int pipe(void *p)$/;"	l
int	asm/ch8b_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	asm/ch8b_usertest.asm	/^int sched_yield()$/;"	l
int	asm/ch8b_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/ch8b_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/ch8b_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/ch8b_usertest.asm	/^int set_priority(int prio)$/;"	l
int	asm/ch8b_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/ch8b_usertest.asm	/^int spawn(const char *file)$/;"	l
int	asm/ch8b_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/ch8b_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/ch8b_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/ch8b_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/ch8b_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/ch8b_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/ch8b_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	asm/ch8b_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/ch8b_usertest.asm	/^int unlink(char *path)$/;"	l
int	asm/ch8b_usertest.asm	/^int wait(int *code)$/;"	l
int	asm/ch8b_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/ch8b_usertest.asm	/^int waittid(int tid)$/;"	l
int	asm/usershell.asm	/^int __fflush()$/;"	l
int	asm/usershell.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	asm/usershell.asm	/^int __write_buffer()$/;"	l
int	asm/usershell.asm	/^int atoi(const char *s)$/;"	l
int	asm/usershell.asm	/^int close(int fd)$/;"	l
int	asm/usershell.asm	/^int condvar_create()$/;"	l
int	asm/usershell.asm	/^int condvar_signal(int cid)$/;"	l
int	asm/usershell.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	asm/usershell.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	asm/usershell.asm	/^int exec(const char *name, char **argv)$/;"	l
int	asm/usershell.asm	/^int fflush(int fd)$/;"	l
int	asm/usershell.asm	/^int fork()$/;"	l
int	asm/usershell.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	asm/usershell.asm	/^int getchar()$/;"	l
int	asm/usershell.asm	/^int getpid()$/;"	l
int	asm/usershell.asm	/^int getppid()$/;"	l
int	asm/usershell.asm	/^int gettid(void)$/;"	l
int	asm/usershell.asm	/^int is_empty()$/;"	l
int	asm/usershell.asm	/^int isdigit(int c)$/;"	l
int	asm/usershell.asm	/^int isspace(int c)$/;"	l
int	asm/usershell.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	asm/usershell.asm	/^int mailread(void *buf, int len)$/;"	l
int	asm/usershell.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	asm/usershell.asm	/^int main()$/;"	l
int	asm/usershell.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	asm/usershell.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	asm/usershell.asm	/^int mutex_blocking_create()$/;"	l
int	asm/usershell.asm	/^int mutex_create()$/;"	l
int	asm/usershell.asm	/^int mutex_lock(int mid)$/;"	l
int	asm/usershell.asm	/^int mutex_unlock(int mid)$/;"	l
int	asm/usershell.asm	/^int open(const char *path, int flags)$/;"	l
int	asm/usershell.asm	/^int pipe(void *p)$/;"	l
int	asm/usershell.asm	/^int sched_yield()$/;"	l
int	asm/usershell.asm	/^int semaphore_create(int res_count)$/;"	l
int	asm/usershell.asm	/^int semaphore_down(int sid)$/;"	l
int	asm/usershell.asm	/^int semaphore_up(int sid)$/;"	l
int	asm/usershell.asm	/^int set_priority(int prio)$/;"	l
int	asm/usershell.asm	/^int sleep(unsigned long long time)$/;"	l
int	asm/usershell.asm	/^int spawn(const char *file)$/;"	l
int	asm/usershell.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	asm/usershell.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	asm/usershell.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	asm/usershell.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	asm/usershell.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	asm/usershell.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	asm/usershell.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	asm/usershell.asm	/^int top = 0;$/;"	l
int	asm/usershell.asm	/^int unlink(char *path)$/;"	l
int	asm/usershell.asm	/^int wait(int *code)$/;"	l
int	asm/usershell.asm	/^int waitpid(int pid, int *code)$/;"	l
int	asm/usershell.asm	/^int waittid(int tid)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int __fflush()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int __write_buffer()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int close(int fd)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int condvar_create()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int fflush(int fd)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int fork()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int getchar()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int getpid()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int getppid()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int gettid(void)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int isdigit(int c)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int isspace(int c)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int main()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int mutex_create()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int pipe(void *p)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int sched_yield()$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int unlink(char *path)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int wait(int *code)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/__ch2_bad_address.asm	/^int waittid(int tid)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int __fflush()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int __write_buffer()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int close(int fd)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int condvar_create()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int fflush(int fd)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int fork()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int getchar()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int getpid()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int getppid()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int gettid(void)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int isdigit(int c)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int isspace(int c)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int main()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int mutex_create()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int pipe(void *p)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int sched_yield()$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int unlink(char *path)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int wait(int *code)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/__ch2_bad_instruction.asm	/^int waittid(int tid)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int __fflush()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int __write_buffer()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int close(int fd)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int condvar_create()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int fflush(int fd)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int fork()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int getchar()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int getpid()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int getppid()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int gettid(void)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int isdigit(int c)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int isspace(int c)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int main()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int mutex_create()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int pipe(void *p)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int sched_yield()$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int unlink(char *path)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int wait(int *code)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/__ch2_bad_register.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch2b_exit.asm	/^int __fflush()$/;"	l
int	build/asm/ch2b_exit.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch2b_exit.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch2b_exit.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch2b_exit.asm	/^int close(int fd)$/;"	l
int	build/asm/ch2b_exit.asm	/^int condvar_create()$/;"	l
int	build/asm/ch2b_exit.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch2b_exit.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch2b_exit.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch2b_exit.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch2b_exit.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch2b_exit.asm	/^int fork()$/;"	l
int	build/asm/ch2b_exit.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch2b_exit.asm	/^int getchar()$/;"	l
int	build/asm/ch2b_exit.asm	/^int getpid()$/;"	l
int	build/asm/ch2b_exit.asm	/^int getppid()$/;"	l
int	build/asm/ch2b_exit.asm	/^int gettid(void)$/;"	l
int	build/asm/ch2b_exit.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch2b_exit.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch2b_exit.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch2b_exit.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch2b_exit.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch2b_exit.asm	/^int main()$/;"	l
int	build/asm/ch2b_exit.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch2b_exit.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch2b_exit.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch2b_exit.asm	/^int mutex_create()$/;"	l
int	build/asm/ch2b_exit.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch2b_exit.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch2b_exit.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch2b_exit.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch2b_exit.asm	/^int sched_yield()$/;"	l
int	build/asm/ch2b_exit.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch2b_exit.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch2b_exit.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch2b_exit.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch2b_exit.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch2b_exit.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch2b_exit.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch2b_exit.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch2b_exit.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch2b_exit.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch2b_exit.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch2b_exit.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch2b_exit.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch2b_exit.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch2b_exit.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch2b_exit.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch2b_exit.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int __fflush()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int close(int fd)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int condvar_create()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int fork()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int getchar()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int getpid()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int getppid()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int gettid(void)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int main()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int mutex_create()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int sched_yield()$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch2b_hello_world.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch2b_power.asm	/^int __fflush()$/;"	l
int	build/asm/ch2b_power.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch2b_power.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch2b_power.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch2b_power.asm	/^int close(int fd)$/;"	l
int	build/asm/ch2b_power.asm	/^int condvar_create()$/;"	l
int	build/asm/ch2b_power.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch2b_power.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch2b_power.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch2b_power.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch2b_power.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch2b_power.asm	/^int fork()$/;"	l
int	build/asm/ch2b_power.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch2b_power.asm	/^int getchar()$/;"	l
int	build/asm/ch2b_power.asm	/^int getpid()$/;"	l
int	build/asm/ch2b_power.asm	/^int getppid()$/;"	l
int	build/asm/ch2b_power.asm	/^int gettid(void)$/;"	l
int	build/asm/ch2b_power.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch2b_power.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch2b_power.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch2b_power.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch2b_power.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch2b_power.asm	/^int main()$/;"	l
int	build/asm/ch2b_power.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch2b_power.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch2b_power.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch2b_power.asm	/^int mutex_create()$/;"	l
int	build/asm/ch2b_power.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch2b_power.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch2b_power.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch2b_power.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch2b_power.asm	/^int sched_yield()$/;"	l
int	build/asm/ch2b_power.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch2b_power.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch2b_power.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch2b_power.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch2b_power.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch2b_power.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch2b_power.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch2b_power.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch2b_power.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch2b_power.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch2b_power.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch2b_power.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch2b_power.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch2b_power.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch2b_power.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch2b_power.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch2b_power.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int __fflush()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int close(int fd)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int condvar_create()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int fork()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int getchar()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int getpid()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int getppid()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int gettid(void)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int main()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int mutex_create()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int sched_yield()$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch3_taskinfo.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int __fflush()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int close(int fd)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int condvar_create()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int fork()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int getchar()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int getpid()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int getppid()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int gettid(void)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int main()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int mutex_create()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int sched_yield()$/;"	l
int	build/asm/ch3b_sleep.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch3b_sleep.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch3b_sleep.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int __fflush()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int fork()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int getchar()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int getpid()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int getppid()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int main()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch3b_sleep1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int __fflush()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int close(int fd)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int condvar_create()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int fork()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int getchar()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int getpid()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int getppid()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int gettid(void)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int main()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int mutex_create()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int sched_yield()$/;"	l
int	build/asm/ch3b_yield0.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch3b_yield0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch3b_yield0.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int __fflush()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int fork()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int getchar()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int getpid()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int getppid()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int main()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch3b_yield1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch3b_yield1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch3b_yield1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int __fflush()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int close(int fd)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int condvar_create()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int fork()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int getchar()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int getpid()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int getppid()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int gettid(void)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int main()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int mutex_create()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int sched_yield()$/;"	l
int	build/asm/ch3b_yield2.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch3b_yield2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch3b_yield2.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int __fflush()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int close(int fd)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int condvar_create()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int fork()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int getchar()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int getpid()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int getppid()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int gettid(void)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int main()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int mutex_create()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int sched_yield()$/;"	l
int	build/asm/ch4_mmap0.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch4_mmap0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch4_mmap0.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int __fflush()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int fork()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int getchar()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int getpid()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int getppid()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int main()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch4_mmap1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch4_mmap1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch4_mmap1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int __fflush()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int close(int fd)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int condvar_create()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int fork()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int getchar()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int getpid()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int getppid()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int gettid(void)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int main()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int mutex_create()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int sched_yield()$/;"	l
int	build/asm/ch4_mmap2.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch4_mmap2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch4_mmap2.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int __fflush()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int close(int fd)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int condvar_create()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int fork()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int getchar()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int getpid()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int getppid()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int gettid(void)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int main()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int mutex_create()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int sched_yield()$/;"	l
int	build/asm/ch4_mmap3.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch4_mmap3.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch4_mmap3.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int __fflush()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int close(int fd)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int condvar_create()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int fork()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int getchar()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int getpid()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int getppid()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int gettid(void)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int main()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int mutex_create()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int sched_yield()$/;"	l
int	build/asm/ch4_unmap0.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch4_unmap0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch4_unmap0.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int __fflush()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int fork()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int getchar()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int getpid()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int getppid()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int main()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch4_unmap1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch4_unmap1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch4_unmap1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5_exit0.asm	/^int __fflush()$/;"	l
int	build/asm/ch5_exit0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5_exit0.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5_exit0.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5_exit0.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5_exit0.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5_exit0.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5_exit0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5_exit0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5_exit0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5_exit0.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5_exit0.asm	/^int fork()$/;"	l
int	build/asm/ch5_exit0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5_exit0.asm	/^int getchar()$/;"	l
int	build/asm/ch5_exit0.asm	/^int getpid()$/;"	l
int	build/asm/ch5_exit0.asm	/^int getppid()$/;"	l
int	build/asm/ch5_exit0.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5_exit0.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5_exit0.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5_exit0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5_exit0.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5_exit0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5_exit0.asm	/^int main()$/;"	l
int	build/asm/ch5_exit0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5_exit0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5_exit0.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5_exit0.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5_exit0.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5_exit0.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5_exit0.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5_exit0.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5_exit0.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5_exit0.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5_exit0.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5_exit0.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5_exit0.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5_exit0.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5_exit0.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5_exit0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5_exit0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5_exit0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5_exit0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5_exit0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5_exit0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5_exit0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5_exit0.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5_exit0.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5_exit0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5_exit0.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5_exit1.asm	/^int __fflush()$/;"	l
int	build/asm/ch5_exit1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5_exit1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5_exit1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5_exit1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5_exit1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5_exit1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5_exit1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5_exit1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5_exit1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5_exit1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5_exit1.asm	/^int fork()$/;"	l
int	build/asm/ch5_exit1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5_exit1.asm	/^int getchar()$/;"	l
int	build/asm/ch5_exit1.asm	/^int getpid()$/;"	l
int	build/asm/ch5_exit1.asm	/^int getppid()$/;"	l
int	build/asm/ch5_exit1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5_exit1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5_exit1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5_exit1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5_exit1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5_exit1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5_exit1.asm	/^int main()$/;"	l
int	build/asm/ch5_exit1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5_exit1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5_exit1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5_exit1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5_exit1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5_exit1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5_exit1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5_exit1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5_exit1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5_exit1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5_exit1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5_exit1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5_exit1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5_exit1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5_exit1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5_exit1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5_exit1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5_exit1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5_exit1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5_exit1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5_exit1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5_exit1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5_exit1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5_exit1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5_exit1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5_exit1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int __fflush()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int fork()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int getchar()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int getpid()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int getppid()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int main()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5_mergetest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5_mergetest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	build/asm/ch5_mergetest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5_mergetest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5_ppid.asm	/^int __fflush()$/;"	l
int	build/asm/ch5_ppid.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5_ppid.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5_ppid.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5_ppid.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5_ppid.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5_ppid.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5_ppid.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5_ppid.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5_ppid.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5_ppid.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5_ppid.asm	/^int fork()$/;"	l
int	build/asm/ch5_ppid.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5_ppid.asm	/^int getchar()$/;"	l
int	build/asm/ch5_ppid.asm	/^int getpid()$/;"	l
int	build/asm/ch5_ppid.asm	/^int getppid()$/;"	l
int	build/asm/ch5_ppid.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5_ppid.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5_ppid.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5_ppid.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5_ppid.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5_ppid.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5_ppid.asm	/^int main()$/;"	l
int	build/asm/ch5_ppid.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5_ppid.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5_ppid.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5_ppid.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5_ppid.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5_ppid.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5_ppid.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5_ppid.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5_ppid.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5_ppid.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5_ppid.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5_ppid.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5_ppid.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5_ppid.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5_ppid.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5_ppid.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5_ppid.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5_ppid.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5_ppid.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5_ppid.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5_ppid.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5_ppid.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5_ppid.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5_ppid.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5_ppid.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5_ppid.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5_setprio.asm	/^int __fflush()$/;"	l
int	build/asm/ch5_setprio.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5_setprio.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5_setprio.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5_setprio.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5_setprio.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5_setprio.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5_setprio.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5_setprio.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5_setprio.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5_setprio.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5_setprio.asm	/^int fork()$/;"	l
int	build/asm/ch5_setprio.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5_setprio.asm	/^int getchar()$/;"	l
int	build/asm/ch5_setprio.asm	/^int getpid()$/;"	l
int	build/asm/ch5_setprio.asm	/^int getppid()$/;"	l
int	build/asm/ch5_setprio.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5_setprio.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5_setprio.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5_setprio.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5_setprio.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5_setprio.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5_setprio.asm	/^int main()$/;"	l
int	build/asm/ch5_setprio.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5_setprio.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5_setprio.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5_setprio.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5_setprio.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5_setprio.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5_setprio.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5_setprio.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5_setprio.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5_setprio.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5_setprio.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5_setprio.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5_setprio.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5_setprio.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5_setprio.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5_setprio.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5_setprio.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5_setprio.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5_setprio.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5_setprio.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5_setprio.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5_setprio.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5_setprio.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5_setprio.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5_setprio.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5_setprio.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int __fflush()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int fork()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int getchar()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int getpid()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int getppid()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int main()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5_spawn0.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5_spawn0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5_spawn0.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int __fflush()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int fork()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int getchar()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int getpid()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int getppid()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int main()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5_spawn1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5_spawn1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5_spawn1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5_usertest.asm	/^int __fflush()$/;"	l
int	build/asm/ch5_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5_usertest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5_usertest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5_usertest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5_usertest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5_usertest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5_usertest.asm	/^int fork()$/;"	l
int	build/asm/ch5_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5_usertest.asm	/^int getchar()$/;"	l
int	build/asm/ch5_usertest.asm	/^int getpid()$/;"	l
int	build/asm/ch5_usertest.asm	/^int getppid()$/;"	l
int	build/asm/ch5_usertest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5_usertest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5_usertest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5_usertest.asm	/^int main()$/;"	l
int	build/asm/ch5_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5_usertest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5_usertest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	build/asm/ch5_usertest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5_usertest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5_usertest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	build/asm/ch5_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5_usertest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5_usertest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5_usertest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int __fflush()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int fork()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int getchar()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int getpid()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int getppid()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int main()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5b_exec_simple.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5b_exit.asm	/^int __fflush()$/;"	l
int	build/asm/ch5b_exit.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5b_exit.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5b_exit.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5b_exit.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5b_exit.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5b_exit.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5b_exit.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5b_exit.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5b_exit.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5b_exit.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5b_exit.asm	/^int fork()$/;"	l
int	build/asm/ch5b_exit.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5b_exit.asm	/^int getchar()$/;"	l
int	build/asm/ch5b_exit.asm	/^int getpid()$/;"	l
int	build/asm/ch5b_exit.asm	/^int getppid()$/;"	l
int	build/asm/ch5b_exit.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5b_exit.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5b_exit.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5b_exit.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5b_exit.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5b_exit.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5b_exit.asm	/^int main()$/;"	l
int	build/asm/ch5b_exit.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5b_exit.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5b_exit.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5b_exit.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5b_exit.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5b_exit.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5b_exit.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5b_exit.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5b_exit.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5b_exit.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5b_exit.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5b_exit.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5b_exit.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5b_exit.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5b_exit.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5b_exit.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5b_exit.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5b_exit.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5b_exit.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5b_exit.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5b_exit.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5b_exit.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5b_exit.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5b_exit.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5b_exit.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5b_exit.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int __fflush()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int fork()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int getchar()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int getpid()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int getppid()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int main()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5b_forktest0.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int __fflush()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int fork()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int getchar()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int getpid()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int getppid()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int main()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5b_forktest1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int __fflush()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int fork()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int getchar()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int getpid()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int getppid()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int main()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5b_forktest2.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int __fflush()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int fork()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int getchar()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int getpid()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int getppid()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int main()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5b_getpid.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5b_getpid.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5b_getpid.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int __fflush()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int fork()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int getchar()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int getpid()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int getppid()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int main()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5b_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5b_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	build/asm/ch5b_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5b_usertest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int __fflush()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int count_during(int prio)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int fork()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int getchar()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int getpid()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int getppid()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int main()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5t_stride0.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5t_stride0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5t_stride0.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int __fflush()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int count_during(int prio)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int fork()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int getchar()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int getpid()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int getppid()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int main()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5t_stride1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5t_stride1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5t_stride1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int __fflush()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int count_during(int prio)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int fork()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int getchar()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int getpid()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int getppid()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int main()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5t_stride2.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5t_stride2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5t_stride2.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int __fflush()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int count_during(int prio)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int fork()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int getchar()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int getpid()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int getppid()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int main()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5t_stride3.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5t_stride3.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5t_stride3.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int __fflush()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int count_during(int prio)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int fork()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int getchar()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int getpid()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int getppid()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int main()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5t_stride4.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5t_stride4.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5t_stride4.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int __fflush()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int count_during(int prio)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int fork()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int getchar()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int getpid()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int getppid()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int main()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5t_stride5.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5t_stride5.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5t_stride5.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int __fflush()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int fork()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int getchar()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int getpid()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int getppid()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int main()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int pid[] = {0, 0, 0, 0, 0, 0};$/;"	l
int	build/asm/ch5t_usertest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch5t_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch5t_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch5t_usertest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6_file0.asm	/^int __fflush()$/;"	l
int	build/asm/ch6_file0.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6_file0.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6_file0.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6_file0.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6_file0.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6_file0.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6_file0.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6_file0.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6_file0.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6_file0.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6_file0.asm	/^int fork()$/;"	l
int	build/asm/ch6_file0.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6_file0.asm	/^int getchar()$/;"	l
int	build/asm/ch6_file0.asm	/^int getpid()$/;"	l
int	build/asm/ch6_file0.asm	/^int getppid()$/;"	l
int	build/asm/ch6_file0.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6_file0.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6_file0.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6_file0.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6_file0.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6_file0.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6_file0.asm	/^int main()$/;"	l
int	build/asm/ch6_file0.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6_file0.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6_file0.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6_file0.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6_file0.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6_file0.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6_file0.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6_file0.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6_file0.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6_file0.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6_file0.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6_file0.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6_file0.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6_file0.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6_file0.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6_file0.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6_file0.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6_file0.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6_file0.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6_file0.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6_file0.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6_file0.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6_file0.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6_file0.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6_file0.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6_file0.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6_file1.asm	/^int __fflush()$/;"	l
int	build/asm/ch6_file1.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6_file1.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6_file1.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6_file1.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6_file1.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6_file1.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6_file1.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6_file1.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6_file1.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6_file1.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6_file1.asm	/^int fork()$/;"	l
int	build/asm/ch6_file1.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6_file1.asm	/^int getchar()$/;"	l
int	build/asm/ch6_file1.asm	/^int getpid()$/;"	l
int	build/asm/ch6_file1.asm	/^int getppid()$/;"	l
int	build/asm/ch6_file1.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6_file1.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6_file1.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6_file1.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6_file1.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6_file1.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6_file1.asm	/^int main()$/;"	l
int	build/asm/ch6_file1.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6_file1.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6_file1.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6_file1.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6_file1.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6_file1.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6_file1.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6_file1.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6_file1.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6_file1.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6_file1.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6_file1.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6_file1.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6_file1.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6_file1.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6_file1.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6_file1.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6_file1.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6_file1.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6_file1.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6_file1.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6_file1.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6_file1.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6_file1.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6_file1.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6_file1.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6_file2.asm	/^int __fflush()$/;"	l
int	build/asm/ch6_file2.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6_file2.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6_file2.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6_file2.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6_file2.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6_file2.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6_file2.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6_file2.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6_file2.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6_file2.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6_file2.asm	/^int fork()$/;"	l
int	build/asm/ch6_file2.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6_file2.asm	/^int getchar()$/;"	l
int	build/asm/ch6_file2.asm	/^int getpid()$/;"	l
int	build/asm/ch6_file2.asm	/^int getppid()$/;"	l
int	build/asm/ch6_file2.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6_file2.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6_file2.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6_file2.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6_file2.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6_file2.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6_file2.asm	/^int main()$/;"	l
int	build/asm/ch6_file2.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6_file2.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6_file2.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6_file2.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6_file2.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6_file2.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6_file2.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6_file2.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6_file2.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6_file2.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6_file2.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6_file2.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6_file2.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6_file2.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6_file2.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6_file2.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6_file2.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6_file2.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6_file2.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6_file2.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6_file2.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6_file2.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6_file2.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6_file2.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6_file2.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6_file2.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6_file3.asm	/^int __fflush()$/;"	l
int	build/asm/ch6_file3.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6_file3.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6_file3.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6_file3.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6_file3.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6_file3.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6_file3.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6_file3.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6_file3.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6_file3.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6_file3.asm	/^int fork()$/;"	l
int	build/asm/ch6_file3.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6_file3.asm	/^int getchar()$/;"	l
int	build/asm/ch6_file3.asm	/^int getpid()$/;"	l
int	build/asm/ch6_file3.asm	/^int getppid()$/;"	l
int	build/asm/ch6_file3.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6_file3.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6_file3.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6_file3.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6_file3.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6_file3.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6_file3.asm	/^int main()$/;"	l
int	build/asm/ch6_file3.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6_file3.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6_file3.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6_file3.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6_file3.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6_file3.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6_file3.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6_file3.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6_file3.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6_file3.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6_file3.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6_file3.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6_file3.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6_file3.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6_file3.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6_file3.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6_file3.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6_file3.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6_file3.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6_file3.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6_file3.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6_file3.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6_file3.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6_file3.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6_file3.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6_file3.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6_usertest.asm	/^int __fflush()$/;"	l
int	build/asm/ch6_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6_usertest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6_usertest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6_usertest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6_usertest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6_usertest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6_usertest.asm	/^int fork()$/;"	l
int	build/asm/ch6_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6_usertest.asm	/^int getchar()$/;"	l
int	build/asm/ch6_usertest.asm	/^int getpid()$/;"	l
int	build/asm/ch6_usertest.asm	/^int getppid()$/;"	l
int	build/asm/ch6_usertest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6_usertest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6_usertest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6_usertest.asm	/^int main()$/;"	l
int	build/asm/ch6_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6_usertest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6_usertest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	build/asm/ch6_usertest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6_usertest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6_usertest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	build/asm/ch6_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6_usertest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6_usertest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6_usertest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6b_args.asm	/^int __fflush()$/;"	l
int	build/asm/ch6b_args.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_args.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6b_args.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6b_args.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6b_args.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6b_args.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6b_args.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6b_args.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6b_args.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6b_args.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6b_args.asm	/^int fork()$/;"	l
int	build/asm/ch6b_args.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6b_args.asm	/^int getchar()$/;"	l
int	build/asm/ch6b_args.asm	/^int getpid()$/;"	l
int	build/asm/ch6b_args.asm	/^int getppid()$/;"	l
int	build/asm/ch6b_args.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6b_args.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6b_args.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6b_args.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6b_args.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6b_args.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6b_args.asm	/^int main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_args.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6b_args.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6b_args.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6b_args.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6b_args.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6b_args.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6b_args.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6b_args.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6b_args.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6b_args.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6b_args.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6b_args.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6b_args.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6b_args.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6b_args.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6b_args.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6b_args.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6b_args.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6b_args.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6b_args.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6b_args.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6b_args.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6b_args.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6b_args.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6b_args.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6b_args.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6b_assert.asm	/^int __fflush()$/;"	l
int	build/asm/ch6b_assert.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_assert.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6b_assert.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6b_assert.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6b_assert.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6b_assert.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6b_assert.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6b_assert.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6b_assert.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6b_assert.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6b_assert.asm	/^int fork()$/;"	l
int	build/asm/ch6b_assert.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6b_assert.asm	/^int getchar()$/;"	l
int	build/asm/ch6b_assert.asm	/^int getpid()$/;"	l
int	build/asm/ch6b_assert.asm	/^int getppid()$/;"	l
int	build/asm/ch6b_assert.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6b_assert.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6b_assert.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6b_assert.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6b_assert.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6b_assert.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6b_assert.asm	/^int main()$/;"	l
int	build/asm/ch6b_assert.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6b_assert.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6b_assert.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6b_assert.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6b_assert.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6b_assert.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6b_assert.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6b_assert.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6b_assert.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6b_assert.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6b_assert.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6b_assert.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6b_assert.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6b_assert.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6b_assert.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6b_assert.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6b_assert.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6b_assert.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6b_assert.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6b_assert.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6b_assert.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6b_assert.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6b_assert.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6b_assert.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6b_assert.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6b_assert.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6b_cat.asm	/^int __fflush()$/;"	l
int	build/asm/ch6b_cat.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_cat.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6b_cat.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6b_cat.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6b_cat.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6b_cat.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6b_cat.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6b_cat.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6b_cat.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6b_cat.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6b_cat.asm	/^int fork()$/;"	l
int	build/asm/ch6b_cat.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6b_cat.asm	/^int getchar()$/;"	l
int	build/asm/ch6b_cat.asm	/^int getpid()$/;"	l
int	build/asm/ch6b_cat.asm	/^int getppid()$/;"	l
int	build/asm/ch6b_cat.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6b_cat.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6b_cat.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6b_cat.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6b_cat.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6b_cat.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6b_cat.asm	/^int main()$/;"	l
int	build/asm/ch6b_cat.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6b_cat.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6b_cat.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6b_cat.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6b_cat.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6b_cat.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6b_cat.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6b_cat.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6b_cat.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6b_cat.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6b_cat.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6b_cat.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6b_cat.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6b_cat.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6b_cat.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6b_cat.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6b_cat.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6b_cat.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6b_cat.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6b_cat.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6b_cat.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6b_cat.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6b_cat.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6b_cat.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6b_cat.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6b_cat.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6b_exec.asm	/^int __fflush()$/;"	l
int	build/asm/ch6b_exec.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_exec.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6b_exec.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6b_exec.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6b_exec.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6b_exec.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6b_exec.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6b_exec.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6b_exec.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6b_exec.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6b_exec.asm	/^int fork()$/;"	l
int	build/asm/ch6b_exec.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6b_exec.asm	/^int getchar()$/;"	l
int	build/asm/ch6b_exec.asm	/^int getpid()$/;"	l
int	build/asm/ch6b_exec.asm	/^int getppid()$/;"	l
int	build/asm/ch6b_exec.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6b_exec.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6b_exec.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6b_exec.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6b_exec.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6b_exec.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6b_exec.asm	/^int main()$/;"	l
int	build/asm/ch6b_exec.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6b_exec.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6b_exec.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6b_exec.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6b_exec.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6b_exec.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6b_exec.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6b_exec.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6b_exec.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6b_exec.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6b_exec.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6b_exec.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6b_exec.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6b_exec.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6b_exec.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6b_exec.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6b_exec.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6b_exec.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6b_exec.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6b_exec.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6b_exec.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6b_exec.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6b_exec.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6b_exec.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6b_exec.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6b_exec.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int __fflush()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int fork()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int getchar()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int getpid()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int getppid()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int main()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6b_filetest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6b_filetest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6b_filetest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int __fflush()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int fork()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int getchar()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int getpid()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int getppid()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int main()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6b_filetest_simple.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6b_panic.asm	/^int __fflush()$/;"	l
int	build/asm/ch6b_panic.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_panic.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6b_panic.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6b_panic.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6b_panic.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6b_panic.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6b_panic.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6b_panic.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6b_panic.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6b_panic.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6b_panic.asm	/^int fork()$/;"	l
int	build/asm/ch6b_panic.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6b_panic.asm	/^int getchar()$/;"	l
int	build/asm/ch6b_panic.asm	/^int getpid()$/;"	l
int	build/asm/ch6b_panic.asm	/^int getppid()$/;"	l
int	build/asm/ch6b_panic.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6b_panic.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6b_panic.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6b_panic.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6b_panic.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6b_panic.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6b_panic.asm	/^int main()$/;"	l
int	build/asm/ch6b_panic.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6b_panic.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6b_panic.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6b_panic.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6b_panic.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6b_panic.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6b_panic.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6b_panic.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6b_panic.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6b_panic.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6b_panic.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6b_panic.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6b_panic.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6b_panic.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6b_panic.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6b_panic.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6b_panic.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6b_panic.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6b_panic.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6b_panic.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6b_panic.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6b_panic.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6b_panic.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6b_panic.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6b_panic.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6b_panic.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int __fflush()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int fork()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int getchar()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int getpid()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int getppid()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int main()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch6b_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch6b_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	build/asm/ch6b_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch6b_usertest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int __fflush()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int fork()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int getchar()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int getpid()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int getppid()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int main()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch7b_pipetest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int __fflush()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int fork()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int getchar()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int getpid()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int getppid()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int main()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch7b_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch7b_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	build/asm/ch7b_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch7b_usertest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int __fflush()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int fork()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int getchar()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int getpid()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int getppid()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int main()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8_mut1_deadlock.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int __fflush()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int fork()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int getchar()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int getpid()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int getppid()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int main()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8_sem1_deadlock.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int __fflush()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int fork()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int getchar()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int getpid()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int getppid()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int main()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int semaphore_barrier_id;$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8_sem2_deadlock.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8_usertest.asm	/^int __fflush()$/;"	l
int	build/asm/ch8_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8_usertest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8_usertest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8_usertest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8_usertest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8_usertest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8_usertest.asm	/^int fork()$/;"	l
int	build/asm/ch8_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8_usertest.asm	/^int getchar()$/;"	l
int	build/asm/ch8_usertest.asm	/^int getpid()$/;"	l
int	build/asm/ch8_usertest.asm	/^int getppid()$/;"	l
int	build/asm/ch8_usertest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8_usertest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8_usertest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8_usertest.asm	/^int main()$/;"	l
int	build/asm/ch8_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8_usertest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8_usertest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	build/asm/ch8_usertest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8_usertest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8_usertest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	build/asm/ch8_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8_usertest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8_usertest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8_usertest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int fork()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int front = 0;$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int main()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int tail = 0;$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int threads[producers + 1];$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_mpsc_sem.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int eat[N][ROUND * 2];$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int fork()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int main()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_mut_phi_din.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int a;$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int fork()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int main()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int threads[thread_count];$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_mut_race.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int a;$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int fork()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int main()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int threads[thread_count];$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_spin_mut_race.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int fork()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int main()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int sem_sync_id;$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_sync_sem.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int a = 0;$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int condvar_id;$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int fork()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int main()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int mutex_id;$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_test_condvar.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_threads.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_threads.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_threads.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_threads.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_threads.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_threads.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_threads.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_threads.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_threads.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_threads.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_threads.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_threads.asm	/^int fork()$/;"	l
int	build/asm/ch8b_threads.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_threads.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_threads.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_threads.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_threads.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_threads.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_threads.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_threads.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_threads.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_threads.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_threads.asm	/^int main(void)$/;"	l
int	build/asm/ch8b_threads.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_threads.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_threads.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_threads.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_threads.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_threads.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_threads.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_threads.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_threads.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_threads.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_threads.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_threads.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_threads.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_threads.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_threads.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_threads.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_threads.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_threads.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_threads.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_threads.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_threads.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_threads.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_threads.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_threads.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_threads.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_threads.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int fork()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int main(void)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_threads_arg.asm	/^int waittid(int tid)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int __fflush()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int __write_buffer()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int close(int fd)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int condvar_create()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int fflush(int fd)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int fork()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int getchar()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int getpid()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int getppid()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int gettid(void)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int isdigit(int c)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int isspace(int c)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int main()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int mutex_create()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int pipe(void *p)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int run_tests(const char *tests[], int n)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int sched_yield()$/;"	l
int	build/asm/ch8b_usertest.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/ch8b_usertest.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	l
int	build/asm/ch8b_usertest.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int unlink(char *path)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int wait(int *code)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/ch8b_usertest.asm	/^int waittid(int tid)$/;"	l
int	build/asm/usershell.asm	/^int __fflush()$/;"	l
int	build/asm/usershell.asm	/^int __start_main(int argc, char **argv)$/;"	l
int	build/asm/usershell.asm	/^int __write_buffer()$/;"	l
int	build/asm/usershell.asm	/^int atoi(const char *s)$/;"	l
int	build/asm/usershell.asm	/^int close(int fd)$/;"	l
int	build/asm/usershell.asm	/^int condvar_create()$/;"	l
int	build/asm/usershell.asm	/^int condvar_signal(int cid)$/;"	l
int	build/asm/usershell.asm	/^int condvar_wait(int cid, int mid)$/;"	l
int	build/asm/usershell.asm	/^int enable_deadlock_detect(int enabled)$/;"	l
int	build/asm/usershell.asm	/^int exec(const char *name, char **argv)$/;"	l
int	build/asm/usershell.asm	/^int fflush(int fd)$/;"	l
int	build/asm/usershell.asm	/^int fork()$/;"	l
int	build/asm/usershell.asm	/^int fstat(int fd, Stat *st)$/;"	l
int	build/asm/usershell.asm	/^int getchar()$/;"	l
int	build/asm/usershell.asm	/^int getpid()$/;"	l
int	build/asm/usershell.asm	/^int getppid()$/;"	l
int	build/asm/usershell.asm	/^int gettid(void)$/;"	l
int	build/asm/usershell.asm	/^int is_empty()$/;"	l
int	build/asm/usershell.asm	/^int isdigit(int c)$/;"	l
int	build/asm/usershell.asm	/^int isspace(int c)$/;"	l
int	build/asm/usershell.asm	/^int link(char *old_path, char *new_path)$/;"	l
int	build/asm/usershell.asm	/^int mailread(void *buf, int len)$/;"	l
int	build/asm/usershell.asm	/^int mailwrite(int pid, void *buf, int len)$/;"	l
int	build/asm/usershell.asm	/^int main()$/;"	l
int	build/asm/usershell.asm	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	l
int	build/asm/usershell.asm	/^int munmap(void *start, unsigned long long len)$/;"	l
int	build/asm/usershell.asm	/^int mutex_blocking_create()$/;"	l
int	build/asm/usershell.asm	/^int mutex_create()$/;"	l
int	build/asm/usershell.asm	/^int mutex_lock(int mid)$/;"	l
int	build/asm/usershell.asm	/^int mutex_unlock(int mid)$/;"	l
int	build/asm/usershell.asm	/^int open(const char *path, int flags)$/;"	l
int	build/asm/usershell.asm	/^int pipe(void *p)$/;"	l
int	build/asm/usershell.asm	/^int sched_yield()$/;"	l
int	build/asm/usershell.asm	/^int semaphore_create(int res_count)$/;"	l
int	build/asm/usershell.asm	/^int semaphore_down(int sid)$/;"	l
int	build/asm/usershell.asm	/^int semaphore_up(int sid)$/;"	l
int	build/asm/usershell.asm	/^int set_priority(int prio)$/;"	l
int	build/asm/usershell.asm	/^int sleep(unsigned long long time)$/;"	l
int	build/asm/usershell.asm	/^int spawn(const char *file)$/;"	l
int	build/asm/usershell.asm	/^int strcmp(const char *l, const char *r)$/;"	l
int	build/asm/usershell.asm	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	l
int	build/asm/usershell.asm	/^int sys_get_time(TimeVal *ts, int tz)$/;"	l
int	build/asm/usershell.asm	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	l
int	build/asm/usershell.asm	/^int sys_task_info(TaskInfo *ti)$/;"	l
int	build/asm/usershell.asm	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	l
int	build/asm/usershell.asm	/^int thread_create(void *entry, void *arg)$/;"	l
int	build/asm/usershell.asm	/^int top = 0;$/;"	l
int	build/asm/usershell.asm	/^int unlink(char *path)$/;"	l
int	build/asm/usershell.asm	/^int wait(int *code)$/;"	l
int	build/asm/usershell.asm	/^int waitpid(int pid, int *code)$/;"	l
int	build/asm/usershell.asm	/^int waittid(int tid)$/;"	l
int16	include/stddef.h	/^typedef short int16;$/;"	t
int32	include/stddef.h	/^typedef int int32;$/;"	t
int64	asm/__ch2_bad_address.asm	/^int64 get_mtime()$/;"	l
int64	asm/__ch2_bad_instruction.asm	/^int64 get_mtime()$/;"	l
int64	asm/__ch2_bad_register.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch2b_exit.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch2b_hello_world.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch2b_power.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch3_taskinfo.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch3b_sleep.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch3b_sleep1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch3b_yield0.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch3b_yield1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch3b_yield2.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch4_mmap0.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch4_mmap1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch4_mmap2.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch4_mmap3.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch4_unmap0.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch4_unmap1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5_exit0.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5_exit1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5_mergetest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5_ppid.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5_setprio.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5_spawn0.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5_spawn1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5_usertest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5b_exec_simple.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5b_exit.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5b_forktest0.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5b_forktest1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5b_forktest2.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5b_getpid.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5b_usertest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5t_stride0.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5t_stride1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5t_stride2.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5t_stride3.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5t_stride4.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5t_stride5.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch5t_usertest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6_file0.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6_file1.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6_file2.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6_file3.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6_usertest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6b_args.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6b_assert.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6b_cat.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6b_exec.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6b_filetest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6b_filetest_simple.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6b_panic.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch6b_usertest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch7b_pipetest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch7b_usertest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8_mut1_deadlock.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8_sem1_deadlock.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8_sem2_deadlock.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8_usertest.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_mpsc_sem.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_mut_phi_din.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_mut_race.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_spin_mut_race.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_sync_sem.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_test_condvar.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_threads.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_threads_arg.asm	/^int64 get_mtime()$/;"	l
int64	asm/ch8b_usertest.asm	/^int64 get_mtime()$/;"	l
int64	asm/usershell.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/__ch2_bad_address.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/__ch2_bad_instruction.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/__ch2_bad_register.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch2b_exit.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch2b_hello_world.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch2b_power.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch3_taskinfo.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch3b_sleep.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch3b_sleep1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch3b_yield0.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch3b_yield1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch3b_yield2.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch4_mmap0.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch4_mmap1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch4_mmap2.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch4_mmap3.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch4_unmap0.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch4_unmap1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5_exit0.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5_exit1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5_mergetest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5_ppid.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5_setprio.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5_spawn0.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5_spawn1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5_usertest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5b_exec_simple.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5b_exit.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5b_forktest0.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5b_forktest1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5b_forktest2.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5b_getpid.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5b_usertest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5t_stride0.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5t_stride1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5t_stride2.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5t_stride3.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5t_stride4.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5t_stride5.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch5t_usertest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6_file0.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6_file1.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6_file2.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6_file3.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6_usertest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6b_args.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6b_assert.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6b_cat.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6b_exec.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6b_filetest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6b_filetest_simple.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6b_panic.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch6b_usertest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch7b_pipetest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch7b_usertest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8_mut1_deadlock.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8_sem1_deadlock.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8_sem2_deadlock.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8_usertest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_mpsc_sem.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_mut_phi_din.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_mut_race.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_spin_mut_race.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_sync_sem.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_test_condvar.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_threads.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_threads_arg.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/ch8b_usertest.asm	/^int64 get_mtime()$/;"	l
int64	build/asm/usershell.asm	/^int64 get_mtime()$/;"	l
int64	include/stddef.h	/^typedef long long int64;$/;"	t
int8	include/stddef.h	/^typedef char int8;$/;"	t
intmax_t	include/stdio.h	/^typedef long int intmax_t;$/;"	t
intptr_t	include/stddef.h	/^typedef int32_t intptr_t;$/;"	t
intptr_t	include/stddef.h	/^typedef int64 intptr_t;$/;"	t
is_empty	src/usershell.c	/^int is_empty()$/;"	f
isdigit	lib/string.c	/^int isdigit(int c)$/;"	f
isspace	lib/string.c	/^int isspace(int c)$/;"	f
j	asm/ch5t_stride0.asm	/^		j = !j;$/;"	d
j	asm/ch5t_stride1.asm	/^		j = !j;$/;"	d
j	asm/ch5t_stride2.asm	/^		j = !j;$/;"	d
j	asm/ch5t_stride3.asm	/^		j = !j;$/;"	d
j	asm/ch5t_stride4.asm	/^		j = !j;$/;"	d
j	asm/ch5t_stride5.asm	/^		j = !j;$/;"	d
j	build/asm/ch5t_stride0.asm	/^		j = !j;$/;"	d
j	build/asm/ch5t_stride1.asm	/^		j = !j;$/;"	d
j	build/asm/ch5t_stride2.asm	/^		j = !j;$/;"	d
j	build/asm/ch5t_stride3.asm	/^		j = !j;$/;"	d
j	build/asm/ch5t_stride4.asm	/^		j = !j;$/;"	d
j	build/asm/ch5t_stride5.asm	/^		j = !j;$/;"	d
l	asm/__ch2_bad_address.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/__ch2_bad_address.asm	/^		l = z - a;$/;"	d
l	asm/__ch2_bad_instruction.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/__ch2_bad_instruction.asm	/^		l = z - a;$/;"	d
l	asm/__ch2_bad_register.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/__ch2_bad_register.asm	/^		l = z - a;$/;"	d
l	asm/ch2b_exit.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch2b_exit.asm	/^		l = z - a;$/;"	d
l	asm/ch2b_hello_world.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch2b_hello_world.asm	/^		l = z - a;$/;"	d
l	asm/ch2b_power.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch2b_power.asm	/^		l = z - a;$/;"	d
l	asm/ch3_taskinfo.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch3_taskinfo.asm	/^		l = z - a;$/;"	d
l	asm/ch3b_sleep.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch3b_sleep.asm	/^		l = z - a;$/;"	d
l	asm/ch3b_sleep1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch3b_sleep1.asm	/^		l = z - a;$/;"	d
l	asm/ch3b_yield0.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch3b_yield0.asm	/^		l = z - a;$/;"	d
l	asm/ch3b_yield1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch3b_yield1.asm	/^		l = z - a;$/;"	d
l	asm/ch3b_yield2.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch3b_yield2.asm	/^		l = z - a;$/;"	d
l	asm/ch4_mmap0.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch4_mmap0.asm	/^		l = z - a;$/;"	d
l	asm/ch4_mmap1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch4_mmap1.asm	/^		l = z - a;$/;"	d
l	asm/ch4_mmap2.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch4_mmap2.asm	/^		l = z - a;$/;"	d
l	asm/ch4_mmap3.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch4_mmap3.asm	/^		l = z - a;$/;"	d
l	asm/ch4_unmap0.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch4_unmap0.asm	/^		l = z - a;$/;"	d
l	asm/ch4_unmap1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch4_unmap1.asm	/^		l = z - a;$/;"	d
l	asm/ch5_exit0.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5_exit0.asm	/^		l = z - a;$/;"	d
l	asm/ch5_exit1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5_exit1.asm	/^		l = z - a;$/;"	d
l	asm/ch5_mergetest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5_mergetest.asm	/^		l = z - a;$/;"	d
l	asm/ch5_ppid.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5_ppid.asm	/^		l = z - a;$/;"	d
l	asm/ch5_setprio.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5_setprio.asm	/^		l = z - a;$/;"	d
l	asm/ch5_spawn0.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5_spawn0.asm	/^		l = z - a;$/;"	d
l	asm/ch5_spawn1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5_spawn1.asm	/^		l = z - a;$/;"	d
l	asm/ch5_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5_usertest.asm	/^		l = z - a;$/;"	d
l	asm/ch5b_exec_simple.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5b_exec_simple.asm	/^		l = z - a;$/;"	d
l	asm/ch5b_exit.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5b_exit.asm	/^		l = z - a;$/;"	d
l	asm/ch5b_forktest0.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5b_forktest0.asm	/^		l = z - a;$/;"	d
l	asm/ch5b_forktest1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5b_forktest1.asm	/^		l = z - a;$/;"	d
l	asm/ch5b_forktest2.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5b_forktest2.asm	/^		l = z - a;$/;"	d
l	asm/ch5b_getpid.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5b_getpid.asm	/^		l = z - a;$/;"	d
l	asm/ch5b_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5b_usertest.asm	/^		l = z - a;$/;"	d
l	asm/ch5t_stride0.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5t_stride0.asm	/^		l = z - a;$/;"	d
l	asm/ch5t_stride1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5t_stride1.asm	/^		l = z - a;$/;"	d
l	asm/ch5t_stride2.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5t_stride2.asm	/^		l = z - a;$/;"	d
l	asm/ch5t_stride3.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5t_stride3.asm	/^		l = z - a;$/;"	d
l	asm/ch5t_stride4.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5t_stride4.asm	/^		l = z - a;$/;"	d
l	asm/ch5t_stride5.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5t_stride5.asm	/^		l = z - a;$/;"	d
l	asm/ch5t_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch5t_usertest.asm	/^		l = z - a;$/;"	d
l	asm/ch6_file0.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6_file0.asm	/^		l = z - a;$/;"	d
l	asm/ch6_file1.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6_file1.asm	/^		l = z - a;$/;"	d
l	asm/ch6_file2.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6_file2.asm	/^		l = z - a;$/;"	d
l	asm/ch6_file3.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6_file3.asm	/^		l = z - a;$/;"	d
l	asm/ch6_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6_usertest.asm	/^		l = z - a;$/;"	d
l	asm/ch6b_args.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6b_args.asm	/^		l = z - a;$/;"	d
l	asm/ch6b_assert.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6b_assert.asm	/^		l = z - a;$/;"	d
l	asm/ch6b_cat.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6b_cat.asm	/^		l = z - a;$/;"	d
l	asm/ch6b_exec.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6b_exec.asm	/^		l = z - a;$/;"	d
l	asm/ch6b_filetest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6b_filetest.asm	/^		l = z - a;$/;"	d
l	asm/ch6b_filetest_simple.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6b_filetest_simple.asm	/^		l = z - a;$/;"	d
l	asm/ch6b_panic.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6b_panic.asm	/^		l = z - a;$/;"	d
l	asm/ch6b_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch6b_usertest.asm	/^		l = z - a;$/;"	d
l	asm/ch7b_pipetest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch7b_pipetest.asm	/^		l = z - a;$/;"	d
l	asm/ch7b_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch7b_usertest.asm	/^		l = z - a;$/;"	d
l	asm/ch8_mut1_deadlock.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8_mut1_deadlock.asm	/^		l = z - a;$/;"	d
l	asm/ch8_sem1_deadlock.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8_sem1_deadlock.asm	/^		l = z - a;$/;"	d
l	asm/ch8_sem2_deadlock.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8_sem2_deadlock.asm	/^		l = z - a;$/;"	d
l	asm/ch8_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8_usertest.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_mpsc_sem.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_mpsc_sem.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_mut_phi_din.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_mut_phi_din.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_mut_race.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_mut_race.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_spin_mut_race.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_spin_mut_race.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_sync_sem.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_sync_sem.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_test_condvar.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_test_condvar.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_threads.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_threads.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_threads_arg.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_threads_arg.asm	/^		l = z - a;$/;"	d
l	asm/ch8b_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/ch8b_usertest.asm	/^		l = z - a;$/;"	d
l	asm/usershell.asm	/^			l = strnlen(a, 200);$/;"	d
l	asm/usershell.asm	/^		l = z - a;$/;"	d
l	build/asm/__ch2_bad_address.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/__ch2_bad_address.asm	/^		l = z - a;$/;"	d
l	build/asm/__ch2_bad_instruction.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/__ch2_bad_instruction.asm	/^		l = z - a;$/;"	d
l	build/asm/__ch2_bad_register.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/__ch2_bad_register.asm	/^		l = z - a;$/;"	d
l	build/asm/ch2b_exit.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch2b_exit.asm	/^		l = z - a;$/;"	d
l	build/asm/ch2b_hello_world.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch2b_hello_world.asm	/^		l = z - a;$/;"	d
l	build/asm/ch2b_power.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch2b_power.asm	/^		l = z - a;$/;"	d
l	build/asm/ch3_taskinfo.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch3_taskinfo.asm	/^		l = z - a;$/;"	d
l	build/asm/ch3b_sleep.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch3b_sleep.asm	/^		l = z - a;$/;"	d
l	build/asm/ch3b_sleep1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch3b_sleep1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch3b_yield0.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch3b_yield0.asm	/^		l = z - a;$/;"	d
l	build/asm/ch3b_yield1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch3b_yield1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch3b_yield2.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch3b_yield2.asm	/^		l = z - a;$/;"	d
l	build/asm/ch4_mmap0.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch4_mmap0.asm	/^		l = z - a;$/;"	d
l	build/asm/ch4_mmap1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch4_mmap1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch4_mmap2.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch4_mmap2.asm	/^		l = z - a;$/;"	d
l	build/asm/ch4_mmap3.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch4_mmap3.asm	/^		l = z - a;$/;"	d
l	build/asm/ch4_unmap0.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch4_unmap0.asm	/^		l = z - a;$/;"	d
l	build/asm/ch4_unmap1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch4_unmap1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5_exit0.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5_exit0.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5_exit1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5_exit1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5_mergetest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5_mergetest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5_ppid.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5_ppid.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5_setprio.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5_setprio.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5_spawn0.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5_spawn0.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5_spawn1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5_spawn1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5_usertest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5b_exec_simple.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5b_exec_simple.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5b_exit.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5b_exit.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5b_forktest0.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5b_forktest0.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5b_forktest1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5b_forktest1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5b_forktest2.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5b_forktest2.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5b_getpid.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5b_getpid.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5b_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5b_usertest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5t_stride0.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5t_stride0.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5t_stride1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5t_stride1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5t_stride2.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5t_stride2.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5t_stride3.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5t_stride3.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5t_stride4.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5t_stride4.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5t_stride5.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5t_stride5.asm	/^		l = z - a;$/;"	d
l	build/asm/ch5t_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch5t_usertest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6_file0.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6_file0.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6_file1.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6_file1.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6_file2.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6_file2.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6_file3.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6_file3.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6_usertest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6b_args.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6b_args.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6b_assert.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6b_assert.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6b_cat.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6b_cat.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6b_exec.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6b_exec.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6b_filetest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6b_filetest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6b_filetest_simple.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6b_filetest_simple.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6b_panic.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6b_panic.asm	/^		l = z - a;$/;"	d
l	build/asm/ch6b_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch6b_usertest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch7b_pipetest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch7b_pipetest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch7b_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch7b_usertest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8_mut1_deadlock.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8_mut1_deadlock.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8_sem1_deadlock.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8_sem1_deadlock.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8_sem2_deadlock.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8_sem2_deadlock.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8_usertest.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_mpsc_sem.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_mpsc_sem.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_mut_phi_din.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_mut_phi_din.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_mut_race.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_mut_race.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_spin_mut_race.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_spin_mut_race.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_sync_sem.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_sync_sem.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_test_condvar.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_test_condvar.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_threads.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_threads.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_threads_arg.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_threads_arg.asm	/^		l = z - a;$/;"	d
l	build/asm/ch8b_usertest.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/ch8b_usertest.asm	/^		l = z - a;$/;"	d
l	build/asm/usershell.asm	/^			l = strnlen(a, 200);$/;"	d
l	build/asm/usershell.asm	/^		l = z - a;$/;"	d
last	asm/ch2b_power.asm	/^		last = pow[index];$/;"	d
last	build/asm/ch2b_power.asm	/^		last = pow[index];$/;"	d
len	asm/__ch2_bad_address.asm	/^			len = __fflush();$/;"	d
len	asm/__ch2_bad_address.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/__ch2_bad_instruction.asm	/^			len = __fflush();$/;"	d
len	asm/__ch2_bad_instruction.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/__ch2_bad_register.asm	/^			len = __fflush();$/;"	d
len	asm/__ch2_bad_register.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch2b_exit.asm	/^			len = __fflush();$/;"	d
len	asm/ch2b_exit.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch2b_hello_world.asm	/^			len = __fflush();$/;"	d
len	asm/ch2b_hello_world.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch2b_power.asm	/^			len = __fflush();$/;"	d
len	asm/ch2b_power.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch3_taskinfo.asm	/^			len = __fflush();$/;"	d
len	asm/ch3_taskinfo.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch3b_sleep.asm	/^			len = __fflush();$/;"	d
len	asm/ch3b_sleep.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch3b_sleep1.asm	/^			len = __fflush();$/;"	d
len	asm/ch3b_sleep1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch3b_yield0.asm	/^			len = __fflush();$/;"	d
len	asm/ch3b_yield0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch3b_yield1.asm	/^			len = __fflush();$/;"	d
len	asm/ch3b_yield1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch3b_yield2.asm	/^			len = __fflush();$/;"	d
len	asm/ch3b_yield2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch4_mmap0.asm	/^			len = __fflush();$/;"	d
len	asm/ch4_mmap0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch4_mmap1.asm	/^			len = __fflush();$/;"	d
len	asm/ch4_mmap1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch4_mmap2.asm	/^			len = __fflush();$/;"	d
len	asm/ch4_mmap2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch4_mmap3.asm	/^			len = __fflush();$/;"	d
len	asm/ch4_mmap3.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch4_unmap0.asm	/^			len = __fflush();$/;"	d
len	asm/ch4_unmap0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch4_unmap1.asm	/^			len = __fflush();$/;"	d
len	asm/ch4_unmap1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5_exit0.asm	/^			len = __fflush();$/;"	d
len	asm/ch5_exit0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5_exit1.asm	/^			len = __fflush();$/;"	d
len	asm/ch5_exit1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5_mergetest.asm	/^			len = __fflush();$/;"	d
len	asm/ch5_mergetest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5_ppid.asm	/^			len = __fflush();$/;"	d
len	asm/ch5_ppid.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5_setprio.asm	/^			len = __fflush();$/;"	d
len	asm/ch5_setprio.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5_spawn0.asm	/^			len = __fflush();$/;"	d
len	asm/ch5_spawn0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5_spawn1.asm	/^			len = __fflush();$/;"	d
len	asm/ch5_spawn1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5_usertest.asm	/^			len = __fflush();$/;"	d
len	asm/ch5_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5b_exec_simple.asm	/^			len = __fflush();$/;"	d
len	asm/ch5b_exec_simple.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5b_exit.asm	/^			len = __fflush();$/;"	d
len	asm/ch5b_exit.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5b_forktest0.asm	/^			len = __fflush();$/;"	d
len	asm/ch5b_forktest0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5b_forktest1.asm	/^			len = __fflush();$/;"	d
len	asm/ch5b_forktest1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5b_forktest2.asm	/^			len = __fflush();$/;"	d
len	asm/ch5b_forktest2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5b_getpid.asm	/^			len = __fflush();$/;"	d
len	asm/ch5b_getpid.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5b_usertest.asm	/^			len = __fflush();$/;"	d
len	asm/ch5b_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5t_stride0.asm	/^			len = __fflush();$/;"	d
len	asm/ch5t_stride0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5t_stride1.asm	/^			len = __fflush();$/;"	d
len	asm/ch5t_stride1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5t_stride2.asm	/^			len = __fflush();$/;"	d
len	asm/ch5t_stride2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5t_stride3.asm	/^			len = __fflush();$/;"	d
len	asm/ch5t_stride3.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5t_stride4.asm	/^			len = __fflush();$/;"	d
len	asm/ch5t_stride4.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5t_stride5.asm	/^			len = __fflush();$/;"	d
len	asm/ch5t_stride5.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch5t_usertest.asm	/^			len = __fflush();$/;"	d
len	asm/ch5t_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6_file0.asm	/^			len = __fflush();$/;"	d
len	asm/ch6_file0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6_file1.asm	/^			len = __fflush();$/;"	d
len	asm/ch6_file1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6_file2.asm	/^			len = __fflush();$/;"	d
len	asm/ch6_file2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6_file3.asm	/^			len = __fflush();$/;"	d
len	asm/ch6_file3.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6_usertest.asm	/^			len = __fflush();$/;"	d
len	asm/ch6_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6b_args.asm	/^			len = __fflush();$/;"	d
len	asm/ch6b_args.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6b_assert.asm	/^			len = __fflush();$/;"	d
len	asm/ch6b_assert.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6b_cat.asm	/^			len = __fflush();$/;"	d
len	asm/ch6b_cat.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6b_exec.asm	/^			len = __fflush();$/;"	d
len	asm/ch6b_exec.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6b_filetest.asm	/^			len = __fflush();$/;"	d
len	asm/ch6b_filetest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6b_filetest_simple.asm	/^			len = __fflush();$/;"	d
len	asm/ch6b_filetest_simple.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6b_panic.asm	/^			len = __fflush();$/;"	d
len	asm/ch6b_panic.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch6b_usertest.asm	/^			len = __fflush();$/;"	d
len	asm/ch6b_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch7b_pipetest.asm	/^			len = __fflush();$/;"	d
len	asm/ch7b_pipetest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch7b_usertest.asm	/^			len = __fflush();$/;"	d
len	asm/ch7b_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8_mut1_deadlock.asm	/^			len = __fflush();$/;"	d
len	asm/ch8_mut1_deadlock.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8_sem1_deadlock.asm	/^			len = __fflush();$/;"	d
len	asm/ch8_sem1_deadlock.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8_sem2_deadlock.asm	/^			len = __fflush();$/;"	d
len	asm/ch8_sem2_deadlock.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8_usertest.asm	/^			len = __fflush();$/;"	d
len	asm/ch8_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_mpsc_sem.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_mpsc_sem.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_mut_phi_din.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_mut_phi_din.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_mut_race.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_mut_race.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_spin_mut_race.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_spin_mut_race.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_sync_sem.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_sync_sem.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_test_condvar.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_test_condvar.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_threads.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_threads.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_threads_arg.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_threads_arg.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/ch8b_usertest.asm	/^			len = __fflush();$/;"	d
len	asm/ch8b_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	asm/usershell.asm	/^			len = __fflush();$/;"	d
len	asm/usershell.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/__ch2_bad_address.asm	/^			len = __fflush();$/;"	d
len	build/asm/__ch2_bad_address.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/__ch2_bad_instruction.asm	/^			len = __fflush();$/;"	d
len	build/asm/__ch2_bad_instruction.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/__ch2_bad_register.asm	/^			len = __fflush();$/;"	d
len	build/asm/__ch2_bad_register.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch2b_exit.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch2b_exit.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch2b_hello_world.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch2b_hello_world.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch2b_power.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch2b_power.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch3_taskinfo.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch3_taskinfo.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch3b_sleep.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch3b_sleep.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch3b_sleep1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch3b_sleep1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch3b_yield0.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch3b_yield0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch3b_yield1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch3b_yield1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch3b_yield2.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch3b_yield2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch4_mmap0.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch4_mmap0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch4_mmap1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch4_mmap1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch4_mmap2.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch4_mmap2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch4_mmap3.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch4_mmap3.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch4_unmap0.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch4_unmap0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch4_unmap1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch4_unmap1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5_exit0.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5_exit0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5_exit1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5_exit1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5_mergetest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5_mergetest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5_ppid.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5_ppid.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5_setprio.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5_setprio.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5_spawn0.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5_spawn0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5_spawn1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5_spawn1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5_usertest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5b_exec_simple.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5b_exec_simple.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5b_exit.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5b_exit.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5b_forktest0.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5b_forktest0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5b_forktest1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5b_forktest1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5b_forktest2.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5b_forktest2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5b_getpid.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5b_getpid.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5b_usertest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5b_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5t_stride0.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5t_stride0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5t_stride1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5t_stride1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5t_stride2.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5t_stride2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5t_stride3.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5t_stride3.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5t_stride4.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5t_stride4.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5t_stride5.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5t_stride5.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch5t_usertest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch5t_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6_file0.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6_file0.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6_file1.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6_file1.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6_file2.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6_file2.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6_file3.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6_file3.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6_usertest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6b_args.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6b_args.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6b_assert.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6b_assert.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6b_cat.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6b_cat.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6b_exec.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6b_exec.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6b_filetest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6b_filetest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6b_filetest_simple.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6b_filetest_simple.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6b_panic.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6b_panic.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch6b_usertest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch6b_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch7b_pipetest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch7b_pipetest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch7b_usertest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch7b_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8_mut1_deadlock.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8_mut1_deadlock.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8_sem1_deadlock.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8_sem1_deadlock.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8_sem2_deadlock.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8_sem2_deadlock.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8_usertest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_mpsc_sem.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_mpsc_sem.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_mut_phi_din.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_mut_phi_din.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_mut_race.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_mut_race.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_spin_mut_race.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_spin_mut_race.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_sync_sem.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_sync_sem.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_test_condvar.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_test_condvar.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_threads.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_threads.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_threads_arg.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_threads_arg.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/ch8b_usertest.asm	/^			len = __fflush();$/;"	d
len	build/asm/ch8b_usertest.asm	/^		len = out_unlocked(s, l);$/;"	d
len	build/asm/usershell.asm	/^			len = __fflush();$/;"	d
len	build/asm/usershell.asm	/^		len = out_unlocked(s, l);$/;"	d
line	src/usershell.c	/^char line[MAX_STR_LEN];$/;"	v
link	lib/syscall.c	/^int link(char *old_path, char *new_path)$/;"	f
mailread	lib/syscall.c	/^int mailread(void *buf, int len)$/;"	f
mailwrite	lib/syscall.c	/^int mailwrite(int pid, void *buf, int len)$/;"	f
main	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	src/__ch2_bad_address.c	/^int main()$/;"	f
main	src/__ch2_bad_instruction.c	/^int main()$/;"	f
main	src/__ch2_bad_register.c	/^int main()$/;"	f
main	src/ch2b_exit.c	/^int main()$/;"	f
main	src/ch2b_hello_world.c	/^int main()$/;"	f
main	src/ch2b_power.c	/^int main()$/;"	f
main	src/ch3_taskinfo.c	/^int main()$/;"	f
main	src/ch3b_sleep.c	/^int main()$/;"	f
main	src/ch3b_sleep1.c	/^int main()$/;"	f
main	src/ch3b_yield0.c	/^int main()$/;"	f
main	src/ch3b_yield1.c	/^int main()$/;"	f
main	src/ch3b_yield2.c	/^int main()$/;"	f
main	src/ch4_mmap0.c	/^int main()$/;"	f
main	src/ch4_mmap1.c	/^int main()$/;"	f
main	src/ch4_mmap2.c	/^int main()$/;"	f
main	src/ch4_mmap3.c	/^int main()$/;"	f
main	src/ch4_unmap0.c	/^int main()$/;"	f
main	src/ch4_unmap1.c	/^int main()$/;"	f
main	src/ch5_exit0.c	/^int main()$/;"	f
main	src/ch5_exit1.c	/^int main()$/;"	f
main	src/ch5_mergetest.c	/^int main()$/;"	f
main	src/ch5_ppid.c	/^int main()$/;"	f
main	src/ch5_setprio.c	/^int main()$/;"	f
main	src/ch5_spawn0.c	/^int main()$/;"	f
main	src/ch5_spawn1.c	/^int main()$/;"	f
main	src/ch5_usertest.c	/^int main()$/;"	f
main	src/ch5b_exec_simple.c	/^int main()$/;"	f
main	src/ch5b_exit.c	/^int main()$/;"	f
main	src/ch5b_forktest0.c	/^int main()$/;"	f
main	src/ch5b_forktest1.c	/^int main()$/;"	f
main	src/ch5b_forktest2.c	/^int main()$/;"	f
main	src/ch5b_getpid.c	/^int main()$/;"	f
main	src/ch5b_usertest.c	/^int main()$/;"	f
main	src/ch5t_stride0.c	/^int main()$/;"	f
main	src/ch5t_stride1.c	/^int main()$/;"	f
main	src/ch5t_stride2.c	/^int main()$/;"	f
main	src/ch5t_stride3.c	/^int main()$/;"	f
main	src/ch5t_stride4.c	/^int main()$/;"	f
main	src/ch5t_stride5.c	/^int main()$/;"	f
main	src/ch5t_usertest.c	/^int main()$/;"	f
main	src/ch6_file0.c	/^int main()$/;"	f
main	src/ch6_file1.c	/^int main()$/;"	f
main	src/ch6_file2.c	/^int main()$/;"	f
main	src/ch6_file3.c	/^int main()$/;"	f
main	src/ch6_usertest.c	/^int main()$/;"	f
main	src/ch6b_args.c	/^int main(int argc, char **argv)$/;"	f
main	src/ch6b_assert.c	/^int main()$/;"	f
main	src/ch6b_cat.c	/^int main()$/;"	f
main	src/ch6b_exec.c	/^int main()$/;"	f
main	src/ch6b_filetest.c	/^int main()$/;"	f
main	src/ch6b_filetest_simple.c	/^int main()$/;"	f
main	src/ch6b_panic.c	/^int main()$/;"	f
main	src/ch6b_usertest.c	/^int main()$/;"	f
main	src/ch7b_pipetest.c	/^int main()$/;"	f
main	src/ch7b_sigtest.c	/^int main()$/;"	f
main	src/ch7b_usertest.c	/^int main()$/;"	f
main	src/ch8_mut1_deadlock.c	/^int main()$/;"	f
main	src/ch8_sem1_deadlock.c	/^int main()$/;"	f
main	src/ch8_sem2_deadlock.c	/^int main()$/;"	f
main	src/ch8_usertest.c	/^int main()$/;"	f
main	src/ch8b_mpsc_sem.c	/^int main()$/;"	f
main	src/ch8b_mut_phi_din.c	/^int main()$/;"	f
main	src/ch8b_mut_race.c	/^int main()$/;"	f
main	src/ch8b_spin_mut_race.c	/^int main()$/;"	f
main	src/ch8b_sync_sem.c	/^int main()$/;"	f
main	src/ch8b_test_condvar.c	/^int main()$/;"	f
main	src/ch8b_threads.c	/^int main(void)$/;"	f
main	src/ch8b_threads_arg.c	/^int main(void)$/;"	f
main	src/ch8b_usertest.c	/^int main()$/;"	f
main	src/usershell.c	/^int main()$/;"	f
max_child	src/ch5b_exit.c	/^const int max_child = 32;$/;"	v
memchr	lib/string.c	/^void *memchr(const void *src, int c, size_t n)$/;"	f
memset	lib/string.c	/^void *memset(void *dest, int c, size_t n)$/;"	f
mmap	lib/syscall.c	/^int mmap(void *start, unsigned long long len, int prot, int flag, int sd)$/;"	f
mode	include/stddef.h	/^	uint32 mode; \/\/ 文件类型$/;"	m	struct:__anon2
munmap	lib/syscall.c	/^int munmap(void *start, unsigned long long len)$/;"	f
mutex_blocking_create	lib/syscall.c	/^int mutex_blocking_create()$/;"	f
mutex_create	lib/syscall.c	/^int mutex_create()$/;"	f
mutex_id	src/ch8b_mut_race.c	/^int mutex_id;$/;"	v
mutex_id	src/ch8b_spin_mut_race.c	/^int mutex_id = 0;$/;"	v
mutex_id	src/ch8b_test_condvar.c	/^int mutex_id;$/;"	v
mutex_lock	lib/syscall.c	/^int mutex_lock(int mid)$/;"	f
mutex_unlock	lib/syscall.c	/^int mutex_unlock(int mid)$/;"	f
n	asm/__ch2_bad_address.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/__ch2_bad_instruction.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/__ch2_bad_register.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch2b_exit.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch2b_hello_world.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch2b_power.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch3_taskinfo.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch3b_sleep.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch3b_sleep1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch3b_yield0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch3b_yield1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch3b_yield2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch4_mmap0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch4_mmap1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch4_mmap2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch4_mmap3.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch4_unmap0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch4_unmap1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5_exit0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5_exit1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5_mergetest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5_ppid.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5_setprio.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5_spawn0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5_spawn1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5b_exec_simple.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5b_exit.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5b_forktest0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5b_forktest1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5b_forktest2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5b_getpid.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5b_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5t_stride0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5t_stride1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5t_stride2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5t_stride3.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5t_stride4.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5t_stride5.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch5t_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6_file0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6_file1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6_file2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6_file3.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6b_args.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6b_assert.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6b_cat.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6b_exec.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6b_filetest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6b_filetest_simple.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6b_panic.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch6b_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch7b_pipetest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch7b_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8_mut1_deadlock.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8_sem1_deadlock.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8_sem2_deadlock.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_mpsc_sem.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_mut_phi_din.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_mut_race.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_spin_mut_race.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_sync_sem.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_test_condvar.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_threads.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_threads_arg.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/ch8b_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	asm/usershell.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/__ch2_bad_address.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/__ch2_bad_instruction.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/__ch2_bad_register.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch2b_exit.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch2b_hello_world.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch2b_power.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch3_taskinfo.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch3b_sleep.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch3b_sleep1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch3b_yield0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch3b_yield1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch3b_yield2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch4_mmap0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch4_mmap1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch4_mmap2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch4_mmap3.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch4_unmap0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch4_unmap1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5_exit0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5_exit1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5_mergetest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5_ppid.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5_setprio.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5_spawn0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5_spawn1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5b_exec_simple.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5b_exit.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5b_forktest0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5b_forktest1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5b_forktest2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5b_getpid.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5b_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5t_stride0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5t_stride1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5t_stride2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5t_stride3.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5t_stride4.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5t_stride5.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch5t_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6_file0.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6_file1.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6_file2.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6_file3.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6b_args.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6b_assert.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6b_cat.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6b_exec.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6b_filetest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6b_filetest_simple.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6b_panic.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch6b_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch7b_pipetest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch7b_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8_mut1_deadlock.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8_sem1_deadlock.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8_sem2_deadlock.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_mpsc_sem.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_mut_phi_din.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_mut_race.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_spin_mut_race.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_sync_sem.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_test_condvar.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_threads.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_threads_arg.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/ch8b_usertest.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
n	build/asm/usershell.asm	/^		n = 10 * n - (*s++ - '0');$/;"	d
neg	asm/__ch2_bad_address.asm	/^		neg = 1;$/;"	d
neg	asm/__ch2_bad_instruction.asm	/^		neg = 1;$/;"	d
neg	asm/__ch2_bad_register.asm	/^		neg = 1;$/;"	d
neg	asm/ch2b_exit.asm	/^		neg = 1;$/;"	d
neg	asm/ch2b_hello_world.asm	/^		neg = 1;$/;"	d
neg	asm/ch2b_power.asm	/^		neg = 1;$/;"	d
neg	asm/ch3_taskinfo.asm	/^		neg = 1;$/;"	d
neg	asm/ch3b_sleep.asm	/^		neg = 1;$/;"	d
neg	asm/ch3b_sleep1.asm	/^		neg = 1;$/;"	d
neg	asm/ch3b_yield0.asm	/^		neg = 1;$/;"	d
neg	asm/ch3b_yield1.asm	/^		neg = 1;$/;"	d
neg	asm/ch3b_yield2.asm	/^		neg = 1;$/;"	d
neg	asm/ch4_mmap0.asm	/^		neg = 1;$/;"	d
neg	asm/ch4_mmap1.asm	/^		neg = 1;$/;"	d
neg	asm/ch4_mmap2.asm	/^		neg = 1;$/;"	d
neg	asm/ch4_mmap3.asm	/^		neg = 1;$/;"	d
neg	asm/ch4_unmap0.asm	/^		neg = 1;$/;"	d
neg	asm/ch4_unmap1.asm	/^		neg = 1;$/;"	d
neg	asm/ch5_exit0.asm	/^		neg = 1;$/;"	d
neg	asm/ch5_exit1.asm	/^		neg = 1;$/;"	d
neg	asm/ch5_mergetest.asm	/^		neg = 1;$/;"	d
neg	asm/ch5_ppid.asm	/^		neg = 1;$/;"	d
neg	asm/ch5_setprio.asm	/^		neg = 1;$/;"	d
neg	asm/ch5_spawn0.asm	/^		neg = 1;$/;"	d
neg	asm/ch5_spawn1.asm	/^		neg = 1;$/;"	d
neg	asm/ch5_usertest.asm	/^		neg = 1;$/;"	d
neg	asm/ch5b_exec_simple.asm	/^		neg = 1;$/;"	d
neg	asm/ch5b_exit.asm	/^		neg = 1;$/;"	d
neg	asm/ch5b_forktest0.asm	/^		neg = 1;$/;"	d
neg	asm/ch5b_forktest1.asm	/^		neg = 1;$/;"	d
neg	asm/ch5b_forktest2.asm	/^		neg = 1;$/;"	d
neg	asm/ch5b_getpid.asm	/^		neg = 1;$/;"	d
neg	asm/ch5b_usertest.asm	/^		neg = 1;$/;"	d
neg	asm/ch5t_stride0.asm	/^		neg = 1;$/;"	d
neg	asm/ch5t_stride1.asm	/^		neg = 1;$/;"	d
neg	asm/ch5t_stride2.asm	/^		neg = 1;$/;"	d
neg	asm/ch5t_stride3.asm	/^		neg = 1;$/;"	d
neg	asm/ch5t_stride4.asm	/^		neg = 1;$/;"	d
neg	asm/ch5t_stride5.asm	/^		neg = 1;$/;"	d
neg	asm/ch5t_usertest.asm	/^		neg = 1;$/;"	d
neg	asm/ch6_file0.asm	/^		neg = 1;$/;"	d
neg	asm/ch6_file1.asm	/^		neg = 1;$/;"	d
neg	asm/ch6_file2.asm	/^		neg = 1;$/;"	d
neg	asm/ch6_file3.asm	/^		neg = 1;$/;"	d
neg	asm/ch6_usertest.asm	/^		neg = 1;$/;"	d
neg	asm/ch6b_args.asm	/^		neg = 1;$/;"	d
neg	asm/ch6b_assert.asm	/^		neg = 1;$/;"	d
neg	asm/ch6b_cat.asm	/^		neg = 1;$/;"	d
neg	asm/ch6b_exec.asm	/^		neg = 1;$/;"	d
neg	asm/ch6b_filetest.asm	/^		neg = 1;$/;"	d
neg	asm/ch6b_filetest_simple.asm	/^		neg = 1;$/;"	d
neg	asm/ch6b_panic.asm	/^		neg = 1;$/;"	d
neg	asm/ch6b_usertest.asm	/^		neg = 1;$/;"	d
neg	asm/ch7b_pipetest.asm	/^		neg = 1;$/;"	d
neg	asm/ch7b_usertest.asm	/^		neg = 1;$/;"	d
neg	asm/ch8_mut1_deadlock.asm	/^		neg = 1;$/;"	d
neg	asm/ch8_sem1_deadlock.asm	/^		neg = 1;$/;"	d
neg	asm/ch8_sem2_deadlock.asm	/^		neg = 1;$/;"	d
neg	asm/ch8_usertest.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_mpsc_sem.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_mut_phi_din.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_mut_race.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_spin_mut_race.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_sync_sem.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_test_condvar.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_threads.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_threads_arg.asm	/^		neg = 1;$/;"	d
neg	asm/ch8b_usertest.asm	/^		neg = 1;$/;"	d
neg	asm/usershell.asm	/^		neg = 1;$/;"	d
neg	build/asm/__ch2_bad_address.asm	/^		neg = 1;$/;"	d
neg	build/asm/__ch2_bad_instruction.asm	/^		neg = 1;$/;"	d
neg	build/asm/__ch2_bad_register.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch2b_exit.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch2b_hello_world.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch2b_power.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch3_taskinfo.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch3b_sleep.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch3b_sleep1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch3b_yield0.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch3b_yield1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch3b_yield2.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch4_mmap0.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch4_mmap1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch4_mmap2.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch4_mmap3.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch4_unmap0.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch4_unmap1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5_exit0.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5_exit1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5_mergetest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5_ppid.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5_setprio.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5_spawn0.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5_spawn1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5_usertest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5b_exec_simple.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5b_exit.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5b_forktest0.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5b_forktest1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5b_forktest2.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5b_getpid.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5b_usertest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5t_stride0.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5t_stride1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5t_stride2.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5t_stride3.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5t_stride4.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5t_stride5.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch5t_usertest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6_file0.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6_file1.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6_file2.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6_file3.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6_usertest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6b_args.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6b_assert.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6b_cat.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6b_exec.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6b_filetest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6b_filetest_simple.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6b_panic.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch6b_usertest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch7b_pipetest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch7b_usertest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8_mut1_deadlock.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8_sem1_deadlock.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8_sem2_deadlock.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8_usertest.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_mpsc_sem.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_mut_phi_din.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_mut_race.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_spin_mut_race.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_sync_sem.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_test_condvar.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_threads.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_threads_arg.asm	/^		neg = 1;$/;"	d
neg	build/asm/ch8b_usertest.asm	/^		neg = 1;$/;"	d
neg	build/asm/usershell.asm	/^		neg = 1;$/;"	d
nlink	include/stddef.h	/^	uint32 nlink; \/\/ 硬链接数量，初始为1$/;"	m	struct:__anon2
null	lib/syscall.c	/^static char **null = { 0 };$/;"	v	file:
number_per_producer	src/ch8b_mpsc_sem.c	9;"	d	file:
open	lib/syscall.c	/^int open(const char *path, int flags)$/;"	f
out	lib/stdio.c	/^static int out(int f, const char *s, size_t l)$/;"	f	file:
out_dir	Makefile	/^out_dir := target$/;"	m
out_unlocked	lib/stdio.c	/^static int out_unlocked(const char *s, size_t l)$/;"	f	file:
pad	include/stddef.h	/^	uint64 pad[7]; \/\/ 无需考虑，为了兼容性设计$/;"	m	struct:__anon2
panic	include/stdlib.h	13;"	d
parse_argv	src/usershell.c	/^void parse_argv()$/;"	f
per_thread	src/ch8b_mut_race.c	10;"	d	file:
per_thread	src/ch8b_spin_mut_race.c	10;"	d	file:
philosopher_dining	src/ch8b_mut_phi_din.c	/^void philosopher_dining(long id)$/;"	f
pid	src/ch5t_usertest.c	/^int pid[] = {0, 0, 0, 0, 0, 0};$/;"	v
pid_t	include/stddef.h	/^typedef int pid_t;$/;"	t
pipe	lib/syscall.c	/^int pipe(void *p)$/;"	f
pop	src/usershell.c	/^void pop()$/;"	f
printf	lib/stdio.c	/^void printf(const char *fmt, ...)$/;"	f
printint	lib/stdio.c	/^static void printint(int xx, int base, int sign)$/;"	f	file:
printptr	lib/stdio.c	/^static void printptr(uint64 x)$/;"	f	file:
producer	src/ch8b_mpsc_sem.c	/^void producer(int id)$/;"	f
producers	src/ch8b_mpsc_sem.c	8;"	d	file:
push	src/usershell.c	/^void push(char c)$/;"	f
putchar	lib/stdio.c	/^int putchar(int c)$/;"	f
puts	lib/stdio.c	/^int puts(const char *s)$/;"	f
qnxnto	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
r	asm/__ch2_bad_address.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/__ch2_bad_instruction.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/__ch2_bad_register.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch2b_exit.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch2b_hello_world.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch2b_power.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch3_taskinfo.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch3b_sleep.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch3b_sleep1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch3b_yield0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch3b_yield1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch3b_yield2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch4_mmap0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch4_mmap1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch4_mmap2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch4_mmap3.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch4_unmap0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch4_unmap1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5_exit0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5_exit1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5_mergetest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5_ppid.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5_setprio.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5_spawn0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5_spawn1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5b_exec_simple.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5b_exit.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5b_forktest0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5b_forktest1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5b_forktest2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5b_getpid.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5b_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5t_stride0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5t_stride1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5t_stride2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5t_stride3.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5t_stride4.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5t_stride5.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch5t_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6_file0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6_file1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6_file2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6_file3.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6b_args.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6b_assert.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6b_cat.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6b_exec.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6b_filetest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6b_filetest_simple.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6b_panic.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch6b_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch7b_pipetest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch7b_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8_mut1_deadlock.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8_sem1_deadlock.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8_sem2_deadlock.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_mpsc_sem.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_mut_phi_din.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_mut_race.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_spin_mut_race.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_sync_sem.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_test_condvar.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_threads.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_threads_arg.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/ch8b_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	asm/usershell.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/__ch2_bad_address.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/__ch2_bad_instruction.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/__ch2_bad_register.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch2b_exit.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch2b_hello_world.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch2b_power.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch3_taskinfo.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch3b_sleep.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch3b_sleep1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch3b_yield0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch3b_yield1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch3b_yield2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch4_mmap0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch4_mmap1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch4_mmap2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch4_mmap3.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch4_unmap0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch4_unmap1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5_exit0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5_exit1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5_mergetest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5_ppid.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5_setprio.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5_spawn0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5_spawn1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5b_exec_simple.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5b_exit.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5b_forktest0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5b_forktest1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5b_forktest2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5b_getpid.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5b_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5t_stride0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5t_stride1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5t_stride2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5t_stride3.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5t_stride4.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5t_stride5.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch5t_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6_file0.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6_file1.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6_file2.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6_file3.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6b_args.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6b_assert.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6b_cat.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6b_exec.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6b_filetest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6b_filetest_simple.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6b_panic.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch6b_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch7b_pipetest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch7b_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8_mut1_deadlock.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8_sem1_deadlock.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8_sem2_deadlock.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_mpsc_sem.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_mut_phi_din.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_mut_race.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_spin_mut_race.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_sync_sem.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_test_condvar.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_threads.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_threads_arg.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/ch8b_usertest.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
r	build/asm/usershell.asm	/^	r = -(out(stdout, s, strlen(s)) < 0 || putchar('\\n') < 0);$/;"	d
rand	lib/stdlib.c	/^uint32 rand()$/;"	f
read	lib/syscall.c	/^ssize_t read(int fd, void *buf, size_t len)$/;"	f
repeat	src/ch6_file3.c	/^void repeat(char *target, const char *template, int times)$/;"	f
request	src/ch8_sem1_deadlock.c	/^const int request[THREAD_N] = { 1, 3, 2 };$/;"	v
request	src/ch8_sem2_deadlock.c	/^int request[THREAD_N] = { 1, -1, 2, -1 };$/;"	v
res_num	src/ch8_sem1_deadlock.c	/^const int res_num[RES_TYPE] = { 1, 2, 1 };$/;"	v
res_num	src/ch8_sem2_deadlock.c	/^const int res_num[RES_TYPE] = { 2, 2 };$/;"	v
ret	asm/__ch2_bad_address.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/__ch2_bad_instruction.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/__ch2_bad_register.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch2b_exit.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch2b_hello_world.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch2b_power.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch3_taskinfo.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch3b_sleep.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch3b_sleep1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch3b_yield0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch3b_yield1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch3b_yield2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch4_mmap0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch4_mmap1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch4_mmap2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch4_mmap3.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch4_unmap0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch4_unmap1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5_exit0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5_exit1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5_mergetest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5_ppid.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5_setprio.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5_spawn0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5_spawn1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5b_exec_simple.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5b_exit.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5b_forktest0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5b_forktest1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5b_forktest2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5b_getpid.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5b_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5t_stride0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5t_stride1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5t_stride2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5t_stride3.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5t_stride4.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5t_stride5.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch5t_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6_file0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6_file1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6_file2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6_file3.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6b_args.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6b_assert.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6b_cat.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6b_exec.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6b_filetest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6b_filetest_simple.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6b_panic.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch6b_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch7b_pipetest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch7b_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8_mut1_deadlock.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8_sem1_deadlock.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8_sem2_deadlock.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_mpsc_sem.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_mut_phi_din.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_mut_race.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_spin_mut_race.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_sync_sem.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_test_condvar.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_threads.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_threads_arg.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/ch8b_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	asm/usershell.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/__ch2_bad_address.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/__ch2_bad_instruction.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/__ch2_bad_register.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch2b_exit.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch2b_hello_world.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch2b_power.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch3_taskinfo.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch3b_sleep.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch3b_sleep1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch3b_yield0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch3b_yield1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch3b_yield2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch4_mmap0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch4_mmap1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch4_mmap2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch4_mmap3.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch4_unmap0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch4_unmap1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5_exit0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5_exit1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5_mergetest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5_ppid.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5_setprio.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5_spawn0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5_spawn1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5b_exec_simple.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5b_exit.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5b_forktest0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5b_forktest1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5b_forktest2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5b_getpid.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5b_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5t_stride0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5t_stride1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5t_stride2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5t_stride3.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5t_stride4.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5t_stride5.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch5t_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6_file0.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6_file1.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6_file2.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6_file3.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6b_args.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6b_assert.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6b_cat.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6b_exec.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6b_filetest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6b_filetest_simple.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6b_panic.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch6b_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch7b_pipetest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch7b_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8_mut1_deadlock.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8_sem1_deadlock.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8_sem2_deadlock.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_mpsc_sem.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_mut_phi_din.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_mut_race.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_spin_mut_race.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_sync_sem.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_test_condvar.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_threads.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_threads_arg.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/ch8b_usertest.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret	build/asm/usershell.asm	/^		ret = syscall(SYS_waittid, tid);$/;"	d
ret_code	src/ch8b_threads_arg.c	/^	int ret_code;$/;"	m	struct:thread_arg	file:
return	asm/__ch2_bad_address.asm	/^				return d;$/;"	d
return	asm/__ch2_bad_address.asm	/^	return d;$/;"	d
return	asm/__ch2_bad_instruction.asm	/^				return d;$/;"	d
return	asm/__ch2_bad_instruction.asm	/^	return d;$/;"	d
return	asm/__ch2_bad_register.asm	/^				return d;$/;"	d
return	asm/__ch2_bad_register.asm	/^	return d;$/;"	d
return	asm/ch2b_exit.asm	/^				return d;$/;"	d
return	asm/ch2b_exit.asm	/^	return d;$/;"	d
return	asm/ch2b_hello_world.asm	/^				return d;$/;"	d
return	asm/ch2b_hello_world.asm	/^	return d;$/;"	d
return	asm/ch2b_power.asm	/^				return d;$/;"	d
return	asm/ch2b_power.asm	/^	return d;$/;"	d
return	asm/ch3_taskinfo.asm	/^				return d;$/;"	d
return	asm/ch3_taskinfo.asm	/^	return d;$/;"	d
return	asm/ch3b_sleep.asm	/^				return d;$/;"	d
return	asm/ch3b_sleep.asm	/^	return d;$/;"	d
return	asm/ch3b_sleep1.asm	/^				return d;$/;"	d
return	asm/ch3b_sleep1.asm	/^	return d;$/;"	d
return	asm/ch3b_yield0.asm	/^				return d;$/;"	d
return	asm/ch3b_yield0.asm	/^	return d;$/;"	d
return	asm/ch3b_yield1.asm	/^				return d;$/;"	d
return	asm/ch3b_yield1.asm	/^	return d;$/;"	d
return	asm/ch3b_yield2.asm	/^				return d;$/;"	d
return	asm/ch3b_yield2.asm	/^	return d;$/;"	d
return	asm/ch4_mmap0.asm	/^				return d;$/;"	d
return	asm/ch4_mmap0.asm	/^	return d;$/;"	d
return	asm/ch4_mmap1.asm	/^				return d;$/;"	d
return	asm/ch4_mmap1.asm	/^	return d;$/;"	d
return	asm/ch4_mmap2.asm	/^				return d;$/;"	d
return	asm/ch4_mmap2.asm	/^	return d;$/;"	d
return	asm/ch4_mmap3.asm	/^				return d;$/;"	d
return	asm/ch4_mmap3.asm	/^	return d;$/;"	d
return	asm/ch4_unmap0.asm	/^				return d;$/;"	d
return	asm/ch4_unmap0.asm	/^	return d;$/;"	d
return	asm/ch4_unmap1.asm	/^				return d;$/;"	d
return	asm/ch4_unmap1.asm	/^	return d;$/;"	d
return	asm/ch5_exit0.asm	/^				return d;$/;"	d
return	asm/ch5_exit0.asm	/^	return d;$/;"	d
return	asm/ch5_exit1.asm	/^				return d;$/;"	d
return	asm/ch5_exit1.asm	/^	return d;$/;"	d
return	asm/ch5_mergetest.asm	/^				return d;$/;"	d
return	asm/ch5_mergetest.asm	/^	return d;$/;"	d
return	asm/ch5_ppid.asm	/^				return d;$/;"	d
return	asm/ch5_ppid.asm	/^	return d;$/;"	d
return	asm/ch5_setprio.asm	/^				return d;$/;"	d
return	asm/ch5_setprio.asm	/^	return d;$/;"	d
return	asm/ch5_spawn0.asm	/^				return d;$/;"	d
return	asm/ch5_spawn0.asm	/^	return d;$/;"	d
return	asm/ch5_spawn1.asm	/^				return d;$/;"	d
return	asm/ch5_spawn1.asm	/^	return d;$/;"	d
return	asm/ch5_usertest.asm	/^				return d;$/;"	d
return	asm/ch5_usertest.asm	/^	return d;$/;"	d
return	asm/ch5b_exec_simple.asm	/^				return d;$/;"	d
return	asm/ch5b_exec_simple.asm	/^	return d;$/;"	d
return	asm/ch5b_exit.asm	/^				return d;$/;"	d
return	asm/ch5b_exit.asm	/^	return d;$/;"	d
return	asm/ch5b_forktest0.asm	/^				return d;$/;"	d
return	asm/ch5b_forktest0.asm	/^	return d;$/;"	d
return	asm/ch5b_forktest1.asm	/^				return d;$/;"	d
return	asm/ch5b_forktest1.asm	/^	return d;$/;"	d
return	asm/ch5b_forktest2.asm	/^				return d;$/;"	d
return	asm/ch5b_forktest2.asm	/^	return d;$/;"	d
return	asm/ch5b_getpid.asm	/^				return d;$/;"	d
return	asm/ch5b_getpid.asm	/^	return d;$/;"	d
return	asm/ch5b_usertest.asm	/^				return d;$/;"	d
return	asm/ch5b_usertest.asm	/^	return d;$/;"	d
return	asm/ch5t_stride0.asm	/^				return d;$/;"	d
return	asm/ch5t_stride0.asm	/^	return d;$/;"	d
return	asm/ch5t_stride1.asm	/^				return d;$/;"	d
return	asm/ch5t_stride1.asm	/^	return d;$/;"	d
return	asm/ch5t_stride2.asm	/^				return d;$/;"	d
return	asm/ch5t_stride2.asm	/^	return d;$/;"	d
return	asm/ch5t_stride3.asm	/^				return d;$/;"	d
return	asm/ch5t_stride3.asm	/^	return d;$/;"	d
return	asm/ch5t_stride4.asm	/^				return d;$/;"	d
return	asm/ch5t_stride4.asm	/^	return d;$/;"	d
return	asm/ch5t_stride5.asm	/^				return d;$/;"	d
return	asm/ch5t_stride5.asm	/^	return d;$/;"	d
return	asm/ch5t_usertest.asm	/^				return d;$/;"	d
return	asm/ch5t_usertest.asm	/^	return d;$/;"	d
return	asm/ch6_file0.asm	/^				return d;$/;"	d
return	asm/ch6_file0.asm	/^	return d;$/;"	d
return	asm/ch6_file1.asm	/^				return d;$/;"	d
return	asm/ch6_file1.asm	/^	return d;$/;"	d
return	asm/ch6_file2.asm	/^				return d;$/;"	d
return	asm/ch6_file2.asm	/^	return d;$/;"	d
return	asm/ch6_file3.asm	/^				return d;$/;"	d
return	asm/ch6_file3.asm	/^	return d;$/;"	d
return	asm/ch6_usertest.asm	/^				return d;$/;"	d
return	asm/ch6_usertest.asm	/^	return d;$/;"	d
return	asm/ch6b_args.asm	/^				return d;$/;"	d
return	asm/ch6b_args.asm	/^	return d;$/;"	d
return	asm/ch6b_assert.asm	/^				return d;$/;"	d
return	asm/ch6b_assert.asm	/^	return d;$/;"	d
return	asm/ch6b_cat.asm	/^				return d;$/;"	d
return	asm/ch6b_cat.asm	/^	return d;$/;"	d
return	asm/ch6b_exec.asm	/^				return d;$/;"	d
return	asm/ch6b_exec.asm	/^	return d;$/;"	d
return	asm/ch6b_filetest.asm	/^				return d;$/;"	d
return	asm/ch6b_filetest.asm	/^	return d;$/;"	d
return	asm/ch6b_filetest_simple.asm	/^				return d;$/;"	d
return	asm/ch6b_filetest_simple.asm	/^	return d;$/;"	d
return	asm/ch6b_panic.asm	/^				return d;$/;"	d
return	asm/ch6b_panic.asm	/^	return d;$/;"	d
return	asm/ch6b_usertest.asm	/^				return d;$/;"	d
return	asm/ch6b_usertest.asm	/^	return d;$/;"	d
return	asm/ch7b_pipetest.asm	/^				return d;$/;"	d
return	asm/ch7b_pipetest.asm	/^	return d;$/;"	d
return	asm/ch7b_usertest.asm	/^				return d;$/;"	d
return	asm/ch7b_usertest.asm	/^	return d;$/;"	d
return	asm/ch8_mut1_deadlock.asm	/^				return d;$/;"	d
return	asm/ch8_mut1_deadlock.asm	/^	return d;$/;"	d
return	asm/ch8_sem1_deadlock.asm	/^				return d;$/;"	d
return	asm/ch8_sem1_deadlock.asm	/^	return d;$/;"	d
return	asm/ch8_sem2_deadlock.asm	/^				return d;$/;"	d
return	asm/ch8_sem2_deadlock.asm	/^	return d;$/;"	d
return	asm/ch8_usertest.asm	/^				return d;$/;"	d
return	asm/ch8_usertest.asm	/^	return d;$/;"	d
return	asm/ch8b_mpsc_sem.asm	/^				return d;$/;"	d
return	asm/ch8b_mpsc_sem.asm	/^	return d;$/;"	d
return	asm/ch8b_mut_phi_din.asm	/^				return d;$/;"	d
return	asm/ch8b_mut_phi_din.asm	/^	return d;$/;"	d
return	asm/ch8b_mut_race.asm	/^				return d;$/;"	d
return	asm/ch8b_mut_race.asm	/^	return d;$/;"	d
return	asm/ch8b_spin_mut_race.asm	/^				return d;$/;"	d
return	asm/ch8b_spin_mut_race.asm	/^	return d;$/;"	d
return	asm/ch8b_sync_sem.asm	/^				return d;$/;"	d
return	asm/ch8b_sync_sem.asm	/^	return d;$/;"	d
return	asm/ch8b_test_condvar.asm	/^				return d;$/;"	d
return	asm/ch8b_test_condvar.asm	/^	return d;$/;"	d
return	asm/ch8b_threads.asm	/^				return d;$/;"	d
return	asm/ch8b_threads.asm	/^	return d;$/;"	d
return	asm/ch8b_threads_arg.asm	/^				return d;$/;"	d
return	asm/ch8b_threads_arg.asm	/^	return d;$/;"	d
return	asm/ch8b_usertest.asm	/^				return d;$/;"	d
return	asm/ch8b_usertest.asm	/^	return d;$/;"	d
return	asm/usershell.asm	/^				return d;$/;"	d
return	asm/usershell.asm	/^	return d;$/;"	d
return	build/asm/__ch2_bad_address.asm	/^				return d;$/;"	d
return	build/asm/__ch2_bad_address.asm	/^	return d;$/;"	d
return	build/asm/__ch2_bad_instruction.asm	/^				return d;$/;"	d
return	build/asm/__ch2_bad_instruction.asm	/^	return d;$/;"	d
return	build/asm/__ch2_bad_register.asm	/^				return d;$/;"	d
return	build/asm/__ch2_bad_register.asm	/^	return d;$/;"	d
return	build/asm/ch2b_exit.asm	/^				return d;$/;"	d
return	build/asm/ch2b_exit.asm	/^	return d;$/;"	d
return	build/asm/ch2b_hello_world.asm	/^				return d;$/;"	d
return	build/asm/ch2b_hello_world.asm	/^	return d;$/;"	d
return	build/asm/ch2b_power.asm	/^				return d;$/;"	d
return	build/asm/ch2b_power.asm	/^	return d;$/;"	d
return	build/asm/ch3_taskinfo.asm	/^				return d;$/;"	d
return	build/asm/ch3_taskinfo.asm	/^	return d;$/;"	d
return	build/asm/ch3b_sleep.asm	/^				return d;$/;"	d
return	build/asm/ch3b_sleep.asm	/^	return d;$/;"	d
return	build/asm/ch3b_sleep1.asm	/^				return d;$/;"	d
return	build/asm/ch3b_sleep1.asm	/^	return d;$/;"	d
return	build/asm/ch3b_yield0.asm	/^				return d;$/;"	d
return	build/asm/ch3b_yield0.asm	/^	return d;$/;"	d
return	build/asm/ch3b_yield1.asm	/^				return d;$/;"	d
return	build/asm/ch3b_yield1.asm	/^	return d;$/;"	d
return	build/asm/ch3b_yield2.asm	/^				return d;$/;"	d
return	build/asm/ch3b_yield2.asm	/^	return d;$/;"	d
return	build/asm/ch4_mmap0.asm	/^				return d;$/;"	d
return	build/asm/ch4_mmap0.asm	/^	return d;$/;"	d
return	build/asm/ch4_mmap1.asm	/^				return d;$/;"	d
return	build/asm/ch4_mmap1.asm	/^	return d;$/;"	d
return	build/asm/ch4_mmap2.asm	/^				return d;$/;"	d
return	build/asm/ch4_mmap2.asm	/^	return d;$/;"	d
return	build/asm/ch4_mmap3.asm	/^				return d;$/;"	d
return	build/asm/ch4_mmap3.asm	/^	return d;$/;"	d
return	build/asm/ch4_unmap0.asm	/^				return d;$/;"	d
return	build/asm/ch4_unmap0.asm	/^	return d;$/;"	d
return	build/asm/ch4_unmap1.asm	/^				return d;$/;"	d
return	build/asm/ch4_unmap1.asm	/^	return d;$/;"	d
return	build/asm/ch5_exit0.asm	/^				return d;$/;"	d
return	build/asm/ch5_exit0.asm	/^	return d;$/;"	d
return	build/asm/ch5_exit1.asm	/^				return d;$/;"	d
return	build/asm/ch5_exit1.asm	/^	return d;$/;"	d
return	build/asm/ch5_mergetest.asm	/^				return d;$/;"	d
return	build/asm/ch5_mergetest.asm	/^	return d;$/;"	d
return	build/asm/ch5_ppid.asm	/^				return d;$/;"	d
return	build/asm/ch5_ppid.asm	/^	return d;$/;"	d
return	build/asm/ch5_setprio.asm	/^				return d;$/;"	d
return	build/asm/ch5_setprio.asm	/^	return d;$/;"	d
return	build/asm/ch5_spawn0.asm	/^				return d;$/;"	d
return	build/asm/ch5_spawn0.asm	/^	return d;$/;"	d
return	build/asm/ch5_spawn1.asm	/^				return d;$/;"	d
return	build/asm/ch5_spawn1.asm	/^	return d;$/;"	d
return	build/asm/ch5_usertest.asm	/^				return d;$/;"	d
return	build/asm/ch5_usertest.asm	/^	return d;$/;"	d
return	build/asm/ch5b_exec_simple.asm	/^				return d;$/;"	d
return	build/asm/ch5b_exec_simple.asm	/^	return d;$/;"	d
return	build/asm/ch5b_exit.asm	/^				return d;$/;"	d
return	build/asm/ch5b_exit.asm	/^	return d;$/;"	d
return	build/asm/ch5b_forktest0.asm	/^				return d;$/;"	d
return	build/asm/ch5b_forktest0.asm	/^	return d;$/;"	d
return	build/asm/ch5b_forktest1.asm	/^				return d;$/;"	d
return	build/asm/ch5b_forktest1.asm	/^	return d;$/;"	d
return	build/asm/ch5b_forktest2.asm	/^				return d;$/;"	d
return	build/asm/ch5b_forktest2.asm	/^	return d;$/;"	d
return	build/asm/ch5b_getpid.asm	/^				return d;$/;"	d
return	build/asm/ch5b_getpid.asm	/^	return d;$/;"	d
return	build/asm/ch5b_usertest.asm	/^				return d;$/;"	d
return	build/asm/ch5b_usertest.asm	/^	return d;$/;"	d
return	build/asm/ch5t_stride0.asm	/^				return d;$/;"	d
return	build/asm/ch5t_stride0.asm	/^	return d;$/;"	d
return	build/asm/ch5t_stride1.asm	/^				return d;$/;"	d
return	build/asm/ch5t_stride1.asm	/^	return d;$/;"	d
return	build/asm/ch5t_stride2.asm	/^				return d;$/;"	d
return	build/asm/ch5t_stride2.asm	/^	return d;$/;"	d
return	build/asm/ch5t_stride3.asm	/^				return d;$/;"	d
return	build/asm/ch5t_stride3.asm	/^	return d;$/;"	d
return	build/asm/ch5t_stride4.asm	/^				return d;$/;"	d
return	build/asm/ch5t_stride4.asm	/^	return d;$/;"	d
return	build/asm/ch5t_stride5.asm	/^				return d;$/;"	d
return	build/asm/ch5t_stride5.asm	/^	return d;$/;"	d
return	build/asm/ch5t_usertest.asm	/^				return d;$/;"	d
return	build/asm/ch5t_usertest.asm	/^	return d;$/;"	d
return	build/asm/ch6_file0.asm	/^				return d;$/;"	d
return	build/asm/ch6_file0.asm	/^	return d;$/;"	d
return	build/asm/ch6_file1.asm	/^				return d;$/;"	d
return	build/asm/ch6_file1.asm	/^	return d;$/;"	d
return	build/asm/ch6_file2.asm	/^				return d;$/;"	d
return	build/asm/ch6_file2.asm	/^	return d;$/;"	d
return	build/asm/ch6_file3.asm	/^				return d;$/;"	d
return	build/asm/ch6_file3.asm	/^	return d;$/;"	d
return	build/asm/ch6_usertest.asm	/^				return d;$/;"	d
return	build/asm/ch6_usertest.asm	/^	return d;$/;"	d
return	build/asm/ch6b_args.asm	/^				return d;$/;"	d
return	build/asm/ch6b_args.asm	/^	return d;$/;"	d
return	build/asm/ch6b_assert.asm	/^				return d;$/;"	d
return	build/asm/ch6b_assert.asm	/^	return d;$/;"	d
return	build/asm/ch6b_cat.asm	/^				return d;$/;"	d
return	build/asm/ch6b_cat.asm	/^	return d;$/;"	d
return	build/asm/ch6b_exec.asm	/^				return d;$/;"	d
return	build/asm/ch6b_exec.asm	/^	return d;$/;"	d
return	build/asm/ch6b_filetest.asm	/^				return d;$/;"	d
return	build/asm/ch6b_filetest.asm	/^	return d;$/;"	d
return	build/asm/ch6b_filetest_simple.asm	/^				return d;$/;"	d
return	build/asm/ch6b_filetest_simple.asm	/^	return d;$/;"	d
return	build/asm/ch6b_panic.asm	/^				return d;$/;"	d
return	build/asm/ch6b_panic.asm	/^	return d;$/;"	d
return	build/asm/ch6b_usertest.asm	/^				return d;$/;"	d
return	build/asm/ch6b_usertest.asm	/^	return d;$/;"	d
return	build/asm/ch7b_pipetest.asm	/^				return d;$/;"	d
return	build/asm/ch7b_pipetest.asm	/^	return d;$/;"	d
return	build/asm/ch7b_usertest.asm	/^				return d;$/;"	d
return	build/asm/ch7b_usertest.asm	/^	return d;$/;"	d
return	build/asm/ch8_mut1_deadlock.asm	/^				return d;$/;"	d
return	build/asm/ch8_mut1_deadlock.asm	/^	return d;$/;"	d
return	build/asm/ch8_sem1_deadlock.asm	/^				return d;$/;"	d
return	build/asm/ch8_sem1_deadlock.asm	/^	return d;$/;"	d
return	build/asm/ch8_sem2_deadlock.asm	/^				return d;$/;"	d
return	build/asm/ch8_sem2_deadlock.asm	/^	return d;$/;"	d
return	build/asm/ch8_usertest.asm	/^				return d;$/;"	d
return	build/asm/ch8_usertest.asm	/^	return d;$/;"	d
return	build/asm/ch8b_mpsc_sem.asm	/^				return d;$/;"	d
return	build/asm/ch8b_mpsc_sem.asm	/^	return d;$/;"	d
return	build/asm/ch8b_mut_phi_din.asm	/^				return d;$/;"	d
return	build/asm/ch8b_mut_phi_din.asm	/^	return d;$/;"	d
return	build/asm/ch8b_mut_race.asm	/^				return d;$/;"	d
return	build/asm/ch8b_mut_race.asm	/^	return d;$/;"	d
return	build/asm/ch8b_spin_mut_race.asm	/^				return d;$/;"	d
return	build/asm/ch8b_spin_mut_race.asm	/^	return d;$/;"	d
return	build/asm/ch8b_sync_sem.asm	/^				return d;$/;"	d
return	build/asm/ch8b_sync_sem.asm	/^	return d;$/;"	d
return	build/asm/ch8b_test_condvar.asm	/^				return d;$/;"	d
return	build/asm/ch8b_test_condvar.asm	/^	return d;$/;"	d
return	build/asm/ch8b_threads.asm	/^				return d;$/;"	d
return	build/asm/ch8b_threads.asm	/^	return d;$/;"	d
return	build/asm/ch8b_threads_arg.asm	/^				return d;$/;"	d
return	build/asm/ch8b_threads_arg.asm	/^	return d;$/;"	d
return	build/asm/ch8b_usertest.asm	/^				return d;$/;"	d
return	build/asm/ch8b_usertest.asm	/^	return d;$/;"	d
return	build/asm/usershell.asm	/^				return d;$/;"	d
return	build/asm/usershell.asm	/^	return d;$/;"	d
run_tests	src/usertest.h	/^int run_tests(const char *tests[], int n)$/;"	f
s	asm/__ch2_bad_address.asm	/^		s = (const void *)w;$/;"	d
s	asm/__ch2_bad_address.asm	/^		s = (const void *)ws;$/;"	d
s	asm/__ch2_bad_address.asm	/^	s = (const void *)w;$/;"	d
s	asm/__ch2_bad_instruction.asm	/^		s = (const void *)w;$/;"	d
s	asm/__ch2_bad_instruction.asm	/^		s = (const void *)ws;$/;"	d
s	asm/__ch2_bad_instruction.asm	/^	s = (const void *)w;$/;"	d
s	asm/__ch2_bad_register.asm	/^		s = (const void *)w;$/;"	d
s	asm/__ch2_bad_register.asm	/^		s = (const void *)ws;$/;"	d
s	asm/__ch2_bad_register.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch2b_exit.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch2b_exit.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch2b_exit.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch2b_hello_world.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch2b_hello_world.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch2b_hello_world.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch2b_power.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch2b_power.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch2b_power.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch3_taskinfo.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch3_taskinfo.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch3_taskinfo.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch3b_sleep.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch3b_sleep.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch3b_sleep.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch3b_sleep1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch3b_sleep1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch3b_sleep1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch3b_yield0.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch3b_yield0.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch3b_yield0.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch3b_yield1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch3b_yield1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch3b_yield1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch3b_yield2.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch3b_yield2.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch3b_yield2.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch4_mmap0.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch4_mmap0.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch4_mmap0.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch4_mmap1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch4_mmap1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch4_mmap1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch4_mmap2.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch4_mmap2.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch4_mmap2.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch4_mmap3.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch4_mmap3.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch4_mmap3.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch4_unmap0.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch4_unmap0.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch4_unmap0.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch4_unmap1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch4_unmap1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch4_unmap1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5_exit0.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5_exit0.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5_exit0.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5_exit1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5_exit1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5_exit1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5_mergetest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5_mergetest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5_mergetest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5_ppid.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5_ppid.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5_ppid.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5_setprio.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5_setprio.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5_setprio.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5_spawn0.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5_spawn0.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5_spawn0.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5_spawn1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5_spawn1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5_spawn1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5_usertest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5_usertest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5b_exec_simple.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5b_exec_simple.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5b_exec_simple.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5b_exit.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5b_exit.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5b_exit.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5b_forktest0.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5b_forktest0.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5b_forktest0.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5b_forktest1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5b_forktest1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5b_forktest1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5b_forktest2.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5b_forktest2.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5b_forktest2.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5b_getpid.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5b_getpid.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5b_getpid.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5b_usertest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5b_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5b_usertest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5t_stride0.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5t_stride0.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5t_stride0.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5t_stride1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5t_stride1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5t_stride1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5t_stride2.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5t_stride2.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5t_stride2.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5t_stride3.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5t_stride3.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5t_stride3.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5t_stride4.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5t_stride4.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5t_stride4.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5t_stride5.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5t_stride5.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5t_stride5.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch5t_usertest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch5t_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch5t_usertest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6_file0.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6_file0.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6_file0.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6_file1.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6_file1.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6_file1.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6_file2.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6_file2.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6_file2.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6_file3.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6_file3.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6_file3.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6_usertest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6_usertest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6b_args.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6b_args.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6b_args.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6b_assert.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6b_assert.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6b_assert.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6b_cat.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6b_cat.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6b_cat.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6b_exec.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6b_exec.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6b_exec.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6b_filetest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6b_filetest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6b_filetest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6b_filetest_simple.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6b_filetest_simple.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6b_filetest_simple.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6b_panic.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6b_panic.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6b_panic.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch6b_usertest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch6b_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch6b_usertest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch7b_pipetest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch7b_pipetest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch7b_pipetest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch7b_usertest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch7b_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch7b_usertest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8_mut1_deadlock.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8_mut1_deadlock.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8_mut1_deadlock.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8_sem1_deadlock.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8_sem1_deadlock.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8_sem1_deadlock.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8_sem2_deadlock.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8_sem2_deadlock.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8_sem2_deadlock.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8_usertest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8_usertest.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_mpsc_sem.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_mpsc_sem.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_mpsc_sem.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_mut_phi_din.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_mut_phi_din.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_mut_phi_din.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_mut_race.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_mut_race.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_mut_race.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_spin_mut_race.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_spin_mut_race.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_spin_mut_race.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_sync_sem.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_sync_sem.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_sync_sem.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_test_condvar.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_test_condvar.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_test_condvar.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_threads.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_threads.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_threads.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_threads_arg.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_threads_arg.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_threads_arg.asm	/^	s = (const void *)w;$/;"	d
s	asm/ch8b_usertest.asm	/^		s = (const void *)w;$/;"	d
s	asm/ch8b_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	asm/ch8b_usertest.asm	/^	s = (const void *)w;$/;"	d
s	asm/usershell.asm	/^		s = (const void *)w;$/;"	d
s	asm/usershell.asm	/^		s = (const void *)ws;$/;"	d
s	asm/usershell.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/__ch2_bad_address.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/__ch2_bad_address.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/__ch2_bad_address.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/__ch2_bad_instruction.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/__ch2_bad_instruction.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/__ch2_bad_instruction.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/__ch2_bad_register.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/__ch2_bad_register.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/__ch2_bad_register.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch2b_exit.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch2b_exit.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch2b_exit.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch2b_hello_world.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch2b_hello_world.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch2b_hello_world.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch2b_power.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch2b_power.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch2b_power.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch3_taskinfo.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch3_taskinfo.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch3_taskinfo.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch3b_sleep.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch3b_sleep.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch3b_sleep.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch3b_sleep1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch3b_sleep1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch3b_sleep1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch3b_yield0.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch3b_yield0.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch3b_yield0.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch3b_yield1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch3b_yield1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch3b_yield1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch3b_yield2.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch3b_yield2.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch3b_yield2.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch4_mmap0.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch4_mmap0.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch4_mmap0.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch4_mmap1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch4_mmap1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch4_mmap1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch4_mmap2.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch4_mmap2.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch4_mmap2.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch4_mmap3.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch4_mmap3.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch4_mmap3.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch4_unmap0.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch4_unmap0.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch4_unmap0.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch4_unmap1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch4_unmap1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch4_unmap1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5_exit0.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5_exit0.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5_exit0.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5_exit1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5_exit1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5_exit1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5_mergetest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5_mergetest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5_mergetest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5_ppid.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5_ppid.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5_ppid.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5_setprio.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5_setprio.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5_setprio.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5_spawn0.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5_spawn0.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5_spawn0.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5_spawn1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5_spawn1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5_spawn1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5_usertest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5_usertest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5b_exec_simple.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5b_exec_simple.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5b_exec_simple.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5b_exit.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5b_exit.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5b_exit.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5b_forktest0.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5b_forktest0.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5b_forktest0.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5b_forktest1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5b_forktest1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5b_forktest1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5b_forktest2.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5b_forktest2.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5b_forktest2.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5b_getpid.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5b_getpid.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5b_getpid.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5b_usertest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5b_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5b_usertest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride0.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride0.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5t_stride0.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5t_stride1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride2.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride2.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5t_stride2.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride3.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride3.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5t_stride3.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride4.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride4.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5t_stride4.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride5.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5t_stride5.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5t_stride5.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch5t_usertest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch5t_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch5t_usertest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6_file0.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6_file0.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6_file0.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6_file1.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6_file1.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6_file1.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6_file2.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6_file2.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6_file2.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6_file3.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6_file3.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6_file3.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6_usertest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6_usertest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6b_args.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6b_args.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6b_args.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6b_assert.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6b_assert.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6b_assert.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6b_cat.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6b_cat.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6b_cat.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6b_exec.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6b_exec.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6b_exec.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6b_filetest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6b_filetest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6b_filetest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6b_filetest_simple.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6b_filetest_simple.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6b_filetest_simple.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6b_panic.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6b_panic.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6b_panic.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch6b_usertest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch6b_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch6b_usertest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch7b_pipetest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch7b_pipetest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch7b_pipetest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch7b_usertest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch7b_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch7b_usertest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8_mut1_deadlock.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8_mut1_deadlock.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8_mut1_deadlock.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8_sem1_deadlock.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8_sem1_deadlock.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8_sem1_deadlock.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8_sem2_deadlock.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8_sem2_deadlock.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8_sem2_deadlock.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8_usertest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8_usertest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_mpsc_sem.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_mpsc_sem.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_mpsc_sem.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_mut_phi_din.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_mut_phi_din.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_mut_phi_din.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_mut_race.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_mut_race.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_mut_race.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_spin_mut_race.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_spin_mut_race.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_spin_mut_race.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_sync_sem.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_sync_sem.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_sync_sem.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_test_condvar.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_test_condvar.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_test_condvar.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_threads.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_threads.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_threads.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_threads_arg.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_threads_arg.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_threads_arg.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/ch8b_usertest.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/ch8b_usertest.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/ch8b_usertest.asm	/^	s = (const void *)w;$/;"	d
s	build/asm/usershell.asm	/^		s = (const void *)w;$/;"	d
s	build/asm/usershell.asm	/^		s = (const void *)ws;$/;"	d
s	build/asm/usershell.asm	/^	s = (const void *)w;$/;"	d
sa_mask	include/stddef.h	/^	uint64   sa_mask;$/;"	m	struct:__anon3
sched_yield	lib/syscall.c	/^int sched_yield()$/;"	f
sec	include/stddef.h	/^	uint64 sec; \/\/ 自 Unix 纪元起的秒数$/;"	m	struct:__anon1
second	src/ch8b_sync_sem.c	/^void second()$/;"	f
second	src/ch8b_test_condvar.c	/^void second()$/;"	f
seed	lib/stdlib.c	/^static uint32 seed;$/;"	v	file:
sem_alloc	src/ch8_sem1_deadlock.c	/^void sem_alloc(int tid)$/;"	f
sem_dealloc	src/ch8_sem1_deadlock.c	/^void sem_dealloc(int tid)$/;"	f
sem_empty_id	src/ch8b_mpsc_sem.c	/^int sem_empty_id;$/;"	v
sem_existed_id	src/ch8b_mpsc_sem.c	/^int sem_existed_id;$/;"	v
sem_mutex_id	src/ch8b_mpsc_sem.c	/^int sem_mutex_id;$/;"	v
sem_sync_id	src/ch8b_sync_sem.c	/^int sem_sync_id;$/;"	v
semaphore_barrier_id	src/ch8_sem1_deadlock.c	/^int semaphore_barrier_id;$/;"	v
semaphore_barrier_id	src/ch8_sem2_deadlock.c	/^int semaphore_barrier_id;$/;"	v
semaphore_create	lib/syscall.c	/^int semaphore_create(int res_count)$/;"	f
semaphore_down	lib/syscall.c	/^int semaphore_down(int sid)$/;"	f
semaphore_up	lib/syscall.c	/^int semaphore_up(int sid)$/;"	f
set_priority	lib/syscall.c	/^int set_priority(int prio)$/;"	f
sigaction	include/stddef.h	/^} sigaction;$/;"	t	typeref:struct:__anon3
sigaction	lib/syscall.c	/^int sigaction(int signum, sigaction *act, sigaction *oldact)$/;"	f
size_t	asm/__ch2_bad_address.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/__ch2_bad_address.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/__ch2_bad_instruction.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/__ch2_bad_instruction.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/__ch2_bad_register.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/__ch2_bad_register.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch2b_exit.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch2b_exit.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch2b_hello_world.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch2b_hello_world.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch2b_power.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch2b_power.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch3_taskinfo.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch3_taskinfo.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch3b_sleep.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch3b_sleep.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch3b_sleep1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch3b_sleep1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch3b_yield0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch3b_yield0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch3b_yield1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch3b_yield1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch3b_yield2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch3b_yield2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch4_mmap0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch4_mmap0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch4_mmap1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch4_mmap1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch4_mmap2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch4_mmap2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch4_mmap3.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch4_mmap3.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch4_unmap0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch4_unmap0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch4_unmap1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch4_unmap1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5_exit0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5_exit0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5_exit1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5_exit1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5_mergetest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5_mergetest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5_ppid.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5_ppid.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5_setprio.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5_setprio.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5_spawn0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5_spawn0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5_spawn1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5_spawn1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5b_exec_simple.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5b_exec_simple.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5b_exit.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5b_exit.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5b_forktest0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5b_forktest0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5b_forktest1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5b_forktest1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5b_forktest2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5b_forktest2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5b_getpid.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5b_getpid.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5b_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5b_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5t_stride0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5t_stride0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5t_stride1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5t_stride1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5t_stride2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5t_stride2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5t_stride3.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5t_stride3.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5t_stride4.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5t_stride4.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5t_stride5.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5t_stride5.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch5t_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch5t_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6_file0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6_file0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6_file1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6_file1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6_file2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6_file2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6_file3.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6_file3.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6b_args.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6b_args.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6b_assert.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6b_assert.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6b_cat.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6b_cat.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6b_exec.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6b_exec.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6b_filetest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6b_filetest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6b_filetest_simple.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6b_filetest_simple.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6b_panic.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6b_panic.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch6b_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch6b_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch7b_pipetest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch7b_pipetest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch7b_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch7b_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8_mut1_deadlock.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8_mut1_deadlock.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8_sem1_deadlock.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8_sem1_deadlock.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8_sem2_deadlock.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8_sem2_deadlock.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_mpsc_sem.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_mpsc_sem.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_mut_phi_din.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_mut_phi_din.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_mut_race.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_mut_race.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_spin_mut_race.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_spin_mut_race.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_sync_sem.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_sync_sem.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_test_condvar.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_test_condvar.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_threads.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_threads.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_threads_arg.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_threads_arg.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/ch8b_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/ch8b_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	asm/usershell.asm	/^size_t strlen(const char *s)$/;"	l
size_t	asm/usershell.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/__ch2_bad_address.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/__ch2_bad_address.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/__ch2_bad_instruction.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/__ch2_bad_instruction.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/__ch2_bad_register.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/__ch2_bad_register.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch2b_exit.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch2b_exit.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch2b_hello_world.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch2b_hello_world.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch2b_power.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch2b_power.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch3_taskinfo.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch3_taskinfo.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch3b_sleep.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch3b_sleep.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch3b_sleep1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch3b_sleep1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch3b_yield0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch3b_yield0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch3b_yield1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch3b_yield1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch3b_yield2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch3b_yield2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch4_mmap0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch4_mmap0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch4_mmap1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch4_mmap1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch4_mmap2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch4_mmap2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch4_mmap3.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch4_mmap3.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch4_unmap0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch4_unmap0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch4_unmap1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch4_unmap1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5_exit0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5_exit0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5_exit1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5_exit1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5_mergetest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5_mergetest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5_ppid.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5_ppid.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5_setprio.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5_setprio.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5_spawn0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5_spawn0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5_spawn1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5_spawn1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5b_exec_simple.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5b_exec_simple.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5b_exit.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5b_exit.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5b_forktest0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5b_forktest0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5b_forktest1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5b_forktest1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5b_forktest2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5b_forktest2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5b_getpid.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5b_getpid.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5b_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5b_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5t_stride0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5t_stride0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5t_stride1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5t_stride1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5t_stride2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5t_stride2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5t_stride3.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5t_stride3.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5t_stride4.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5t_stride4.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5t_stride5.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5t_stride5.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch5t_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch5t_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6_file0.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6_file0.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6_file1.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6_file1.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6_file2.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6_file2.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6_file3.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6_file3.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6b_args.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6b_args.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6b_assert.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6b_assert.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6b_cat.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6b_cat.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6b_exec.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6b_exec.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6b_filetest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6b_filetest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6b_filetest_simple.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6b_filetest_simple.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6b_panic.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6b_panic.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch6b_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch6b_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch7b_pipetest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch7b_pipetest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch7b_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch7b_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8_mut1_deadlock.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8_mut1_deadlock.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8_sem1_deadlock.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8_sem1_deadlock.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8_sem2_deadlock.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8_sem2_deadlock.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_mpsc_sem.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_mpsc_sem.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_mut_phi_din.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_mut_phi_din.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_mut_race.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_mut_race.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_spin_mut_race.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_spin_mut_race.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_sync_sem.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_sync_sem.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_test_condvar.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_test_condvar.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_threads.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_threads.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_threads_arg.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_threads_arg.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/ch8b_usertest.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/ch8b_usertest.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	build/asm/usershell.asm	/^size_t strlen(const char *s)$/;"	l
size_t	build/asm/usershell.asm	/^size_t strnlen(const char *s, size_t n)$/;"	l
size_t	include/stddef.h	/^typedef uintptr_t size_t;$/;"	t
sleep	lib/syscall.c	/^int sleep(unsigned long long time)$/;"	f
spawn	lib/syscall.c	/^int spawn(const char *file)$/;"	f
spin_delay	src/ch5t_stride0.c	/^void spin_delay()$/;"	f
spin_delay	src/ch5t_stride1.c	/^void spin_delay()$/;"	f
spin_delay	src/ch5t_stride2.c	/^void spin_delay()$/;"	f
spin_delay	src/ch5t_stride3.c	/^void spin_delay()$/;"	f
spin_delay	src/ch5t_stride4.c	/^void spin_delay()$/;"	f
spin_delay	src/ch5t_stride5.c	/^void spin_delay()$/;"	f
srand	lib/stdlib.c	/^void srand(int s)$/;"	f
ssize_t	asm/__ch2_bad_address.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/__ch2_bad_address.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/__ch2_bad_instruction.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/__ch2_bad_instruction.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/__ch2_bad_register.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/__ch2_bad_register.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch2b_exit.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch2b_exit.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch2b_hello_world.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch2b_hello_world.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch2b_power.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch2b_power.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch3_taskinfo.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch3_taskinfo.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_sleep.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_sleep.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_sleep1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_sleep1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_yield0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_yield0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_yield1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_yield1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_yield2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch3b_yield2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_mmap0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_mmap0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_mmap1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_mmap1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_mmap2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_mmap2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_mmap3.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_mmap3.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_unmap0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_unmap0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_unmap1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch4_unmap1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_exit0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_exit0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_exit1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_exit1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_mergetest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_mergetest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_ppid.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_ppid.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_setprio.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_setprio.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_spawn0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_spawn0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_spawn1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_spawn1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_exec_simple.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_exec_simple.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_exit.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_exit.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_forktest0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_forktest0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_forktest1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_forktest1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_forktest2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_forktest2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_getpid.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_getpid.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5b_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride3.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride3.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride4.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride4.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride5.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_stride5.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch5t_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_file0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_file0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_file1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_file1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_file2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_file2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_file3.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_file3.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_args.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_args.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_assert.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_assert.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_cat.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_cat.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_exec.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_exec.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_filetest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_filetest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_filetest_simple.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_filetest_simple.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_panic.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_panic.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch6b_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch7b_pipetest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch7b_pipetest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch7b_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch7b_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8_mut1_deadlock.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8_mut1_deadlock.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8_sem1_deadlock.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8_sem1_deadlock.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8_sem2_deadlock.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8_sem2_deadlock.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_mpsc_sem.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_mpsc_sem.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_mut_phi_din.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_mut_phi_din.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_mut_race.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_mut_race.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_spin_mut_race.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_spin_mut_race.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_sync_sem.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_sync_sem.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_test_condvar.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_test_condvar.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_threads.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_threads.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_threads_arg.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_threads_arg.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/ch8b_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	asm/usershell.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	asm/usershell.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/__ch2_bad_address.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/__ch2_bad_address.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/__ch2_bad_instruction.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/__ch2_bad_instruction.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/__ch2_bad_register.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/__ch2_bad_register.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch2b_exit.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch2b_exit.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch2b_hello_world.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch2b_hello_world.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch2b_power.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch2b_power.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3_taskinfo.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3_taskinfo.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_sleep.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_sleep.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_sleep1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_sleep1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_yield0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_yield0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_yield1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_yield1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_yield2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch3b_yield2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_mmap0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_mmap0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_mmap1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_mmap1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_mmap2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_mmap2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_mmap3.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_mmap3.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_unmap0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_unmap0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_unmap1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch4_unmap1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_exit0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_exit0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_exit1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_exit1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_mergetest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_mergetest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_ppid.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_ppid.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_setprio.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_setprio.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_spawn0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_spawn0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_spawn1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_spawn1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_exec_simple.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_exec_simple.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_exit.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_exit.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_forktest0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_forktest0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_forktest1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_forktest1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_forktest2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_forktest2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_getpid.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_getpid.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5b_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride3.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride3.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride4.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride4.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride5.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_stride5.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch5t_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_file0.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_file0.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_file1.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_file1.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_file2.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_file2.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_file3.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_file3.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_args.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_args.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_assert.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_assert.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_cat.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_cat.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_exec.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_exec.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_filetest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_filetest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_filetest_simple.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_filetest_simple.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_panic.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_panic.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch6b_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch7b_pipetest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch7b_pipetest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch7b_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch7b_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8_mut1_deadlock.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8_mut1_deadlock.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8_sem1_deadlock.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8_sem1_deadlock.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8_sem2_deadlock.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8_sem2_deadlock.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_mpsc_sem.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_mpsc_sem.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_mut_phi_din.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_mut_phi_din.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_mut_race.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_mut_race.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_spin_mut_race.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_spin_mut_race.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_sync_sem.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_sync_sem.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_test_condvar.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_test_condvar.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_threads.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_threads.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_threads_arg.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_threads_arg.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_usertest.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/ch8b_usertest.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	build/asm/usershell.asm	/^ssize_t read(int fd, void *buf, size_t len)$/;"	l
ssize_t	build/asm/usershell.asm	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	l
ssize_t	include/stddef.h	/^typedef intptr_t ssize_t;$/;"	t
static	asm/__ch2_bad_address.asm	/^static char **null = { 0 };$/;"	l
static	asm/__ch2_bad_address.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/__ch2_bad_address.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/__ch2_bad_address.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/__ch2_bad_instruction.asm	/^static char **null = { 0 };$/;"	l
static	asm/__ch2_bad_instruction.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/__ch2_bad_instruction.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/__ch2_bad_instruction.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/__ch2_bad_register.asm	/^static char **null = { 0 };$/;"	l
static	asm/__ch2_bad_register.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/__ch2_bad_register.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/__ch2_bad_register.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch2b_exit.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch2b_exit.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch2b_exit.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch2b_exit.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch2b_hello_world.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch2b_hello_world.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch2b_hello_world.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch2b_hello_world.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch2b_power.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch2b_power.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch2b_power.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch2b_power.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch3_taskinfo.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch3_taskinfo.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch3_taskinfo.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch3_taskinfo.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch3b_sleep.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch3b_sleep.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch3b_sleep.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch3b_sleep.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch3b_sleep1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch3b_sleep1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch3b_sleep1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch3b_sleep1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch3b_yield0.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch3b_yield0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch3b_yield0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch3b_yield0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch3b_yield1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch3b_yield1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch3b_yield1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch3b_yield1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch3b_yield2.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch3b_yield2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch3b_yield2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch3b_yield2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch4_mmap0.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch4_mmap0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch4_mmap0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch4_mmap0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch4_mmap1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch4_mmap1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch4_mmap1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch4_mmap1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch4_mmap2.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch4_mmap2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch4_mmap2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch4_mmap2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch4_mmap3.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch4_mmap3.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch4_mmap3.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch4_mmap3.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch4_unmap0.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch4_unmap0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch4_unmap0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch4_unmap0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch4_unmap1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch4_unmap1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch4_unmap1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch4_unmap1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5_exit0.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5_exit0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5_exit0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5_exit0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5_exit1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5_exit1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5_exit1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5_exit1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5_mergetest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5_mergetest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5_mergetest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5_mergetest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5_ppid.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5_ppid.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5_ppid.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5_ppid.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5_setprio.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5_setprio.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5_setprio.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5_setprio.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5_spawn0.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5_spawn0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5_spawn0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5_spawn0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5_spawn1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5_spawn1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5_spawn1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5_spawn1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5_usertest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5b_exec_simple.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5b_exec_simple.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5b_exec_simple.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5b_exec_simple.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5b_exit.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5b_exit.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5b_exit.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5b_exit.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5b_forktest0.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5b_forktest0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5b_forktest0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5b_forktest0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5b_forktest1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5b_forktest1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5b_forktest1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5b_forktest1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5b_forktest2.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5b_forktest2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5b_forktest2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5b_forktest2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5b_getpid.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5b_getpid.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5b_getpid.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5b_getpid.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5b_usertest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5b_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5b_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5b_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5t_stride0.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5t_stride0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5t_stride0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5t_stride0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5t_stride1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5t_stride1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5t_stride1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5t_stride1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5t_stride2.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5t_stride2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5t_stride2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5t_stride2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5t_stride3.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5t_stride3.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5t_stride3.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5t_stride3.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5t_stride4.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5t_stride4.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5t_stride4.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5t_stride4.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5t_stride5.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5t_stride5.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5t_stride5.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5t_stride5.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch5t_usertest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch5t_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch5t_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch5t_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6_file0.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6_file0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6_file0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6_file0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6_file1.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6_file1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6_file1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6_file1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6_file2.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6_file2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6_file2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6_file2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6_file3.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6_file3.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6_file3.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6_file3.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6_usertest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6b_args.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6b_args.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6b_args.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6b_args.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6b_assert.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6b_assert.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6b_assert.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6b_assert.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6b_cat.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6b_cat.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6b_cat.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6b_cat.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6b_exec.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6b_exec.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6b_exec.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6b_exec.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6b_filetest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6b_filetest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6b_filetest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6b_filetest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6b_filetest_simple.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6b_filetest_simple.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6b_filetest_simple.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6b_filetest_simple.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6b_panic.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6b_panic.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6b_panic.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6b_panic.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch6b_usertest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch6b_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch6b_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch6b_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch7b_pipetest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch7b_pipetest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch7b_pipetest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch7b_pipetest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch7b_usertest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch7b_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch7b_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch7b_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8_mut1_deadlock.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8_mut1_deadlock.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8_mut1_deadlock.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8_mut1_deadlock.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8_sem1_deadlock.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8_sem1_deadlock.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8_sem1_deadlock.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8_sem1_deadlock.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8_sem2_deadlock.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8_sem2_deadlock.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8_sem2_deadlock.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8_sem2_deadlock.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8_usertest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_mpsc_sem.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_mpsc_sem.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_mpsc_sem.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_mpsc_sem.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_mut_phi_din.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_mut_phi_din.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_mut_phi_din.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_mut_phi_din.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_mut_race.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_mut_race.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_mut_race.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_mut_race.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_spin_mut_race.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_spin_mut_race.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_spin_mut_race.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_spin_mut_race.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_sync_sem.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_sync_sem.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_sync_sem.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_sync_sem.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_test_condvar.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_test_condvar.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_test_condvar.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_test_condvar.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_threads.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_threads.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_threads.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_threads.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_threads_arg.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_threads_arg.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_threads_arg.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_threads_arg.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/ch8b_usertest.asm	/^static char **null = { 0 };$/;"	l
static	asm/ch8b_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/ch8b_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/ch8b_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	asm/usershell.asm	/^static char **null = { 0 };$/;"	l
static	asm/usershell.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	asm/usershell.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	asm/usershell.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/__ch2_bad_address.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/__ch2_bad_address.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/__ch2_bad_address.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/__ch2_bad_address.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/__ch2_bad_instruction.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/__ch2_bad_instruction.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/__ch2_bad_instruction.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/__ch2_bad_instruction.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/__ch2_bad_register.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/__ch2_bad_register.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/__ch2_bad_register.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/__ch2_bad_register.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch2b_exit.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch2b_exit.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch2b_exit.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch2b_exit.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch2b_hello_world.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch2b_hello_world.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch2b_hello_world.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch2b_hello_world.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch2b_power.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch2b_power.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch2b_power.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch2b_power.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch3_taskinfo.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch3_taskinfo.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch3_taskinfo.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch3_taskinfo.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch3b_sleep.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch3b_sleep.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch3b_sleep.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch3b_sleep.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch3b_sleep1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch3b_sleep1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch3b_sleep1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch3b_sleep1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch3b_yield0.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch3b_yield0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch3b_yield0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch3b_yield0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch3b_yield1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch3b_yield1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch3b_yield1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch3b_yield1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch3b_yield2.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch3b_yield2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch3b_yield2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch3b_yield2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch4_mmap0.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch4_mmap0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch4_mmap0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch4_mmap0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch4_mmap1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch4_mmap1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch4_mmap1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch4_mmap1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch4_mmap2.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch4_mmap2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch4_mmap2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch4_mmap2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch4_mmap3.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch4_mmap3.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch4_mmap3.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch4_mmap3.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch4_unmap0.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch4_unmap0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch4_unmap0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch4_unmap0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch4_unmap1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch4_unmap1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch4_unmap1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch4_unmap1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5_exit0.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5_exit0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5_exit0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5_exit0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5_exit1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5_exit1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5_exit1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5_exit1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5_mergetest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5_mergetest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5_mergetest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5_mergetest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5_ppid.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5_ppid.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5_ppid.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5_ppid.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5_setprio.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5_setprio.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5_setprio.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5_setprio.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5_spawn0.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5_spawn0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5_spawn0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5_spawn0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5_spawn1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5_spawn1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5_spawn1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5_spawn1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5_usertest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5b_exec_simple.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5b_exec_simple.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5b_exec_simple.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5b_exec_simple.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5b_exit.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5b_exit.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5b_exit.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5b_exit.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5b_forktest0.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5b_forktest0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5b_forktest0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5b_forktest0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5b_forktest1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5b_forktest1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5b_forktest1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5b_forktest1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5b_forktest2.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5b_forktest2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5b_forktest2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5b_forktest2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5b_getpid.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5b_getpid.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5b_getpid.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5b_getpid.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5b_usertest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5b_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5b_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5b_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5t_stride0.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5t_stride0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5t_stride0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5t_stride0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5t_stride1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5t_stride1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5t_stride1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5t_stride1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5t_stride2.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5t_stride2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5t_stride2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5t_stride2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5t_stride3.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5t_stride3.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5t_stride3.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5t_stride3.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5t_stride4.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5t_stride4.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5t_stride4.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5t_stride4.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5t_stride5.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5t_stride5.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5t_stride5.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5t_stride5.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch5t_usertest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch5t_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch5t_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch5t_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6_file0.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6_file0.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6_file0.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6_file0.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6_file1.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6_file1.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6_file1.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6_file1.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6_file2.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6_file2.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6_file2.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6_file2.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6_file3.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6_file3.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6_file3.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6_file3.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6_usertest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6b_args.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6b_args.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6b_args.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6b_args.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6b_assert.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6b_assert.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6b_assert.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6b_assert.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6b_cat.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6b_cat.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6b_cat.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6b_cat.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6b_exec.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6b_exec.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6b_exec.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6b_exec.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6b_filetest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6b_filetest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6b_filetest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6b_filetest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6b_filetest_simple.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6b_filetest_simple.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6b_filetest_simple.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6b_filetest_simple.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6b_panic.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6b_panic.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6b_panic.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6b_panic.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch6b_usertest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch6b_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch6b_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch6b_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch7b_pipetest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch7b_pipetest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch7b_pipetest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch7b_pipetest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch7b_usertest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch7b_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch7b_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch7b_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8_mut1_deadlock.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8_mut1_deadlock.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8_mut1_deadlock.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8_mut1_deadlock.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8_sem1_deadlock.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8_sem1_deadlock.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8_sem1_deadlock.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8_sem1_deadlock.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8_sem2_deadlock.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8_sem2_deadlock.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8_sem2_deadlock.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8_sem2_deadlock.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8_usertest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_mpsc_sem.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_mpsc_sem.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_mpsc_sem.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_mpsc_sem.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_mut_phi_din.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_mut_phi_din.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_mut_phi_din.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_mut_phi_din.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_mut_race.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_mut_race.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_mut_race.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_mut_race.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_spin_mut_race.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_spin_mut_race.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_spin_mut_race.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_spin_mut_race.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_sync_sem.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_sync_sem.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_sync_sem.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_sync_sem.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_test_condvar.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_test_condvar.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_test_condvar.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_test_condvar.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_threads.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_threads.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_threads.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_threads.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_threads_arg.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_threads_arg.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_threads_arg.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_threads_arg.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/ch8b_usertest.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/ch8b_usertest.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/ch8b_usertest.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/ch8b_usertest.asm	/^static void printint(int xx, int base, int sign)$/;"	l
static	build/asm/usershell.asm	/^static char **null = { 0 };$/;"	l
static	build/asm/usershell.asm	/^static inline long __syscall3(long n, long a, long b, long c)$/;"	l
static	build/asm/usershell.asm	/^static inline long __syscall5(long n, long a, long b, long c, long d, long e)$/;"	l
static	build/asm/usershell.asm	/^static void printint(int xx, int base, int sign)$/;"	l
status	include/stddef.h	/^	TaskStatus status;$/;"	m	struct:__anon5
stderr	include/stdio.h	6;"	d
stdin	include/stdio.h	4;"	d
stdout	include/stdio.h	5;"	d
stpcpy	lib/string.c	/^char *stpcpy(char *restrict d, const char *s)$/;"	f
stpncpy	lib/string.c	/^char *stpncpy(char *restrict d, const char *s, size_t n)$/;"	f
strcmp	lib/string.c	/^int strcmp(const char *l, const char *r)$/;"	f
strlen	lib/string.c	/^size_t strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^int strncmp(const char *_l, const char *_r, size_t n)$/;"	f
strnlen	lib/string.c	/^size_t strnlen(const char *s, size_t n)$/;"	f
sys_get_time	lib/syscall.c	/^int sys_get_time(TimeVal *ts, int tz)$/;"	f
sys_linkat	lib/syscall.c	/^int sys_linkat(int olddirfd, char *oldpath, int newdirfd, char *newpath,$/;"	f
sys_task_info	lib/syscall.c	/^int sys_task_info(TaskInfo *ti)$/;"	f
sys_unlinkat	lib/syscall.c	/^int sys_unlinkat(int dirfd, char *path, unsigned int flags)$/;"	f
syscall	lib/syscall.h	33;"	d
syscall_arg_t	lib/syscall.h	/^typedef long syscall_arg_t;$/;"	t
syscall_times	include/stddef.h	/^	unsigned int syscall_times[MAX_SYSCALL_NUM];$/;"	m	struct:__anon5
t	asm/ch8b_mut_race.asm	/^			t = t * t % 10007;$/;"	d
t	asm/ch8b_spin_mut_race.asm	/^			t = t * t % 10007;$/;"	d
t	build/asm/ch8b_mut_race.asm	/^			t = t * t % 10007;$/;"	d
t	build/asm/ch8b_spin_mut_race.asm	/^			t = t * t % 10007;$/;"	d
tail	asm/__ch2_bad_address.asm	/^tail:$/;"	l
tail	asm/__ch2_bad_instruction.asm	/^tail:$/;"	l
tail	asm/__ch2_bad_register.asm	/^tail:$/;"	l
tail	asm/ch2b_exit.asm	/^tail:$/;"	l
tail	asm/ch2b_hello_world.asm	/^tail:$/;"	l
tail	asm/ch2b_power.asm	/^tail:$/;"	l
tail	asm/ch3_taskinfo.asm	/^tail:$/;"	l
tail	asm/ch3b_sleep.asm	/^tail:$/;"	l
tail	asm/ch3b_sleep1.asm	/^tail:$/;"	l
tail	asm/ch3b_yield0.asm	/^tail:$/;"	l
tail	asm/ch3b_yield1.asm	/^tail:$/;"	l
tail	asm/ch3b_yield2.asm	/^tail:$/;"	l
tail	asm/ch4_mmap0.asm	/^tail:$/;"	l
tail	asm/ch4_mmap1.asm	/^tail:$/;"	l
tail	asm/ch4_mmap2.asm	/^tail:$/;"	l
tail	asm/ch4_mmap3.asm	/^tail:$/;"	l
tail	asm/ch4_unmap0.asm	/^tail:$/;"	l
tail	asm/ch4_unmap1.asm	/^tail:$/;"	l
tail	asm/ch5_exit0.asm	/^tail:$/;"	l
tail	asm/ch5_exit1.asm	/^tail:$/;"	l
tail	asm/ch5_mergetest.asm	/^tail:$/;"	l
tail	asm/ch5_ppid.asm	/^tail:$/;"	l
tail	asm/ch5_setprio.asm	/^tail:$/;"	l
tail	asm/ch5_spawn0.asm	/^tail:$/;"	l
tail	asm/ch5_spawn1.asm	/^tail:$/;"	l
tail	asm/ch5_usertest.asm	/^tail:$/;"	l
tail	asm/ch5b_exec_simple.asm	/^tail:$/;"	l
tail	asm/ch5b_exit.asm	/^tail:$/;"	l
tail	asm/ch5b_forktest0.asm	/^tail:$/;"	l
tail	asm/ch5b_forktest1.asm	/^tail:$/;"	l
tail	asm/ch5b_forktest2.asm	/^tail:$/;"	l
tail	asm/ch5b_getpid.asm	/^tail:$/;"	l
tail	asm/ch5b_usertest.asm	/^tail:$/;"	l
tail	asm/ch5t_stride0.asm	/^tail:$/;"	l
tail	asm/ch5t_stride1.asm	/^tail:$/;"	l
tail	asm/ch5t_stride2.asm	/^tail:$/;"	l
tail	asm/ch5t_stride3.asm	/^tail:$/;"	l
tail	asm/ch5t_stride4.asm	/^tail:$/;"	l
tail	asm/ch5t_stride5.asm	/^tail:$/;"	l
tail	asm/ch5t_usertest.asm	/^tail:$/;"	l
tail	asm/ch6_file0.asm	/^tail:$/;"	l
tail	asm/ch6_file1.asm	/^tail:$/;"	l
tail	asm/ch6_file2.asm	/^tail:$/;"	l
tail	asm/ch6_file3.asm	/^tail:$/;"	l
tail	asm/ch6_usertest.asm	/^tail:$/;"	l
tail	asm/ch6b_args.asm	/^tail:$/;"	l
tail	asm/ch6b_assert.asm	/^tail:$/;"	l
tail	asm/ch6b_cat.asm	/^tail:$/;"	l
tail	asm/ch6b_exec.asm	/^tail:$/;"	l
tail	asm/ch6b_filetest.asm	/^tail:$/;"	l
tail	asm/ch6b_filetest_simple.asm	/^tail:$/;"	l
tail	asm/ch6b_panic.asm	/^tail:$/;"	l
tail	asm/ch6b_usertest.asm	/^tail:$/;"	l
tail	asm/ch7b_pipetest.asm	/^tail:$/;"	l
tail	asm/ch7b_usertest.asm	/^tail:$/;"	l
tail	asm/ch8_mut1_deadlock.asm	/^tail:$/;"	l
tail	asm/ch8_sem1_deadlock.asm	/^tail:$/;"	l
tail	asm/ch8_sem2_deadlock.asm	/^tail:$/;"	l
tail	asm/ch8_usertest.asm	/^tail:$/;"	l
tail	asm/ch8b_mpsc_sem.asm	/^		tail = (tail + 1) % buffer_size;$/;"	d
tail	asm/ch8b_mpsc_sem.asm	/^tail:$/;"	l
tail	asm/ch8b_mut_phi_din.asm	/^tail:$/;"	l
tail	asm/ch8b_mut_race.asm	/^tail:$/;"	l
tail	asm/ch8b_spin_mut_race.asm	/^tail:$/;"	l
tail	asm/ch8b_sync_sem.asm	/^tail:$/;"	l
tail	asm/ch8b_test_condvar.asm	/^tail:$/;"	l
tail	asm/ch8b_threads.asm	/^tail:$/;"	l
tail	asm/ch8b_threads_arg.asm	/^tail:$/;"	l
tail	asm/ch8b_usertest.asm	/^tail:$/;"	l
tail	asm/usershell.asm	/^tail:$/;"	l
tail	build/asm/__ch2_bad_address.asm	/^tail:$/;"	l
tail	build/asm/__ch2_bad_instruction.asm	/^tail:$/;"	l
tail	build/asm/__ch2_bad_register.asm	/^tail:$/;"	l
tail	build/asm/ch2b_exit.asm	/^tail:$/;"	l
tail	build/asm/ch2b_hello_world.asm	/^tail:$/;"	l
tail	build/asm/ch2b_power.asm	/^tail:$/;"	l
tail	build/asm/ch3_taskinfo.asm	/^tail:$/;"	l
tail	build/asm/ch3b_sleep.asm	/^tail:$/;"	l
tail	build/asm/ch3b_sleep1.asm	/^tail:$/;"	l
tail	build/asm/ch3b_yield0.asm	/^tail:$/;"	l
tail	build/asm/ch3b_yield1.asm	/^tail:$/;"	l
tail	build/asm/ch3b_yield2.asm	/^tail:$/;"	l
tail	build/asm/ch4_mmap0.asm	/^tail:$/;"	l
tail	build/asm/ch4_mmap1.asm	/^tail:$/;"	l
tail	build/asm/ch4_mmap2.asm	/^tail:$/;"	l
tail	build/asm/ch4_mmap3.asm	/^tail:$/;"	l
tail	build/asm/ch4_unmap0.asm	/^tail:$/;"	l
tail	build/asm/ch4_unmap1.asm	/^tail:$/;"	l
tail	build/asm/ch5_exit0.asm	/^tail:$/;"	l
tail	build/asm/ch5_exit1.asm	/^tail:$/;"	l
tail	build/asm/ch5_mergetest.asm	/^tail:$/;"	l
tail	build/asm/ch5_ppid.asm	/^tail:$/;"	l
tail	build/asm/ch5_setprio.asm	/^tail:$/;"	l
tail	build/asm/ch5_spawn0.asm	/^tail:$/;"	l
tail	build/asm/ch5_spawn1.asm	/^tail:$/;"	l
tail	build/asm/ch5_usertest.asm	/^tail:$/;"	l
tail	build/asm/ch5b_exec_simple.asm	/^tail:$/;"	l
tail	build/asm/ch5b_exit.asm	/^tail:$/;"	l
tail	build/asm/ch5b_forktest0.asm	/^tail:$/;"	l
tail	build/asm/ch5b_forktest1.asm	/^tail:$/;"	l
tail	build/asm/ch5b_forktest2.asm	/^tail:$/;"	l
tail	build/asm/ch5b_getpid.asm	/^tail:$/;"	l
tail	build/asm/ch5b_usertest.asm	/^tail:$/;"	l
tail	build/asm/ch5t_stride0.asm	/^tail:$/;"	l
tail	build/asm/ch5t_stride1.asm	/^tail:$/;"	l
tail	build/asm/ch5t_stride2.asm	/^tail:$/;"	l
tail	build/asm/ch5t_stride3.asm	/^tail:$/;"	l
tail	build/asm/ch5t_stride4.asm	/^tail:$/;"	l
tail	build/asm/ch5t_stride5.asm	/^tail:$/;"	l
tail	build/asm/ch5t_usertest.asm	/^tail:$/;"	l
tail	build/asm/ch6_file0.asm	/^tail:$/;"	l
tail	build/asm/ch6_file1.asm	/^tail:$/;"	l
tail	build/asm/ch6_file2.asm	/^tail:$/;"	l
tail	build/asm/ch6_file3.asm	/^tail:$/;"	l
tail	build/asm/ch6_usertest.asm	/^tail:$/;"	l
tail	build/asm/ch6b_args.asm	/^tail:$/;"	l
tail	build/asm/ch6b_assert.asm	/^tail:$/;"	l
tail	build/asm/ch6b_cat.asm	/^tail:$/;"	l
tail	build/asm/ch6b_exec.asm	/^tail:$/;"	l
tail	build/asm/ch6b_filetest.asm	/^tail:$/;"	l
tail	build/asm/ch6b_filetest_simple.asm	/^tail:$/;"	l
tail	build/asm/ch6b_panic.asm	/^tail:$/;"	l
tail	build/asm/ch6b_usertest.asm	/^tail:$/;"	l
tail	build/asm/ch7b_pipetest.asm	/^tail:$/;"	l
tail	build/asm/ch7b_usertest.asm	/^tail:$/;"	l
tail	build/asm/ch8_mut1_deadlock.asm	/^tail:$/;"	l
tail	build/asm/ch8_sem1_deadlock.asm	/^tail:$/;"	l
tail	build/asm/ch8_sem2_deadlock.asm	/^tail:$/;"	l
tail	build/asm/ch8_usertest.asm	/^tail:$/;"	l
tail	build/asm/ch8b_mpsc_sem.asm	/^		tail = (tail + 1) % buffer_size;$/;"	d
tail	build/asm/ch8b_mpsc_sem.asm	/^tail:$/;"	l
tail	build/asm/ch8b_mut_phi_din.asm	/^tail:$/;"	l
tail	build/asm/ch8b_mut_race.asm	/^tail:$/;"	l
tail	build/asm/ch8b_spin_mut_race.asm	/^tail:$/;"	l
tail	build/asm/ch8b_sync_sem.asm	/^tail:$/;"	l
tail	build/asm/ch8b_test_condvar.asm	/^tail:$/;"	l
tail	build/asm/ch8b_threads.asm	/^tail:$/;"	l
tail	build/asm/ch8b_threads_arg.asm	/^tail:$/;"	l
tail	build/asm/ch8b_usertest.asm	/^tail:$/;"	l
tail	build/asm/usershell.asm	/^tail:$/;"	l
tail	src/ch8b_mpsc_sem.c	/^int tail = 0;$/;"	v
test	src/usertest.h	/^int test(const char *succs[], int nsucc, const char *fails[], int nfail,$/;"	f
test_str	src/ch6_file3.c	/^char test_str[4096];$/;"	v
think	src/ch8b_mut_phi_din.c	/^int think[N][ROUND * 2];$/;"	v
thread	src/ch8b_threads_arg.c	/^void thread(struct thread_arg *arg)$/;"	f
thread_a	src/ch8b_threads.c	/^void thread_a()$/;"	f
thread_arg	src/ch8b_threads_arg.c	/^struct thread_arg {$/;"	s	file:
thread_b	src/ch8b_threads.c	/^void thread_b()$/;"	f
thread_c	src/ch8b_threads.c	/^void thread_c()$/;"	f
thread_count	src/ch8b_mut_race.c	9;"	d	file:
thread_count	src/ch8b_spin_mut_race.c	9;"	d	file:
thread_create	lib/syscall.c	/^int thread_create(void *entry, void *arg)$/;"	f
threads	src/ch8b_mpsc_sem.c	/^int threads[producers + 1];$/;"	v
threads	src/ch8b_mut_race.c	/^int threads[thread_count];$/;"	v
threads	src/ch8b_spin_mut_race.c	/^int threads[thread_count];$/;"	v
time	include/stddef.h	/^	int time;$/;"	m	struct:__anon5
top	asm/usershell.asm	/^	top = 0;$/;"	d
top	build/asm/usershell.asm	/^	top = 0;$/;"	d
top	src/usershell.c	/^int top = 0;$/;"	v
try_sem_down	src/ch8_sem1_deadlock.c	/^void try_sem_down(int tid, int sem_id)$/;"	f
try_sem_down	src/ch8_sem2_deadlock.c	/^void try_sem_down(int id, int sem_id)$/;"	f
uint	include/stddef.h	/^typedef unsigned int uint;$/;"	t
uint16	include/stddef.h	/^typedef unsigned short uint16;$/;"	t
uint32	include/stddef.h	/^typedef unsigned int uint32;$/;"	t
uint64	include/stddef.h	/^typedef unsigned long long uint64;$/;"	t
uint8	include/stddef.h	/^typedef unsigned char uint8;$/;"	t
uintmax_t	include/stdio.h	/^typedef unsigned long int uintmax_t;$/;"	t
uintptr_t	include/stddef.h	/^typedef uint32_t uintptr_t;$/;"	t
uintptr_t	include/stddef.h	/^typedef uint64 uintptr_t;$/;"	t
unlink	lib/syscall.c	/^int unlink(char *path)$/;"	f
usec	include/stddef.h	/^	uint64 usec; \/\/ 微秒数$/;"	m	struct:__anon1
va_arg	include/stddef.h	48;"	d
va_arg	include/stdio.h	9;"	d
va_copy	include/stddef.h	50;"	d
va_copy	include/stdio.h	11;"	d
va_end	include/stddef.h	49;"	d
va_end	include/stdio.h	10;"	d
va_list	include/stddef.h	/^typedef __builtin_va_list va_list;$/;"	t
va_list	include/stdio.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	include/stddef.h	47;"	d
va_start	include/stdio.h	8;"	d
void	asm/__ch2_bad_address.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/__ch2_bad_address.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/__ch2_bad_address.asm	/^void __clear_buffer()$/;"	l
void	asm/__ch2_bad_address.asm	/^void __clear_buffer();$/;"	l
void	asm/__ch2_bad_address.asm	/^void exit(int code)$/;"	l
void	asm/__ch2_bad_address.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/__ch2_bad_instruction.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/__ch2_bad_instruction.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/__ch2_bad_instruction.asm	/^void __clear_buffer()$/;"	l
void	asm/__ch2_bad_instruction.asm	/^void __clear_buffer();$/;"	l
void	asm/__ch2_bad_instruction.asm	/^void exit(int code)$/;"	l
void	asm/__ch2_bad_instruction.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/__ch2_bad_register.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/__ch2_bad_register.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/__ch2_bad_register.asm	/^void __clear_buffer()$/;"	l
void	asm/__ch2_bad_register.asm	/^void __clear_buffer();$/;"	l
void	asm/__ch2_bad_register.asm	/^void exit(int code)$/;"	l
void	asm/__ch2_bad_register.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch2b_exit.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch2b_exit.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch2b_exit.asm	/^void __clear_buffer()$/;"	l
void	asm/ch2b_exit.asm	/^void __clear_buffer();$/;"	l
void	asm/ch2b_exit.asm	/^void exit(int code)$/;"	l
void	asm/ch2b_exit.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch2b_hello_world.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch2b_hello_world.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch2b_hello_world.asm	/^void __clear_buffer()$/;"	l
void	asm/ch2b_hello_world.asm	/^void __clear_buffer();$/;"	l
void	asm/ch2b_hello_world.asm	/^void exit(int code)$/;"	l
void	asm/ch2b_hello_world.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch2b_power.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch2b_power.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch2b_power.asm	/^void __clear_buffer()$/;"	l
void	asm/ch2b_power.asm	/^void __clear_buffer();$/;"	l
void	asm/ch2b_power.asm	/^void exit(int code)$/;"	l
void	asm/ch2b_power.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch3_taskinfo.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch3_taskinfo.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch3_taskinfo.asm	/^void __clear_buffer()$/;"	l
void	asm/ch3_taskinfo.asm	/^void __clear_buffer();$/;"	l
void	asm/ch3_taskinfo.asm	/^void exit(int code)$/;"	l
void	asm/ch3_taskinfo.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch3b_sleep.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch3b_sleep.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch3b_sleep.asm	/^void __clear_buffer()$/;"	l
void	asm/ch3b_sleep.asm	/^void __clear_buffer();$/;"	l
void	asm/ch3b_sleep.asm	/^void exit(int code)$/;"	l
void	asm/ch3b_sleep.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch3b_sleep1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch3b_sleep1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch3b_sleep1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch3b_sleep1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch3b_sleep1.asm	/^void exit(int code)$/;"	l
void	asm/ch3b_sleep1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch3b_yield0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch3b_yield0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch3b_yield0.asm	/^void __clear_buffer()$/;"	l
void	asm/ch3b_yield0.asm	/^void __clear_buffer();$/;"	l
void	asm/ch3b_yield0.asm	/^void exit(int code)$/;"	l
void	asm/ch3b_yield0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch3b_yield1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch3b_yield1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch3b_yield1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch3b_yield1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch3b_yield1.asm	/^void exit(int code)$/;"	l
void	asm/ch3b_yield1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch3b_yield2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch3b_yield2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch3b_yield2.asm	/^void __clear_buffer()$/;"	l
void	asm/ch3b_yield2.asm	/^void __clear_buffer();$/;"	l
void	asm/ch3b_yield2.asm	/^void exit(int code)$/;"	l
void	asm/ch3b_yield2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch4_mmap0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch4_mmap0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch4_mmap0.asm	/^void __clear_buffer()$/;"	l
void	asm/ch4_mmap0.asm	/^void __clear_buffer();$/;"	l
void	asm/ch4_mmap0.asm	/^void exit(int code)$/;"	l
void	asm/ch4_mmap0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch4_mmap1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch4_mmap1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch4_mmap1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch4_mmap1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch4_mmap1.asm	/^void exit(int code)$/;"	l
void	asm/ch4_mmap1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch4_mmap2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch4_mmap2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch4_mmap2.asm	/^void __clear_buffer()$/;"	l
void	asm/ch4_mmap2.asm	/^void __clear_buffer();$/;"	l
void	asm/ch4_mmap2.asm	/^void exit(int code)$/;"	l
void	asm/ch4_mmap2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch4_mmap3.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch4_mmap3.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch4_mmap3.asm	/^void __clear_buffer()$/;"	l
void	asm/ch4_mmap3.asm	/^void __clear_buffer();$/;"	l
void	asm/ch4_mmap3.asm	/^void exit(int code)$/;"	l
void	asm/ch4_mmap3.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch4_unmap0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch4_unmap0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch4_unmap0.asm	/^void __clear_buffer()$/;"	l
void	asm/ch4_unmap0.asm	/^void __clear_buffer();$/;"	l
void	asm/ch4_unmap0.asm	/^void exit(int code)$/;"	l
void	asm/ch4_unmap0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch4_unmap1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch4_unmap1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch4_unmap1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch4_unmap1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch4_unmap1.asm	/^void exit(int code)$/;"	l
void	asm/ch4_unmap1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5_exit0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5_exit0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5_exit0.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5_exit0.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5_exit0.asm	/^void exit(int code)$/;"	l
void	asm/ch5_exit0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5_exit1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5_exit1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5_exit1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5_exit1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5_exit1.asm	/^void exit(int code)$/;"	l
void	asm/ch5_exit1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5_mergetest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5_mergetest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5_mergetest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5_mergetest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5_mergetest.asm	/^void exit(int code)$/;"	l
void	asm/ch5_mergetest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5_ppid.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5_ppid.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5_ppid.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5_ppid.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5_ppid.asm	/^void exit(int code)$/;"	l
void	asm/ch5_ppid.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5_setprio.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5_setprio.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5_setprio.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5_setprio.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5_setprio.asm	/^void exit(int code)$/;"	l
void	asm/ch5_setprio.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5_spawn0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5_spawn0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5_spawn0.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5_spawn0.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5_spawn0.asm	/^void exit(int code)$/;"	l
void	asm/ch5_spawn0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5_spawn1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5_spawn1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5_spawn1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5_spawn1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5_spawn1.asm	/^void exit(int code)$/;"	l
void	asm/ch5_spawn1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5_usertest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5_usertest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5_usertest.asm	/^void exit(int code)$/;"	l
void	asm/ch5_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5b_exec_simple.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5b_exec_simple.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5b_exec_simple.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5b_exec_simple.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5b_exec_simple.asm	/^void exit(int code)$/;"	l
void	asm/ch5b_exec_simple.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5b_exit.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5b_exit.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5b_exit.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5b_exit.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5b_exit.asm	/^void exit(int code)$/;"	l
void	asm/ch5b_exit.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5b_forktest0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5b_forktest0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5b_forktest0.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5b_forktest0.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5b_forktest0.asm	/^void exit(int code)$/;"	l
void	asm/ch5b_forktest0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5b_forktest1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5b_forktest1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5b_forktest1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5b_forktest1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5b_forktest1.asm	/^void exit(int code)$/;"	l
void	asm/ch5b_forktest1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5b_forktest2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5b_forktest2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5b_forktest2.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5b_forktest2.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5b_forktest2.asm	/^void exit(int code)$/;"	l
void	asm/ch5b_forktest2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5b_getpid.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5b_getpid.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5b_getpid.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5b_getpid.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5b_getpid.asm	/^void exit(int code)$/;"	l
void	asm/ch5b_getpid.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5b_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5b_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5b_usertest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5b_usertest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5b_usertest.asm	/^void exit(int code)$/;"	l
void	asm/ch5b_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5t_stride0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5t_stride0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5t_stride0.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5t_stride0.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5t_stride0.asm	/^void exit(int code)$/;"	l
void	asm/ch5t_stride0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5t_stride1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5t_stride1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5t_stride1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5t_stride1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5t_stride1.asm	/^void exit(int code)$/;"	l
void	asm/ch5t_stride1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5t_stride2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5t_stride2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5t_stride2.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5t_stride2.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5t_stride2.asm	/^void exit(int code)$/;"	l
void	asm/ch5t_stride2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5t_stride3.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5t_stride3.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5t_stride3.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5t_stride3.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5t_stride3.asm	/^void exit(int code)$/;"	l
void	asm/ch5t_stride3.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5t_stride4.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5t_stride4.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5t_stride4.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5t_stride4.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5t_stride4.asm	/^void exit(int code)$/;"	l
void	asm/ch5t_stride4.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5t_stride5.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5t_stride5.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5t_stride5.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5t_stride5.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5t_stride5.asm	/^void exit(int code)$/;"	l
void	asm/ch5t_stride5.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch5t_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch5t_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch5t_usertest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch5t_usertest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch5t_usertest.asm	/^void exit(int code)$/;"	l
void	asm/ch5t_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6_file0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6_file0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6_file0.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6_file0.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6_file0.asm	/^void exit(int code)$/;"	l
void	asm/ch6_file0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6_file1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6_file1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6_file1.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6_file1.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6_file1.asm	/^void exit(int code)$/;"	l
void	asm/ch6_file1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6_file2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6_file2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6_file2.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6_file2.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6_file2.asm	/^void exit(int code)$/;"	l
void	asm/ch6_file2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6_file3.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6_file3.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6_file3.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6_file3.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6_file3.asm	/^void exit(int code)$/;"	l
void	asm/ch6_file3.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6_file3.asm	/^void repeat(char *target, const char *template, int times)$/;"	l
void	asm/ch6_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6_usertest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6_usertest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6_usertest.asm	/^void exit(int code)$/;"	l
void	asm/ch6_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6b_args.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6b_args.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6b_args.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6b_args.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6b_args.asm	/^void exit(int code)$/;"	l
void	asm/ch6b_args.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6b_assert.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6b_assert.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6b_assert.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6b_assert.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6b_assert.asm	/^void exit(int code)$/;"	l
void	asm/ch6b_assert.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6b_cat.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6b_cat.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6b_cat.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6b_cat.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6b_cat.asm	/^void exit(int code)$/;"	l
void	asm/ch6b_cat.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6b_exec.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6b_exec.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6b_exec.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6b_exec.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6b_exec.asm	/^void exit(int code)$/;"	l
void	asm/ch6b_exec.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6b_filetest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6b_filetest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6b_filetest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6b_filetest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6b_filetest.asm	/^void exit(int code)$/;"	l
void	asm/ch6b_filetest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6b_filetest_simple.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6b_filetest_simple.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6b_filetest_simple.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6b_filetest_simple.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6b_filetest_simple.asm	/^void exit(int code)$/;"	l
void	asm/ch6b_filetest_simple.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6b_panic.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6b_panic.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6b_panic.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6b_panic.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6b_panic.asm	/^void exit(int code)$/;"	l
void	asm/ch6b_panic.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch6b_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch6b_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch6b_usertest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch6b_usertest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch6b_usertest.asm	/^void exit(int code)$/;"	l
void	asm/ch6b_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch7b_pipetest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch7b_pipetest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch7b_pipetest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch7b_pipetest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch7b_pipetest.asm	/^void exit(int code)$/;"	l
void	asm/ch7b_pipetest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch7b_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch7b_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch7b_usertest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch7b_usertest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch7b_usertest.asm	/^void exit(int code)$/;"	l
void	asm/ch7b_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8_mut1_deadlock.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8_mut1_deadlock.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8_mut1_deadlock.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8_mut1_deadlock.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8_mut1_deadlock.asm	/^void exit(int code)$/;"	l
void	asm/ch8_mut1_deadlock.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void deadlock_test(long _id)$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void exit(int code)$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void sem_alloc(int tid)$/;"	l
void	asm/ch8_sem1_deadlock.asm	/^void sem_dealloc(int tid)$/;"	l
void	asm/ch8_sem2_deadlock.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8_sem2_deadlock.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8_sem2_deadlock.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8_sem2_deadlock.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8_sem2_deadlock.asm	/^void deadlock_test(long _id)$/;"	l
void	asm/ch8_sem2_deadlock.asm	/^void exit(int code)$/;"	l
void	asm/ch8_sem2_deadlock.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8_sem2_deadlock.asm	/^void try_sem_down(int id, int sem_id)$/;"	l
void	asm/ch8_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8_usertest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8_usertest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8_usertest.asm	/^void exit(int code)$/;"	l
void	asm/ch8_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_mpsc_sem.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_mpsc_sem.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_mpsc_sem.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_mpsc_sem.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_mpsc_sem.asm	/^void consumer()$/;"	l
void	asm/ch8b_mpsc_sem.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_mpsc_sem.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_mpsc_sem.asm	/^void producer(int id)$/;"	l
void	asm/ch8b_mut_phi_din.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_mut_phi_din.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_mut_phi_din.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_mut_phi_din.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_mut_phi_din.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_mut_phi_din.asm	/^void philosopher_dining(long id)$/;"	l
void	asm/ch8b_mut_phi_din.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_mut_race.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_mut_race.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_mut_race.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_mut_race.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_mut_race.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_mut_race.asm	/^void fun(long i)$/;"	l
void	asm/ch8b_mut_race.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_spin_mut_race.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_spin_mut_race.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_spin_mut_race.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_spin_mut_race.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_spin_mut_race.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_spin_mut_race.asm	/^void fun()$/;"	l
void	asm/ch8b_spin_mut_race.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_sync_sem.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_sync_sem.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_sync_sem.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_sync_sem.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_sync_sem.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_sync_sem.asm	/^void first()$/;"	l
void	asm/ch8b_sync_sem.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_sync_sem.asm	/^void second()$/;"	l
void	asm/ch8b_test_condvar.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_test_condvar.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_test_condvar.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_test_condvar.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_test_condvar.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_test_condvar.asm	/^void first()$/;"	l
void	asm/ch8b_test_condvar.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_test_condvar.asm	/^void second()$/;"	l
void	asm/ch8b_threads.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_threads.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_threads.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_threads.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_threads.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_threads.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_threads.asm	/^void thread_a()$/;"	l
void	asm/ch8b_threads.asm	/^void thread_b()$/;"	l
void	asm/ch8b_threads.asm	/^void thread_c()$/;"	l
void	asm/ch8b_threads_arg.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_threads_arg.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_threads_arg.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_threads_arg.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_threads_arg.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_threads_arg.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/ch8b_threads_arg.asm	/^void thread(struct thread_arg *arg)$/;"	l
void	asm/ch8b_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/ch8b_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/ch8b_usertest.asm	/^void __clear_buffer()$/;"	l
void	asm/ch8b_usertest.asm	/^void __clear_buffer();$/;"	l
void	asm/ch8b_usertest.asm	/^void exit(int code)$/;"	l
void	asm/ch8b_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/usershell.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	asm/usershell.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	asm/usershell.asm	/^void __clear_buffer()$/;"	l
void	asm/usershell.asm	/^void __clear_buffer();$/;"	l
void	asm/usershell.asm	/^void clear()$/;"	l
void	asm/usershell.asm	/^void exit(int code)$/;"	l
void	asm/usershell.asm	/^void get_argv()$/;"	l
void	asm/usershell.asm	/^void parse_argv()$/;"	l
void	asm/usershell.asm	/^void pop()$/;"	l
void	asm/usershell.asm	/^void printf(const char *fmt, ...)$/;"	l
void	asm/usershell.asm	/^void push(char c)$/;"	l
void	build/asm/__ch2_bad_address.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/__ch2_bad_address.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/__ch2_bad_address.asm	/^void __clear_buffer()$/;"	l
void	build/asm/__ch2_bad_address.asm	/^void __clear_buffer();$/;"	l
void	build/asm/__ch2_bad_address.asm	/^void exit(int code)$/;"	l
void	build/asm/__ch2_bad_address.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/__ch2_bad_instruction.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/__ch2_bad_instruction.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/__ch2_bad_instruction.asm	/^void __clear_buffer()$/;"	l
void	build/asm/__ch2_bad_instruction.asm	/^void __clear_buffer();$/;"	l
void	build/asm/__ch2_bad_instruction.asm	/^void exit(int code)$/;"	l
void	build/asm/__ch2_bad_instruction.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/__ch2_bad_register.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/__ch2_bad_register.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/__ch2_bad_register.asm	/^void __clear_buffer()$/;"	l
void	build/asm/__ch2_bad_register.asm	/^void __clear_buffer();$/;"	l
void	build/asm/__ch2_bad_register.asm	/^void exit(int code)$/;"	l
void	build/asm/__ch2_bad_register.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch2b_exit.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch2b_exit.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch2b_exit.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch2b_exit.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch2b_exit.asm	/^void exit(int code)$/;"	l
void	build/asm/ch2b_exit.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch2b_hello_world.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch2b_hello_world.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch2b_hello_world.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch2b_hello_world.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch2b_hello_world.asm	/^void exit(int code)$/;"	l
void	build/asm/ch2b_hello_world.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch2b_power.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch2b_power.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch2b_power.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch2b_power.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch2b_power.asm	/^void exit(int code)$/;"	l
void	build/asm/ch2b_power.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch3_taskinfo.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch3_taskinfo.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch3_taskinfo.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch3_taskinfo.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch3_taskinfo.asm	/^void exit(int code)$/;"	l
void	build/asm/ch3_taskinfo.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch3b_sleep.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch3b_sleep.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch3b_sleep.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch3b_sleep.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch3b_sleep.asm	/^void exit(int code)$/;"	l
void	build/asm/ch3b_sleep.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch3b_sleep1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch3b_sleep1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch3b_sleep1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch3b_sleep1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch3b_sleep1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch3b_sleep1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch3b_yield0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch3b_yield0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch3b_yield0.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch3b_yield0.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch3b_yield0.asm	/^void exit(int code)$/;"	l
void	build/asm/ch3b_yield0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch3b_yield1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch3b_yield1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch3b_yield1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch3b_yield1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch3b_yield1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch3b_yield1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch3b_yield2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch3b_yield2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch3b_yield2.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch3b_yield2.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch3b_yield2.asm	/^void exit(int code)$/;"	l
void	build/asm/ch3b_yield2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch4_mmap0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch4_mmap0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch4_mmap0.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch4_mmap0.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch4_mmap0.asm	/^void exit(int code)$/;"	l
void	build/asm/ch4_mmap0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch4_mmap1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch4_mmap1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch4_mmap1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch4_mmap1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch4_mmap1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch4_mmap1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch4_mmap2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch4_mmap2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch4_mmap2.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch4_mmap2.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch4_mmap2.asm	/^void exit(int code)$/;"	l
void	build/asm/ch4_mmap2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch4_mmap3.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch4_mmap3.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch4_mmap3.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch4_mmap3.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch4_mmap3.asm	/^void exit(int code)$/;"	l
void	build/asm/ch4_mmap3.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch4_unmap0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch4_unmap0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch4_unmap0.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch4_unmap0.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch4_unmap0.asm	/^void exit(int code)$/;"	l
void	build/asm/ch4_unmap0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch4_unmap1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch4_unmap1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch4_unmap1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch4_unmap1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch4_unmap1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch4_unmap1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5_exit0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5_exit0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5_exit0.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5_exit0.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5_exit0.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5_exit0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5_exit1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5_exit1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5_exit1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5_exit1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5_exit1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5_exit1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5_mergetest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5_mergetest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5_mergetest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5_mergetest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5_mergetest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5_mergetest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5_ppid.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5_ppid.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5_ppid.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5_ppid.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5_ppid.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5_ppid.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5_setprio.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5_setprio.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5_setprio.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5_setprio.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5_setprio.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5_setprio.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5_spawn0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5_spawn0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5_spawn0.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5_spawn0.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5_spawn0.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5_spawn0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5_spawn1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5_spawn1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5_spawn1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5_spawn1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5_spawn1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5_spawn1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5_usertest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5_usertest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5_usertest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5b_exec_simple.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5b_exec_simple.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5b_exec_simple.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5b_exec_simple.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5b_exec_simple.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5b_exec_simple.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5b_exit.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5b_exit.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5b_exit.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5b_exit.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5b_exit.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5b_exit.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5b_forktest0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5b_forktest0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5b_forktest0.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5b_forktest0.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5b_forktest0.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5b_forktest0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5b_forktest1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5b_forktest1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5b_forktest1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5b_forktest1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5b_forktest1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5b_forktest1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5b_forktest2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5b_forktest2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5b_forktest2.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5b_forktest2.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5b_forktest2.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5b_forktest2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5b_getpid.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5b_getpid.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5b_getpid.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5b_getpid.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5b_getpid.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5b_getpid.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5b_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5b_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5b_usertest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5b_usertest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5b_usertest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5b_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5t_stride0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride0.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5t_stride0.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5t_stride0.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5t_stride0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5t_stride1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5t_stride1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5t_stride1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5t_stride1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5t_stride2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride2.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5t_stride2.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5t_stride2.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5t_stride2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5t_stride3.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride3.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride3.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5t_stride3.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5t_stride3.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5t_stride3.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5t_stride4.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride4.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride4.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5t_stride4.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5t_stride4.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5t_stride4.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5t_stride5.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride5.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5t_stride5.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5t_stride5.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5t_stride5.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5t_stride5.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch5t_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch5t_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch5t_usertest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch5t_usertest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch5t_usertest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch5t_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6_file0.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6_file0.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6_file0.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6_file0.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6_file0.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6_file0.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6_file1.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6_file1.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6_file1.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6_file1.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6_file1.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6_file1.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6_file2.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6_file2.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6_file2.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6_file2.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6_file2.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6_file2.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6_file3.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6_file3.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6_file3.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6_file3.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6_file3.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6_file3.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6_file3.asm	/^void repeat(char *target, const char *template, int times)$/;"	l
void	build/asm/ch6_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6_usertest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6_usertest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6_usertest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6b_args.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6b_args.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6b_args.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6b_args.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6b_args.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6b_args.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6b_assert.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6b_assert.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6b_assert.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6b_assert.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6b_assert.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6b_assert.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6b_cat.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6b_cat.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6b_cat.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6b_cat.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6b_cat.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6b_cat.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6b_exec.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6b_exec.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6b_exec.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6b_exec.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6b_exec.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6b_exec.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6b_filetest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6b_filetest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6b_filetest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6b_filetest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6b_filetest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6b_filetest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6b_filetest_simple.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6b_filetest_simple.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6b_filetest_simple.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6b_filetest_simple.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6b_filetest_simple.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6b_filetest_simple.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6b_panic.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6b_panic.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6b_panic.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6b_panic.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6b_panic.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6b_panic.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch6b_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch6b_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch6b_usertest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch6b_usertest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch6b_usertest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch6b_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch7b_pipetest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch7b_pipetest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch7b_pipetest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch7b_pipetest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch7b_pipetest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch7b_pipetest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch7b_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch7b_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch7b_usertest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch7b_usertest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch7b_usertest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch7b_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8_mut1_deadlock.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8_mut1_deadlock.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8_mut1_deadlock.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8_mut1_deadlock.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8_mut1_deadlock.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8_mut1_deadlock.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void deadlock_test(long _id)$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void sem_alloc(int tid)$/;"	l
void	build/asm/ch8_sem1_deadlock.asm	/^void sem_dealloc(int tid)$/;"	l
void	build/asm/ch8_sem2_deadlock.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8_sem2_deadlock.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8_sem2_deadlock.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8_sem2_deadlock.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8_sem2_deadlock.asm	/^void deadlock_test(long _id)$/;"	l
void	build/asm/ch8_sem2_deadlock.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8_sem2_deadlock.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8_sem2_deadlock.asm	/^void try_sem_down(int id, int sem_id)$/;"	l
void	build/asm/ch8_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8_usertest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8_usertest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8_usertest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_mpsc_sem.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_mpsc_sem.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_mpsc_sem.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_mpsc_sem.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_mpsc_sem.asm	/^void consumer()$/;"	l
void	build/asm/ch8b_mpsc_sem.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_mpsc_sem.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_mpsc_sem.asm	/^void producer(int id)$/;"	l
void	build/asm/ch8b_mut_phi_din.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_mut_phi_din.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_mut_phi_din.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_mut_phi_din.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_mut_phi_din.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_mut_phi_din.asm	/^void philosopher_dining(long id)$/;"	l
void	build/asm/ch8b_mut_phi_din.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_mut_race.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_mut_race.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_mut_race.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_mut_race.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_mut_race.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_mut_race.asm	/^void fun(long i)$/;"	l
void	build/asm/ch8b_mut_race.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_spin_mut_race.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_spin_mut_race.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_spin_mut_race.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_spin_mut_race.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_spin_mut_race.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_spin_mut_race.asm	/^void fun()$/;"	l
void	build/asm/ch8b_spin_mut_race.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_sync_sem.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_sync_sem.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_sync_sem.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_sync_sem.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_sync_sem.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_sync_sem.asm	/^void first()$/;"	l
void	build/asm/ch8b_sync_sem.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_sync_sem.asm	/^void second()$/;"	l
void	build/asm/ch8b_test_condvar.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_test_condvar.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_test_condvar.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_test_condvar.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_test_condvar.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_test_condvar.asm	/^void first()$/;"	l
void	build/asm/ch8b_test_condvar.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_test_condvar.asm	/^void second()$/;"	l
void	build/asm/ch8b_threads.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_threads.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_threads.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_threads.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_threads.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_threads.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_threads.asm	/^void thread_a()$/;"	l
void	build/asm/ch8b_threads.asm	/^void thread_b()$/;"	l
void	build/asm/ch8b_threads.asm	/^void thread_c()$/;"	l
void	build/asm/ch8b_threads_arg.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_threads_arg.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_threads_arg.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_threads_arg.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_threads_arg.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_threads_arg.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/ch8b_threads_arg.asm	/^void thread(struct thread_arg *arg)$/;"	l
void	build/asm/ch8b_usertest.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/ch8b_usertest.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/ch8b_usertest.asm	/^void __clear_buffer()$/;"	l
void	build/asm/ch8b_usertest.asm	/^void __clear_buffer();$/;"	l
void	build/asm/ch8b_usertest.asm	/^void exit(int code)$/;"	l
void	build/asm/ch8b_usertest.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/usershell.asm	/^void *memchr(const void *src, int c, size_t n)$/;"	l
void	build/asm/usershell.asm	/^void *memset(void *dest, int c, size_t n)$/;"	l
void	build/asm/usershell.asm	/^void __clear_buffer()$/;"	l
void	build/asm/usershell.asm	/^void __clear_buffer();$/;"	l
void	build/asm/usershell.asm	/^void clear()$/;"	l
void	build/asm/usershell.asm	/^void exit(int code)$/;"	l
void	build/asm/usershell.asm	/^void get_argv()$/;"	l
void	build/asm/usershell.asm	/^void parse_argv()$/;"	l
void	build/asm/usershell.asm	/^void pop()$/;"	l
void	build/asm/usershell.asm	/^void printf(const char *fmt, ...)$/;"	l
void	build/asm/usershell.asm	/^void push(char c)$/;"	l
volatile	build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
wait	lib/syscall.c	/^int wait(int *code)$/;"	f
waitpid	lib/syscall.c	/^int waitpid(int pid, int *code)$/;"	f
waittid	lib/syscall.c	/^int waittid(int tid)$/;"	f
wd	asm/__ch2_bad_address.asm	/^		wd = (void *)d;$/;"	d
wd	asm/__ch2_bad_instruction.asm	/^		wd = (void *)d;$/;"	d
wd	asm/__ch2_bad_register.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch2b_exit.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch2b_hello_world.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch2b_power.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch3_taskinfo.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch3b_sleep.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch3b_sleep1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch3b_yield0.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch3b_yield1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch3b_yield2.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch4_mmap0.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch4_mmap1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch4_mmap2.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch4_mmap3.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch4_unmap0.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch4_unmap1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5_exit0.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5_exit1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5_mergetest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5_ppid.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5_setprio.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5_spawn0.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5_spawn1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5b_exec_simple.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5b_exit.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5b_forktest0.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5b_forktest1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5b_forktest2.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5b_getpid.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5b_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5t_stride0.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5t_stride1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5t_stride2.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5t_stride3.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5t_stride4.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5t_stride5.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch5t_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6_file0.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6_file1.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6_file2.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6_file3.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6b_args.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6b_assert.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6b_cat.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6b_exec.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6b_filetest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6b_filetest_simple.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6b_panic.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch6b_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch7b_pipetest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch7b_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8_mut1_deadlock.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8_sem1_deadlock.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8_sem2_deadlock.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_mpsc_sem.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_mut_phi_din.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_mut_race.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_spin_mut_race.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_sync_sem.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_test_condvar.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_threads.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_threads_arg.asm	/^		wd = (void *)d;$/;"	d
wd	asm/ch8b_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	asm/usershell.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/__ch2_bad_address.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/__ch2_bad_instruction.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/__ch2_bad_register.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch2b_exit.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch2b_hello_world.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch2b_power.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch3_taskinfo.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch3b_sleep.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch3b_sleep1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch3b_yield0.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch3b_yield1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch3b_yield2.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch4_mmap0.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch4_mmap1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch4_mmap2.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch4_mmap3.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch4_unmap0.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch4_unmap1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5_exit0.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5_exit1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5_mergetest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5_ppid.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5_setprio.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5_spawn0.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5_spawn1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5b_exec_simple.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5b_exit.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5b_forktest0.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5b_forktest1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5b_forktest2.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5b_getpid.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5b_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5t_stride0.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5t_stride1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5t_stride2.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5t_stride3.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5t_stride4.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5t_stride5.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch5t_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6_file0.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6_file1.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6_file2.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6_file3.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6b_args.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6b_assert.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6b_cat.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6b_exec.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6b_filetest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6b_filetest_simple.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6b_panic.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch6b_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch7b_pipetest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch7b_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8_mut1_deadlock.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8_sem1_deadlock.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8_sem2_deadlock.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_mpsc_sem.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_mut_phi_din.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_mut_race.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_spin_mut_race.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_sync_sem.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_test_condvar.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_threads.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_threads_arg.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/ch8b_usertest.asm	/^		wd = (void *)d;$/;"	d
wd	build/asm/usershell.asm	/^		wd = (void *)d;$/;"	d
write	lib/syscall.c	/^ssize_t write(int fd, const void *buf, size_t len)$/;"	f
ws	asm/__ch2_bad_address.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/__ch2_bad_instruction.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/__ch2_bad_register.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch2b_exit.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch2b_hello_world.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch2b_power.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch3_taskinfo.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch3b_sleep.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch3b_sleep1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch3b_yield0.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch3b_yield1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch3b_yield2.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch4_mmap0.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch4_mmap1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch4_mmap2.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch4_mmap3.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch4_unmap0.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch4_unmap1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5_exit0.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5_exit1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5_mergetest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5_ppid.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5_setprio.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5_spawn0.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5_spawn1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5b_exec_simple.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5b_exit.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5b_forktest0.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5b_forktest1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5b_forktest2.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5b_getpid.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5b_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5t_stride0.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5t_stride1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5t_stride2.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5t_stride3.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5t_stride4.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5t_stride5.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch5t_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6_file0.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6_file1.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6_file2.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6_file3.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6b_args.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6b_assert.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6b_cat.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6b_exec.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6b_filetest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6b_filetest_simple.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6b_panic.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch6b_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch7b_pipetest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch7b_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8_mut1_deadlock.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8_sem1_deadlock.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8_sem2_deadlock.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_mpsc_sem.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_mut_phi_din.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_mut_race.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_spin_mut_race.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_sync_sem.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_test_condvar.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_threads.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_threads_arg.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/ch8b_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	asm/usershell.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/__ch2_bad_address.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/__ch2_bad_instruction.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/__ch2_bad_register.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch2b_exit.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch2b_hello_world.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch2b_power.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch3_taskinfo.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch3b_sleep.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch3b_sleep1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch3b_yield0.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch3b_yield1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch3b_yield2.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch4_mmap0.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch4_mmap1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch4_mmap2.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch4_mmap3.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch4_unmap0.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch4_unmap1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5_exit0.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5_exit1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5_mergetest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5_ppid.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5_setprio.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5_spawn0.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5_spawn1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5b_exec_simple.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5b_exit.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5b_forktest0.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5b_forktest1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5b_forktest2.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5b_getpid.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5b_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5t_stride0.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5t_stride1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5t_stride2.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5t_stride3.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5t_stride4.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5t_stride5.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch5t_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6_file0.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6_file1.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6_file2.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6_file3.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6b_args.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6b_assert.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6b_cat.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6b_exec.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6b_filetest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6b_filetest_simple.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6b_panic.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch6b_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch7b_pipetest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch7b_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8_mut1_deadlock.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8_sem1_deadlock.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8_sem2_deadlock.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_mpsc_sem.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_mut_phi_din.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_mut_race.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_spin_mut_race.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_sync_sem.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_test_condvar.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_threads.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_threads_arg.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/ch8b_usertest.asm	/^		ws = (const void *)s;$/;"	d
ws	build/asm/usershell.asm	/^		ws = (const void *)s;$/;"	d
x	asm/__ch2_bad_address.asm	/^		x = -xx;$/;"	d
x	asm/__ch2_bad_instruction.asm	/^		x = -xx;$/;"	d
x	asm/__ch2_bad_register.asm	/^		x = -xx;$/;"	d
x	asm/ch2b_exit.asm	/^		x = -xx;$/;"	d
x	asm/ch2b_hello_world.asm	/^		x = -xx;$/;"	d
x	asm/ch2b_power.asm	/^		x = -xx;$/;"	d
x	asm/ch3_taskinfo.asm	/^		x = -xx;$/;"	d
x	asm/ch3b_sleep.asm	/^		x = -xx;$/;"	d
x	asm/ch3b_sleep1.asm	/^		x = -xx;$/;"	d
x	asm/ch3b_yield0.asm	/^		x = -xx;$/;"	d
x	asm/ch3b_yield1.asm	/^		x = -xx;$/;"	d
x	asm/ch3b_yield2.asm	/^		x = -xx;$/;"	d
x	asm/ch4_mmap0.asm	/^		x = -xx;$/;"	d
x	asm/ch4_mmap1.asm	/^		x = -xx;$/;"	d
x	asm/ch4_mmap2.asm	/^		x = -xx;$/;"	d
x	asm/ch4_mmap3.asm	/^		x = -xx;$/;"	d
x	asm/ch4_unmap0.asm	/^		x = -xx;$/;"	d
x	asm/ch4_unmap1.asm	/^		x = -xx;$/;"	d
x	asm/ch5_exit0.asm	/^		x = -xx;$/;"	d
x	asm/ch5_exit1.asm	/^		x = -xx;$/;"	d
x	asm/ch5_mergetest.asm	/^		x = -xx;$/;"	d
x	asm/ch5_ppid.asm	/^		x = -xx;$/;"	d
x	asm/ch5_setprio.asm	/^		x = -xx;$/;"	d
x	asm/ch5_spawn0.asm	/^		x = -xx;$/;"	d
x	asm/ch5_spawn1.asm	/^		x = -xx;$/;"	d
x	asm/ch5_usertest.asm	/^		x = -xx;$/;"	d
x	asm/ch5b_exec_simple.asm	/^		x = -xx;$/;"	d
x	asm/ch5b_exit.asm	/^		x = -xx;$/;"	d
x	asm/ch5b_forktest0.asm	/^		x = -xx;$/;"	d
x	asm/ch5b_forktest1.asm	/^		x = -xx;$/;"	d
x	asm/ch5b_forktest2.asm	/^		x = -xx;$/;"	d
x	asm/ch5b_getpid.asm	/^		x = -xx;$/;"	d
x	asm/ch5b_usertest.asm	/^		x = -xx;$/;"	d
x	asm/ch5t_stride0.asm	/^		x = -xx;$/;"	d
x	asm/ch5t_stride1.asm	/^		x = -xx;$/;"	d
x	asm/ch5t_stride2.asm	/^		x = -xx;$/;"	d
x	asm/ch5t_stride3.asm	/^		x = -xx;$/;"	d
x	asm/ch5t_stride4.asm	/^		x = -xx;$/;"	d
x	asm/ch5t_stride5.asm	/^		x = -xx;$/;"	d
x	asm/ch5t_usertest.asm	/^		x = -xx;$/;"	d
x	asm/ch6_file0.asm	/^		x = -xx;$/;"	d
x	asm/ch6_file1.asm	/^		x = -xx;$/;"	d
x	asm/ch6_file2.asm	/^		x = -xx;$/;"	d
x	asm/ch6_file3.asm	/^		x = -xx;$/;"	d
x	asm/ch6_usertest.asm	/^		x = -xx;$/;"	d
x	asm/ch6b_args.asm	/^		x = -xx;$/;"	d
x	asm/ch6b_assert.asm	/^		x = -xx;$/;"	d
x	asm/ch6b_cat.asm	/^		x = -xx;$/;"	d
x	asm/ch6b_exec.asm	/^		x = -xx;$/;"	d
x	asm/ch6b_filetest.asm	/^		x = -xx;$/;"	d
x	asm/ch6b_filetest_simple.asm	/^		x = -xx;$/;"	d
x	asm/ch6b_panic.asm	/^		x = -xx;$/;"	d
x	asm/ch6b_usertest.asm	/^		x = -xx;$/;"	d
x	asm/ch7b_pipetest.asm	/^		x = -xx;$/;"	d
x	asm/ch7b_usertest.asm	/^		x = -xx;$/;"	d
x	asm/ch8_mut1_deadlock.asm	/^		x = -xx;$/;"	d
x	asm/ch8_sem1_deadlock.asm	/^		x = -xx;$/;"	d
x	asm/ch8_sem2_deadlock.asm	/^		x = -xx;$/;"	d
x	asm/ch8_usertest.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_mpsc_sem.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_mut_phi_din.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_mut_race.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_spin_mut_race.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_sync_sem.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_test_condvar.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_threads.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_threads_arg.asm	/^		x = -xx;$/;"	d
x	asm/ch8b_usertest.asm	/^		x = -xx;$/;"	d
x	asm/usershell.asm	/^		x = -xx;$/;"	d
x	build/asm/__ch2_bad_address.asm	/^		x = -xx;$/;"	d
x	build/asm/__ch2_bad_instruction.asm	/^		x = -xx;$/;"	d
x	build/asm/__ch2_bad_register.asm	/^		x = -xx;$/;"	d
x	build/asm/ch2b_exit.asm	/^		x = -xx;$/;"	d
x	build/asm/ch2b_hello_world.asm	/^		x = -xx;$/;"	d
x	build/asm/ch2b_power.asm	/^		x = -xx;$/;"	d
x	build/asm/ch3_taskinfo.asm	/^		x = -xx;$/;"	d
x	build/asm/ch3b_sleep.asm	/^		x = -xx;$/;"	d
x	build/asm/ch3b_sleep1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch3b_yield0.asm	/^		x = -xx;$/;"	d
x	build/asm/ch3b_yield1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch3b_yield2.asm	/^		x = -xx;$/;"	d
x	build/asm/ch4_mmap0.asm	/^		x = -xx;$/;"	d
x	build/asm/ch4_mmap1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch4_mmap2.asm	/^		x = -xx;$/;"	d
x	build/asm/ch4_mmap3.asm	/^		x = -xx;$/;"	d
x	build/asm/ch4_unmap0.asm	/^		x = -xx;$/;"	d
x	build/asm/ch4_unmap1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5_exit0.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5_exit1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5_mergetest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5_ppid.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5_setprio.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5_spawn0.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5_spawn1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5_usertest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5b_exec_simple.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5b_exit.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5b_forktest0.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5b_forktest1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5b_forktest2.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5b_getpid.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5b_usertest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5t_stride0.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5t_stride1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5t_stride2.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5t_stride3.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5t_stride4.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5t_stride5.asm	/^		x = -xx;$/;"	d
x	build/asm/ch5t_usertest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6_file0.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6_file1.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6_file2.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6_file3.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6_usertest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6b_args.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6b_assert.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6b_cat.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6b_exec.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6b_filetest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6b_filetest_simple.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6b_panic.asm	/^		x = -xx;$/;"	d
x	build/asm/ch6b_usertest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch7b_pipetest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch7b_usertest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8_mut1_deadlock.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8_sem1_deadlock.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8_sem2_deadlock.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8_usertest.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_mpsc_sem.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_mut_phi_din.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_mut_race.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_spin_mut_race.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_sync_sem.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_test_condvar.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_threads.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_threads_arg.asm	/^		x = -xx;$/;"	d
x	build/asm/ch8b_usertest.asm	/^		x = -xx;$/;"	d
x	build/asm/usershell.asm	/^		x = -xx;$/;"	d
